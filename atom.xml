<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安静-不安静的博客</title>
  
  <link href="https:///AnJingwd.github.io/atom.xml" rel="self"/>
  
  <link href="https:///AnJingwd.github.io/"/>
  <updated>2018-05-09T14:15:10.652Z</updated>
  <id>https:///AnJingwd.github.io/</id>
  
  <author>
    <name>AJ&#39;s blog</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>k_means聚类算法python实现</title>
    <link href="https:///AnJingwd.github.io/2018/05/09/k-means%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95python%E5%AE%9E%E7%8E%B0/"/>
    <id>https:///AnJingwd.github.io/2018/05/09/k-means聚类算法python实现/</id>
    <published>2018-05-09T14:04:50.000Z</published>
    <updated>2018-05-09T14:15:10.652Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">k_means聚类算法python实现，并对50个基因表达量聚类</blockquote>

<a id="more"></a>
<h2 id="k-means-聚类"><a href="#k-means-聚类" class="headerlink" title="k means 聚类"></a>k means 聚类</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>K-means算法以k为参数，把n个对象分为k个簇，使簇内具有较高的相似度，而簇间的相似度较低。</p>
<ol>
<li>随机选择K个点作为初始的聚类中心</li>
<li>对于剩下的点，根据其与聚类中心的距离，将其归入最近的簇</li>
<li>对每个簇，计算所有点的均值作为新的聚类中心</li>
<li>重复步骤2,3直到聚类中心不再变化</li>
</ol>
<h3 id="K-meas-cluster-py"><a href="#K-meas-cluster-py" class="headerlink" title="K_meas_cluster.py"></a>K_meas_cluster.py</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> math,os,random</div><div class="line"></div><div class="line"></div><div class="line">os.chdir(<span class="string">r'F:\pycharm_project\cluster'</span>)</div><div class="line">data = pd.read_csv(<span class="string">r'.\microarray_gcrma_diff_TOP50.csv'</span>,nrows = <span class="number">51</span>,header=<span class="keyword">None</span>)</div><div class="line">Exp_matrix = np.array(data.iloc[<span class="number">1</span>:<span class="number">51</span>,<span class="number">1</span>:<span class="number">3</span>],dtype =np.float64)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_k_start</span><span class="params">(A,k)</span>:</span></div><div class="line">	k_point_list = []</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,k):</div><div class="line">		random_index = random.randint(<span class="number">0</span>, A.shape[<span class="number">0</span>])</div><div class="line">		k_point_list.append(A[random_index])</div><div class="line">	<span class="keyword">return</span> k_point_list</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Euclidean_Distances</span><span class="params">(a,b)</span>:</span></div><div class="line">	d = math.sqrt((a[<span class="number">0</span>] - b[<span class="number">0</span>]) ** <span class="number">2</span> + (a[<span class="number">1</span>] - b[<span class="number">1</span>]) ** <span class="number">2</span>)</div><div class="line">	<span class="keyword">return</span> d</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span>  <span class="title">classify_points</span><span class="params">(A,center)</span>:</span></div><div class="line">	classified_list = []</div><div class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, len(center)):</div><div class="line">		names = locals()</div><div class="line">		names[<span class="string">'point_list%s'</span> % j] = []</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,A.shape[<span class="number">0</span>]):</div><div class="line">		dis_list = []</div><div class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,len(center)):</div><div class="line">			dis = Euclidean_Distances(A[i],center[j])</div><div class="line">			dis_list.append(dis)</div><div class="line">		min_dis_index =dis_list.index(min(dis_list))</div><div class="line">		names[<span class="string">'point_list%s'</span> % min_dis_index].append(A[i])</div><div class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,len(center)):</div><div class="line">		classified_list.append(names[<span class="string">'point_list%s'</span> % j])</div><div class="line">	<span class="keyword">return</span> classified_list</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">creat_new_center</span><span class="params">(mylist)</span>:</span></div><div class="line">	center_new = []</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(mylist)):</div><div class="line">		point_x_sum = <span class="number">0</span></div><div class="line">		point_y_sum = <span class="number">0</span></div><div class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, len(mylist[i])):</div><div class="line">			point_x_sum += mylist[i][j][<span class="number">0</span>]</div><div class="line">			point_y_sum += mylist[i][j][<span class="number">1</span>]</div><div class="line">		point_pos = [point_x_sum/len(mylist[i]),point_y_sum/len(mylist[i])]</div><div class="line">		center_new.append(point_pos)</div><div class="line">	<span class="keyword">return</span> center_new</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">k_mens_loop</span><span class="params">(A,k)</span>:</span></div><div class="line">	start = random_k_start(A,k)</div><div class="line">	classified_list = classify_points(A, start)</div><div class="line"></div><div class="line">	center_new = creat_new_center(classified_list)</div><div class="line">	classified_list = classify_points(A, center_new)</div><div class="line">	center_new_next = creat_new_center(classified_list)</div><div class="line"></div><div class="line">	<span class="keyword">while</span> center_new != center_new_next:</div><div class="line">		center_new = creat_new_center(classified_list)</div><div class="line">		classified_list = classify_points(A, center_new)</div><div class="line">		center_new_next= creat_new_center(classified_list)</div><div class="line">	<span class="keyword">return</span> classified_list</div><div class="line"></div><div class="line">result_k_means_cluster = k_mens_loop(Exp_matrix,<span class="number">3</span>)</div><div class="line">print(result_k_means_cluster)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">format_cluster_result</span><span class="params">(mylist)</span>:</span></div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(mylist)):</div><div class="line">		print(<span class="string">"The "</span>+ str(i+<span class="number">1</span>)+<span class="string">" class include this points  "</span>+str(mylist[i]))</div><div class="line"></div><div class="line">format_cluster_result(result_k_means_cluster)</div></pre></td></tr></table></figure>
<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">The 1 class include this points  [array([ 4.93486944, 13.14640868]), array([ 9.44642109, 13.35037465]), array([ 2.49151711, 10.83512875]), array([ 9.8840153 , 12.83855873]), array([ 6.00091999, 11.32824297]), array([ 7.80347201, 11.06602904]), array([ 6.68408837, 11.29720113]), array([6.13240771, 8.75948733]), array([ 7.41177163, 11.46909421]), array([ 5.81649515, 12.38062477]), array([ 7.99449013, 10.8097551 ]), array([ 7.15714487, 11.575675  ]), array([ 6.45817254, 10.02135377]), array([ 8.17631453, 10.85800827]), array([ 7.90910338, 11.01532861]), array([ 8.02190753, 13.19604362]), array([6.47480105, 9.0377897 ]), array([ 8.97900038, 11.21312381]), array([6.12469976, 9.84061508]), array([ 7.380284 , 12.1630906]), array([6.01540939, 9.75805721])]</div><div class="line"></div><div class="line">The 2 class include this points  [array([2.50308546, 5.91300188]), array([2.24197899, 9.8390274 ]), array([5.33573424, 8.07922933]), array([5.64747242, 3.61139246]), array([5.35174955, 7.57523097]), array([6.91440679, 3.1232664 ]), array([2.71849667, 4.76027382]), array([3.97446062, 8.03512416]), array([6.45228078, 2.44931761]), array([4.5782664 , 7.51644097]), array([3.99185391, 6.05134528]), array([4.06301573, 7.63789036]), array([3.89376658, 6.12632702]), array([3.09482821, 9.36668278]), array([5.30726995, 8.56688374]), array([4.33465033, 8.58483349]), array([2.64882616, 4.71169159]), array([2.23241425, 6.36768551])]</div><div class="line"></div><div class="line">The 3 class include this points  [array([14.23058515, 12.21441832]), array([10.21858224,  7.9990988 ]), array([9.07154372, 6.73460898]), array([11.34847715,  8.99124024]), array([12.4881844, 10.2497519]), array([9.97529373, 6.69985229]), array([10.97051098,  8.08711864]), array([9.90668681, 7.8113881 ]), array([9.37065246, 4.70014833]), array([8.6836169 , 6.10392713]), array([9.2391499 , 6.50016246])]</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;k_means聚类算法python实现，并对50个基因表达量聚类&lt;/blockquote&gt;
    
    </summary>
    
      <category term="算法" scheme="https:///AnJingwd.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https:///AnJingwd.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>层级聚类算法python实现</title>
    <link href="https:///AnJingwd.github.io/2018/05/07/%E5%B1%82%E7%BA%A7%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95python%E5%AE%9E%E7%8E%B0/"/>
    <id>https:///AnJingwd.github.io/2018/05/07/层级聚类算法python实现/</id>
    <published>2018-05-07T12:02:46.000Z</published>
    <updated>2018-05-07T12:41:57.016Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">python实现对50个基因表达量层级聚类算法</blockquote>

<a id="more"></a>
<h1 id="聚类算法python实现"><a href="#聚类算法python实现" class="headerlink" title="聚类算法python实现"></a>聚类算法python实现</h1><h2 id="层级聚类"><a href="#层级聚类" class="headerlink" title="层级聚类"></a>层级聚类</h2><h3 id="Hierarchical-Clustering-py"><a href="#Hierarchical-Clustering-py" class="headerlink" title="Hierarchical_Clustering.py"></a>Hierarchical_Clustering.py</h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul>
<li>通过50行基因，实验组和对照组两列，每组各3个重复的平均表达量，根据欧式距离计算距离矩阵DE</li>
<li>对距离矩阵进行层级聚类</li>
</ul>
<p>层级聚类算法伪代码：</p>
<p>Hierarchical_Clustering（d,n）</p>
<ol>
<li>形成n个类，每个类含有一个元素</li>
<li>构建树型图，为每个类分配一个单独的顶点</li>
<li>while 存在多于一个类</li>
<li>找到最近的两个雷C1和C2</li>
<li>将C1和C2合并成一个新的类C,Chanyou |C1|+|C2|个元素</li>
<li>计算C与其他各类的距离</li>
<li>在树形图中增加一个顶点C,且与C1和C2相连</li>
<li>在距离矩阵中删除与C1和C2相对应的行和列</li>
<li>在距离矩阵中为新类增加一行一列</li>
<li>return T</li>
</ol>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> math,os</div><div class="line"></div><div class="line">os.chdir(<span class="string">r'F:\pycharm_project\cluster'</span>)</div><div class="line">data = pd.read_csv(<span class="string">r'.\microarray_gcrma_diff_TOP50.csv'</span>,nrows = <span class="number">51</span>,header=<span class="keyword">None</span>)</div><div class="line">Exp_matrix = np.array(data.iloc[<span class="number">1</span>:<span class="number">51</span>,<span class="number">1</span>:<span class="number">3</span>],dtype =np.float64)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Euclidean_Distances</span><span class="params">(A)</span>:</span></div><div class="line">	n = A.shape[<span class="number">0</span>]</div><div class="line">	mydist = np.zeros((n, n))</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">50</span>):</div><div class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">50</span>):</div><div class="line">			d = math.sqrt((A[i][<span class="number">0</span>]-A[j][<span class="number">0</span>])**<span class="number">2</span>+(A[i][<span class="number">1</span>]-A[j][<span class="number">1</span>])**<span class="number">2</span>)</div><div class="line">			mydist[i,j] = (<span class="string">"%.2f"</span> % d)</div><div class="line">	<span class="keyword">return</span> mydist</div><div class="line"></div><div class="line">DE = Euclidean_Distances(Exp_matrix)</div><div class="line"><span class="comment">#print(DE)</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_min_index_list</span><span class="params">(A)</span>:</span></div><div class="line">	<span class="keyword">if</span> <span class="number">0</span> <span class="keyword">in</span> A:</div><div class="line">		mask = A ==<span class="number">0</span></div><div class="line">		A[mask == <span class="keyword">True</span>] =np.inf</div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		<span class="keyword">pass</span></div><div class="line">	dis_min = A.min()</div><div class="line">	dis_min_pos = np.where(A ==dis_min)</div><div class="line">	pos_list = []</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(dis_min_pos[<span class="number">0</span>])):</div><div class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, len(dis_min_pos[<span class="number">0</span>])):</div><div class="line">			<span class="keyword">if</span> i &gt; j:</div><div class="line">				pos_list.append([dis_min_pos[<span class="number">0</span>][i],dis_min_pos[<span class="number">1</span>][i]])</div><div class="line">			<span class="keyword">else</span>:</div><div class="line">				<span class="keyword">pass</span></div><div class="line">	<span class="keyword">return</span> pos_list</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#min_index_list = find_min_index(DE)</span></div><div class="line"><span class="comment">#print(min_index_list)</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_list</span><span class="params">(mylist,index_list)</span>:</span></div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(index_list)):</div><div class="line">		<span class="keyword">if</span> i == <span class="number">0</span>:</div><div class="line">			<span class="keyword">del</span> mylist[index_list[i]]</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			<span class="keyword">del</span> mylist[index_list[i]<span class="number">-1</span>]</div><div class="line">	<span class="keyword">return</span> mylist</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">class_Euclidean_min_Distances</span><span class="params">(min_index,A)</span>:</span></div><div class="line">	<span class="comment">#calculate class distance</span></div><div class="line">	min_row1 = A[min_index[<span class="number">0</span>],]</div><div class="line">	min_row2 = A[min_index[<span class="number">1</span>],]</div><div class="line">	class_dis_to_other = np.fmin(min_row1,min_row2)</div><div class="line"></div><div class="line">	<span class="comment">#delete distance list element</span></div><div class="line">	mylist = list(class_dis_to_other)</div><div class="line">	mylist_del = delete_list(mylist,list(min_index))</div><div class="line"></div><div class="line">	<span class="comment">#delete distance matrix</span></div><div class="line">	A_del_row = np.delete(A, [min_index[<span class="number">0</span>], min_index[<span class="number">1</span>]], <span class="number">0</span>)</div><div class="line">	A_del_column = np.delete(A_del_row, [min_index[<span class="number">0</span>], min_index[<span class="number">1</span>]], <span class="number">1</span>)</div><div class="line"></div><div class="line">	<span class="comment">#add distance list</span></div><div class="line">	A_add_row = np.row_stack((A_del_column,mylist_del))</div><div class="line">	mylist_del.append(np.inf)</div><div class="line">	A_add_column = np.column_stack((A_add_row,mylist_del ))</div><div class="line">	<span class="keyword">return</span> A_add_column</div><div class="line"></div><div class="line"><span class="comment">#min_index = split_min_index(min_index_list)</span></div><div class="line"><span class="comment">#DE_new = class_Euclidean_min_Distances(min_index,DE)</span></div><div class="line"><span class="comment">#print(DE_new)</span></div><div class="line"></div><div class="line"><span class="comment">#min_index_list = find_min_index(A)</span></div><div class="line"><span class="comment">#min_index = split_min_index(min_index_list)</span></div><div class="line"><span class="comment">#A = class_Euclidean_min_Distances(min_index[0],A)</span></div><div class="line"><span class="comment">#A = class_Euclidean_min_Distances(min_index[1],A)</span></div><div class="line"><span class="comment">#print(A)</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">hierarchical_clustering</span><span class="params">(A,N)</span>:</span></div><div class="line">	n_class = len(A)</div><div class="line">	n_layer = <span class="number">1</span></div><div class="line">	<span class="keyword">while</span> n_class &gt; N:</div><div class="line">		min_index_list = find_min_index_list(A)</div><div class="line">		<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,int(len(min_index_list))):</div><div class="line">			A = class_Euclidean_min_Distances(min_index_list[i], A)</div><div class="line">			result = <span class="string">"the "</span> + str(n_layer) + <span class="string">" layer class process is "</span> + <span class="string">"&#123;g"</span> + str(</div><div class="line">				min_index_list[i][<span class="number">0</span>]) + <span class="string">","</span> + <span class="string">"g"</span> + str(min_index_list[i][<span class="number">1</span>]) + <span class="string">"&#125;"</span> + <span class="string">"---&gt;"</span> + <span class="string">"g"</span> + str(n_class<span class="number">-1</span>)</div><div class="line">			n_class = n_class - <span class="number">1</span></div><div class="line">			print(result)</div><div class="line">		n_layer +=<span class="number">1</span></div><div class="line">	<span class="keyword">return</span> A</div><div class="line"></div><div class="line"> A = hierarchical_clustering(DE,<span class="number">1</span>)</div></pre></td></tr></table></figure>
<h3 id="Hierarchical-Clustering输出结果及解释"><a href="#Hierarchical-Clustering输出结果及解释" class="headerlink" title="Hierarchical_Clustering输出结果及解释"></a>Hierarchical_Clustering输出结果及解释</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">the 1 layer class process is &#123;g38,g17&#125;---&gt;g49</div><div class="line">the 2 layer class process is &#123;g48,g16&#125;---&gt;g48</div><div class="line">the 3 layer class process is &#123;g47,g15&#125;---&gt;g47</div><div class="line">the 4 layer class process is &#123;g46,g14&#125;---&gt;g46</div><div class="line">the 5 layer class process is &#123;g45,g13&#125;---&gt;g45</div><div class="line">the 6 layer class process is &#123;g44,g12&#125;---&gt;g44</div><div class="line">the 7 layer class process is &#123;g43,g11&#125;---&gt;g43</div><div class="line">the 8 layer class process is &#123;g42,g10&#125;---&gt;g42</div><div class="line">the 9 layer class process is &#123;g41,g9&#125;---&gt;g41</div><div class="line">the 10 layer class process is &#123;g40,g8&#125;---&gt;g40</div><div class="line">the 11 layer class process is &#123;g39,g7&#125;---&gt;g39</div><div class="line">the 12 layer class process is &#123;g38,g6&#125;---&gt;g38</div><div class="line">the 13 layer class process is &#123;g37,g5&#125;---&gt;g37</div><div class="line">the 14 layer class process is &#123;g36,g4&#125;---&gt;g36</div><div class="line">the 15 layer class process is &#123;g35,g3&#125;---&gt;g35</div><div class="line">the 16 layer class process is &#123;g34,g2&#125;---&gt;g34</div><div class="line">the 17 layer class process is &#123;g33,g1&#125;---&gt;g33</div><div class="line">the 18 layer class process is &#123;g32,g0&#125;---&gt;g32</div><div class="line">the 19 layer class process is &#123;g31,g0&#125;---&gt;g31</div><div class="line">the 20 layer class process is &#123;g30,g0&#125;---&gt;g30</div><div class="line">the 21 layer class process is &#123;g29,g0&#125;---&gt;g29</div><div class="line">the 22 layer class process is &#123;g28,g0&#125;---&gt;g28</div><div class="line">the 23 layer class process is &#123;g27,g0&#125;---&gt;g27</div><div class="line">the 24 layer class process is &#123;g26,g0&#125;---&gt;g26</div><div class="line">the 25 layer class process is &#123;g25,g0&#125;---&gt;g25</div><div class="line">the 26 layer class process is &#123;g24,g0&#125;---&gt;g24</div><div class="line">the 27 layer class process is &#123;g23,g0&#125;---&gt;g23</div><div class="line">the 28 layer class process is &#123;g22,g0&#125;---&gt;g22</div><div class="line">the 29 layer class process is &#123;g21,g0&#125;---&gt;g21</div><div class="line">the 30 layer class process is &#123;g20,g0&#125;---&gt;g20</div><div class="line">the 31 layer class process is &#123;g19,g0&#125;---&gt;g19</div><div class="line">the 32 layer class process is &#123;g18,g0&#125;---&gt;g18</div><div class="line">the 33 layer class process is &#123;g17,g0&#125;---&gt;g17</div><div class="line">the 34 layer class process is &#123;g16,g0&#125;---&gt;g16</div><div class="line">the 35 layer class process is &#123;g15,g0&#125;---&gt;g15</div><div class="line">the 36 layer class process is &#123;g14,g0&#125;---&gt;g14</div><div class="line">the 37 layer class process is &#123;g13,g0&#125;---&gt;g13</div><div class="line">the 38 layer class process is &#123;g12,g0&#125;---&gt;g12</div><div class="line">the 39 layer class process is &#123;g11,g0&#125;---&gt;g11</div><div class="line">the 40 layer class process is &#123;g10,g0&#125;---&gt;g10</div><div class="line">the 41 layer class process is &#123;g9,g0&#125;---&gt;g9</div><div class="line">the 42 layer class process is &#123;g8,g0&#125;---&gt;g8</div><div class="line">the 43 layer class process is &#123;g7,g0&#125;---&gt;g7</div><div class="line">the 44 layer class process is &#123;g6,g0&#125;---&gt;g6</div><div class="line">the 45 layer class process is &#123;g5,g0&#125;---&gt;g5</div><div class="line">the 46 layer class process is &#123;g4,g0&#125;---&gt;g4</div><div class="line">the 47 layer class process is &#123;g3,g0&#125;---&gt;g3</div><div class="line">the 48 layer class process is &#123;g2,g0&#125;---&gt;g2</div><div class="line">the 49 layer class process is &#123;g1,g0&#125;---&gt;g1</div></pre></td></tr></table></figure>
<p>&emsp;&emsp;层级聚类过程为：例如{g38,g17}—&gt;g49  表示原50个基因列表中第38个基因和第17个基因聚为一类，插入到剩下48个基因的末尾，作为新的第49个“基因”。以此类推，每次对两个基因聚为一类，插到剩下基因的末尾。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;python实现对50个基因表达量层级聚类算法&lt;/blockquote&gt;
    
    </summary>
    
      <category term="算法" scheme="https:///AnJingwd.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https:///AnJingwd.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>hisat2构建GRCH38转录组index内存不足</title>
    <link href="https:///AnJingwd.github.io/2018/04/19/hisat2%E6%9E%84%E5%BB%BAGRCH38%E8%BD%AC%E5%BD%95%E7%BB%84index%E5%86%85%E5%AD%98%E4%B8%8D%E8%B6%B3/"/>
    <id>https:///AnJingwd.github.io/2018/04/19/hisat2构建GRCH38转录组index内存不足/</id>
    <published>2018-04-19T02:09:54.000Z</published>
    <updated>2018-04-19T02:20:43.828Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">hisat2构建GRCH38转录组index内存不足</blockquote>

<a id="more"></a>
<h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><p>Ran out of memory; auhisat2 tomatically trying more memory-economical parameters</p>
<h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>首先查看hisat2官网的manual,可以看到这样一句话：</p>
<p><strong>If you use –snp, –ss, and/or –exon, hisat2-build will need about 200GB RAM for the human genome size as index building involves a graph construction.<br>Otherwise, you will be able to build an index on your desktop with 8GB RAM.</strong></p>
<p>同时注意到参数–known-splicesite-infile:</p>
<p>With this mode, you can provide a list of known splice sites, which HISAT2 makes use of to align reads with small anchors.</p>
<p>You can create such a list using python hisat2_extract_splice_sites.py genes.gtf &gt; splicesites.txt, where hisat2_extract_splice_sites.py is included in the HISAT2 package, genes.gtf is a gene annotation file, and splicesites.txt is a list of splice sites with which you provide HISAT2 in this mode. Note that it is better to use indexes built using annotated transcripts (such as genome_tran or genome_snp_tran), which works better than using this option. It has no effect to provide splice sites that are already included in the indexes.</p>
<p>所以有两种解决方式：第一种可以申请更多的内存资源重新建索引；第二种，可以在建索引的时候不加可变剪切位点，在比对的时候提供，但效果不如第一种好。</p>
<h1 id="查看节点可用内存"><a href="#查看节点可用内存" class="headerlink" title="查看节点可用内存"></a>查看节点可用内存</h1><p>使用top命令查看：</p>
<p><img src="https://i.imgur.com/2secSKs.jpg" alt=""></p>
<p>如果出于习惯去计算可用内存数，这里有个近似的计算公式：第四行的free + 第四行的buffers + 第五行的cached，按这个公式此台服务器的可用内存：530668+79236+4231276 = 4.7GB</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;hisat2构建GRCH38转录组index内存不足&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>任务提交系统使用</title>
    <link href="https:///AnJingwd.github.io/2018/04/05/%E4%BB%BB%E5%8A%A1%E6%8F%90%E4%BA%A4%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8/"/>
    <id>https:///AnJingwd.github.io/2018/04/05/任务提交系统使用/</id>
    <published>2018-04-05T02:07:10.000Z</published>
    <updated>2018-04-18T03:03:04.441Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">任务提交系统使用</blockquote>

<a id="more"></a>
<h1 id="什么是批处理作业调度程序？"><a href="#什么是批处理作业调度程序？" class="headerlink" title="什么是批处理作业调度程序？"></a>什么是批处理作业调度程序？</h1><p>&emsp;&emsp;大多数现有的高性能计算集群都由作业调度程序管理; 也称为批量调度程序，工作负载管理器，排队系统或负载均衡器。调度程序允许多个用户公平地共享计算节点，允许系统管理员控制资源如何提供给不同用户组。所有调度程序都设计用于执行以下功能：</p>
<ul>
<li>允许用户向集群提交新作业</li>
<li>允许用户监视其排队和正在运行的作业的状态</li>
<li>允许用户和系统管理员控制正在运行的作业</li>
<li>监控受管资源的状态，包括系统负载，可用内存等</li>
</ul>
<p>&emsp;&emsp;当用户提交新作业时，群集调度程序软件将分配计算核心和内存以满足作业要求。如果合适的资源不可用于运行作业，则调度程序会将作业添加到队列中，直到有足够的资源可用于作业运行。您可以配置调度程序来控制如何从队列中选择作业并在集群节点上执行作业，包括自动准备节点以运行并行MPI作业。作业完成运行后，调度程序将作业使用的资源返回到可用资源池，准备运行其他用户作业。</p>
<h2 id="计算作业的类型"><a href="#计算作业的类型" class="headerlink" title="计算作业的类型"></a>计算作业的类型</h2><p>用户可以通过集群调度程序运行多种不同类型的作业，其中包括：</p>
<ul>
<li>批量作业 ; 单线程应用程序只能在一个计算核心上运行</li>
<li>阵列作业 ; 为方便起见，将两个或多个类似的批处理作业一起提交</li>
<li>SMP或多线程的工作; 在同一个计算节点上的两个或多个计算核心上运行的多线程应用程序</li>
<li>并行作业 ; 多线程应用程序利用MPI库在分布在一个或多个计算节点上的多个内核上运行</li>
</ul>
<p>&emsp;&emsp;集群作业调度程序负责查找集群中的计算节点以运行所有这些不同类型的作业。它会跟踪可用资源并将作业分配给各个节点组，确保不会过度提交CPU和内存。以下示例显示了作业调度程序如何将不同类型的作业分配给一组8-CPU核心计算节点：</p>
<p><img src="https://i.imgur.com/YGgb9H6.jpg" alt=""></p>
<h2 id="交互式和批处理作业"><a href="#交互式和批处理作业" class="headerlink" title="交互式和批处理作业"></a>交互式和批处理作业</h2><p>用户通常通过运行交互式或批处理（也称为非交互式）作业与计算集群进行交互。</p>
<ul>
<li>交互式作业是用户通过图形界面或通过在命令提示符处键入来直接控制的作业。</li>
<li>通过编写传递给计算节点的指令列表来运行批处理作业，以便将来在某个时刻运行。</li>
</ul>
<h2 id="为什么在个人群集上使用作业调度程序？"><a href="#为什么在个人群集上使用作业调度程序？" class="headerlink" title="为什么在个人群集上使用作业调度程序？"></a>为什么在个人群集上使用作业调度程序？</h2><p>&emsp;&emsp;在共享的多用户群集上，作业调度程序通常用作控制机制，以确保用户不会不公平地垄断有价值的计算资源。在极端情况下，系统管理员可能会使用调度程序强制在共享环境中执行“良好行为”，并且可能感觉像对集群用户进行强制操作。</p>
<p>通过您自己的个人群集，您可以直接控制可用于工作的资源 - 不需要工作调度程序来限制您的使用。</p>
<p>然而 - 有很多原因可以使你自己的作业调度程序在你的群集中仍然是一个有用的工具：</p>
<ul>
<li>它可以帮助您组织多阶段工作流程，批量作业在定义的过程中启动后续作业。</li>
<li>它可以自动启动MPI作业，找到可用的节点来运行应用程序。</li>
<li>它可以帮助防止意外地过度分配CPU或内存，这可能会导致节点故障。</li>
<li>它可以帮助将纪律带入环境，提供一致的方法来复制不同环境中的作业运行。</li>
<li>在调度程序中排队的作业可以用来触发扩大您的群集的大小，在没有作业运行时从群集中释放计算节点，为您节省成本。</li>
</ul>
<h2 id="可用的群集作业调度程序"><a href="#可用的群集作业调度程序" class="headerlink" title="可用的群集作业调度程序"></a>可用的群集作业调度程序</h2><ul>
<li>开放网格调度器（SGE） - 一种开源的作业调度器，由最初的Sun Grid Engine（SGE）代码库构建而成，</li>
<li>OpenLava调度程序（类似于IBM LSF）</li>
<li>转矩调度器</li>
<li>PBS Pro调度程序</li>
</ul>
<h2 id="作业调度系统"><a href="#作业调度系统" class="headerlink" title="作业调度系统"></a>作业调度系统</h2><ul>
<li>SLURM（简单Linux资源管理实用程序）是全球超级计算机中心采用的可扩展工作负载管理器。<strong>它是免费的并且是开源的，在通用公共许可证下发布。</strong></li>
<li>IBM®Platform™LSF®是一款功能强大的工作负载管理平台，适用于要求苛刻的分布式HPC环境。它提供了一套全面的智能策略驱动调度功能，使您能够利用所有计算基础架构资源并确保最佳的应用程序性能。</li>
</ul>
<p><img src="https://i.imgur.com/Y1DqlC0.jpg" alt=""></p>
<p><a href="http://scc.ustc.edu.cn/yhsq/sycjwt/201406/lsf_using.html" target="_blank" rel="external">LSF作业调度系统用户使用常见问题（推荐）</a></p>
<h3 id="SLURM作业调度系统常用命令"><a href="#SLURM作业调度系统常用命令" class="headerlink" title="SLURM作业调度系统常用命令"></a>SLURM作业调度系统常用命令</h3><p><a href="https://pi.sjtu.edu.cn/doc/slurm/" target="_blank" rel="external">SLURM manual</a></p>
<ul>
<li>sinfo 查看各个节点的状态，资源是否充足，当前有多少正在执行的任务</li>
</ul>
<p>&emsp;&emsp;使用 sinfo 可粗略查看所有分区的节点信息，注意 ‘‘STATE’’ 一栏的输出 若为 ‘‘idle’’ 表示该节点处于闲置状态，若为 ‘‘alloc’’ 表示该节点已经没有多余的 资源了，若为 ‘‘mix’’ 表示该节点有人在占用，但是仍然有剩余资源。</p>
<ul>
<li><p>作业提交完毕后，可使用 squeue 命令查看任务状态</p>
<p>  squeue -l: 以长列表显示更多信息。<br>  squeue -u username: 仅显示属于用户 username 的任务。<br>  squeue -t state: 仅显示处于 state 状态的任务。</p>
</li>
</ul>
<p>&emsp;&emsp;ps: ST 表示当前状态，R是Runing的简写</p>
<ul>
<li><p>salloc [申请资源]</p>
<p>  salloc -N 1 –cpus-per-task=4<br>  squeue 查看任务情况，获取分配节点，然后使用ssh 节点进行切换</p>
</li>
</ul>
<h3 id="OpenLava调度程序常用命令"><a href="#OpenLava调度程序常用命令" class="headerlink" title="OpenLava调度程序常用命令"></a>OpenLava调度程序常用命令</h3><p><a href="http://docs.alces-flight.com/en/stable/openlava/openlava.html" target="_blank" rel="external">openlava manual</a> </p>
<p>该OpenLava集群作业调度是一个开源平台的IBM兼容LSF作业调度程序。</p>
<ul>
<li><p>运行交互式作业</p>
<p>  bsub -Is bash</p>
<ul>
<li>-Is：Submits an interactive job and creates a pseudo-terminal when the job starts</li>
<li>bash：Choose the shell type to use when creating the interactive job</li>
</ul>
</li>
<li><p>提交批处理作业</p>
<p>  bsub -o $HOME/jobout.txt &lt; simplejobscript.sh</p>
<p>  #jobout.txt  用于记录任何job输出</p>
<p>  -J JOB_name 设置任务名</p>
<p>  -n number of cores</p>
<p>  simplejobscript.sh</p>
  <figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/bin/bash -l</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Starting running on host <span class="variable">$HOSTNAME</span>"</span></div><div class="line">sleep 120</div><div class="line"><span class="built_in">echo</span> <span class="string">"Finished running - goodbye from <span class="variable">$HOSTNAME</span>"</span></div></pre></td></tr></table></figure>
</li>
<li><p>查看和控制排队任务</p>
<ul>
<li>bjobs 查看任务的状态和排队情况，显示RUN（在运行）或者PEND(等待)</li>
<li>bkill JOBID 杀任务，无论任务处在运行或者排队状态</li>
<li>bhosts查看计算节点的状态, -l查看更详细的信息</li>
</ul>
</li>
<li><p>运行多线程作业</p>
<p>  如果用户想要在计算节点上使用多个内核来运行多线程应用程序，可以使用</p>
<pre><code>-n number of cores
</code></pre></li>
</ul>
<p>&emsp;&emsp;ps: 之前都是ssh node命令切换到计算节点再跑流程，有了集群作业调度程序就可以在登陆节点提交任务，其将自动分配计算节点资源，不包括登陆节点。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://blog.sina.com.cn/s/blog_62db9b190101eptz.html" target="_blank" rel="external">bsub更多使用例子</a></p>
<p>（2）<a href="http://docplayer.net/35369468-Openlava-installation-procedure.html" target="_blank" rel="external">OpenLava Installation Procedure</a></p>
<p>（3）<a href="http://bicmr.pku.edu.cn/~wenzw/pages/batch.html" target="_blank" rel="external">工作站使用指南（推荐）</a></p>
<p>（4）<a href="https://pi.sjtu.edu.cn/doc/slurm/" target="_blank" rel="external">SLURM作业调度系统（推荐）</a></p>
<p>（5）<a href="https://hpc.sjtu.edu.cn/info/1013/1539.htm" target="_blank" rel="external">交大高性能计算中心</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;任务提交系统使用&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https:///AnJingwd.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https:///AnJingwd.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>动态规划求序列最大得分连续子序列</title>
    <link href="https:///AnJingwd.github.io/2018/03/25/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E6%B1%82%E5%BA%8F%E5%88%97%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>https:///AnJingwd.github.io/2018/03/25/动态规划求序列最大得分连续子序列/</id>
    <published>2018-03-25T12:31:19.000Z</published>
    <updated>2018-03-25T13:53:52.334Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">动态规划求序列最大得分连续子序列（MSS）</blockquote>

<a id="more"></a>
<p>Given the single-letter scoring system and sequence shown below:</p>
<p>A = +2,    C = -1,    G = -4,    T = +2</p>
<p>TTACTGCGCCTTATAGCTATACGCTGTCGATCTGCGCAATTCCCCCCAATATCCCTCGGTTGATATTAC</p>
<p>A.    What is the maximum segment score?<br>B.    What are the start and end points of the maximum-scoring segment(MSS)?</p>
<h1 id="calculateMaxSumOfSubArray-py"><a href="#calculateMaxSumOfSubArray-py" class="headerlink" title="calculateMaxSumOfSubArray.py"></a>calculateMaxSumOfSubArray.py</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">letter2arr</span><span class="params">(mystr)</span>:</span></div><div class="line">    score_matrix = &#123;<span class="string">'A'</span>: <span class="number">2</span>,<span class="string">'C'</span>: <span class="number">-1</span>,<span class="string">'G'</span>: <span class="number">-4</span>,<span class="string">'T'</span>: <span class="number">2</span>,&#125;</div><div class="line">    arr_list = []</div><div class="line">    sum = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> list(mystr):</div><div class="line">        arr_list.append(score_matrix[i])</div><div class="line">        sum += score_matrix[i]</div><div class="line">    print(<span class="string">"str score sum is :"</span>,sum)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> arr_list</div><div class="line"></div><div class="line">mystr=<span class="string">'TTACTGCGCCTTATAGCTATACGCTGTCGATCTGCGCAATTCCCCCCAATATCCCTCGGTTGATATTAC'</span></div><div class="line">print(<span class="string">"arr:"</span>,letter2arr(mystr))</div><div class="line"></div><div class="line">      </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculateMaxSumOfSubArray</span><span class="params">(arr)</span>:</span></div><div class="line">    flag = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> arr:</div><div class="line">        <span class="keyword">if</span> i &gt; <span class="number">0</span>:</div><div class="line">            flag +=<span class="number">1</span></div><div class="line">    <span class="keyword">if</span> flag == <span class="number">0</span>:</div><div class="line">        print(<span class="string">"start_pos (base from 0):"</span>,arr.index(max(arr)),<span class="string">"start:"</span>,max(arr))</div><div class="line">        print(<span class="string">"end_pos (base from 0)"</span>,arr.index(max(arr)),<span class="string">"end:"</span>,max(arr))</div><div class="line">        <span class="keyword">return</span> max(arr)</div><div class="line">    <span class="keyword">else</span>:          </div><div class="line">        l = g = <span class="number">-100000</span></div><div class="line">        g_max = <span class="number">-100000</span></div><div class="line">        sum = <span class="number">0</span></div><div class="line">        sum_min = <span class="number">0</span></div><div class="line">        start = <span class="number">0</span></div><div class="line">        end = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(arr)):</div><div class="line">            l = max(arr[i],l+arr[i])</div><div class="line">            g = max(l,g)</div><div class="line">            sum +=arr[i]</div><div class="line">            <span class="keyword">if</span> sum &lt; sum_min:</div><div class="line">                sum_min = sum</div><div class="line">                start = arr[i+<span class="number">1</span>] </div><div class="line">                start_pos = i + <span class="number">1</span></div><div class="line">            <span class="keyword">if</span>  g &gt; g_max:</div><div class="line">                g_max = g</div><div class="line">                end = arr[i]</div><div class="line">                end_pos = i</div><div class="line">        print(<span class="string">"start_pos (base from 0):"</span>,start_pos,<span class="string">"start:"</span>,start)</div><div class="line">        print(<span class="string">"end_pos (base from 0)"</span>,end_pos,<span class="string">"end:"</span>,end)</div><div class="line">        <span class="keyword">return</span> g</div><div class="line"></div><div class="line">arr = letter2arr(mystr)</div><div class="line">print(<span class="string">"max sum is:"</span>, calculateMaxSumOfSubArray(arr))</div><div class="line"></div><div class="line"><span class="comment">#after you get start and end </span></div><div class="line">start = <span class="number">37</span></div><div class="line">end = <span class="number">67</span></div><div class="line">print(<span class="string">"maximum-scoring segment(MSS) is:"</span>,mystr[start:end+<span class="number">1</span>])</div><div class="line">print(<span class="string">"maximum-scoring segment(MSS) score is added by:"</span>,letter2arr(mystr[start:end+<span class="number">1</span>]))</div></pre></td></tr></table></figure>
<h1 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">str score sum <span class="keyword">is</span> : <span class="number">6</span></div><div class="line">arr: [<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">-4</span>, <span class="number">-1</span>, <span class="number">-4</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-4</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">-4</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">-4</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">-4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">-4</span>, <span class="number">-1</span>, <span class="number">-4</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">-4</span>, <span class="number">-4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-1</span>]</div><div class="line">str score sum <span class="keyword">is</span> : <span class="number">6</span></div><div class="line">start_pos (base <span class="keyword">from</span> <span class="number">0</span>): <span class="number">37</span> start: <span class="number">2</span></div><div class="line">end_pos (base <span class="keyword">from</span> <span class="number">0</span>) <span class="number">67</span> end: <span class="number">2</span></div><div class="line">max sum <span class="keyword">is</span>: <span class="number">14</span></div><div class="line">maximum-scoring segment(MSS) <span class="keyword">is</span>: AATTCCCCCCAATATCCCTCGGTTGATATTA</div><div class="line">str score sum <span class="keyword">is</span> : <span class="number">14</span></div><div class="line">maximum-scoring segment(MSS) score <span class="keyword">is</span> added by: [<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">-4</span>, <span class="number">-4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>]</div></pre></td></tr></table></figure>
<p><strong>第一个if判断考虑序列对应的arr全为负值的情况</strong></p>
<h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h1><p>最关键的动态规划思想体现在：<br>    l = max(arr[i],l+arr[i])<br>    g = max(l,g)</p>
<p>先求局部最大值，而全局最大值出自局部最大值</p>
<h1 id="MSS对应的start位置"><a href="#MSS对应的start位置" class="headerlink" title="MSS对应的start位置"></a>MSS对应的start位置</h1><p>sum从第一个碱基开始累加求和，当sum到达最小值时，对应的下一个碱基即为MSS的start起始位置</p>
<h1 id="MSS对应的end位置"><a href="#MSS对应的end位置" class="headerlink" title="MSS对应的end位置"></a>MSS对应的end位置</h1><p>g第一次达到全局最大值时对应的碱基即为MSS的end位置</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://zhuanlan.zhihu.com/p/25848393" target="_blank" rel="external">最大连续子序列和（算法）</a></p>
<p>（2）<a href="https://blog.csdn.net/xiaminli/article/details/76424090" target="_blank" rel="external">Maximum Subarray 最大连续子串python实现【medium】</a></p>
<p>（3）<a href="http://www.ahathinking.com/archives/120.html" target="_blank" rel="external">最大子数组和（最大子序列和 | 连续子数组最大和）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;动态规划求序列最大得分连续子序列（MSS）&lt;/blockquote&gt;
    
    </summary>
    
      <category term="算法" scheme="https:///AnJingwd.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https:///AnJingwd.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>lncRNApipe安装及使用</title>
    <link href="https:///AnJingwd.github.io/2018/03/12/lncRNApipe%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>https:///AnJingwd.github.io/2018/03/12/lncRNApipe安装及使用/</id>
    <published>2018-03-12T11:28:53.000Z</published>
    <updated>2018-04-14T03:43:34.106Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">lncRNApipe安装及使用</blockquote>

<a id="more"></a>
<h1 id="lncRNApipe介绍"><a href="#lncRNApipe介绍" class="headerlink" title="lncRNApipe介绍"></a>lncRNApipe介绍</h1><p><a href="https://github.com/biocoder/Perl-for-Bioinformatics/blob/master/NGS-Utils/README.pod" target="_blank" rel="external">biocoder/Perl-for-Bioinformatics</a></p>
<p>对应文献：<a href="https://www.biorxiv.org/content/biorxiv/early/2015/04/10/017889.full.pdf" target="_blank" rel="external">Methods for distinguishing between protein-coding and long noncoding RNAs and the elusive biological purpose of translation of long noncoding RNAs</a></p>
<h1 id="lncRNApipe安装"><a href="#lncRNApipe安装" class="headerlink" title="lncRNApipe安装"></a>lncRNApipe安装</h1><p>perl lncRNApipe –setup –setup-compiler CC=g++</p>
<p>Perl-for-Bioinformatics-master.zip  —–<strong>325M</strong></p>
<p>报错：gcc:error:unrecognized command line option ‘-fstack-protector-strong’</p>
<p><strong>‘-fstack-protector-strong’ 选项是gcc4.9以后的版本才加入的，也就是说需要安装gcc4.9以后的版本才可以编译通过</strong></p>
<p><a href="https://stackoverflow.com/questions/9693031/how-to-install-xmlparser-without-expat-devel" target="_blank" rel="external">How to install XML::Parser without expat-devel?</a></p>
<p>Download from: <a href="http://sourceforge.net/projects/expat/files/expat/" target="_blank" rel="external">http://sourceforge.net/projects/expat/files/expat/</a></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">install_dir=/home/wangdong/<span class="built_in">local</span></div><div class="line">mkdir -p <span class="variable">$install_dir</span>/expat</div><div class="line">tar zxf /[<span class="built_in">where</span>-ever]/expat-2.1.0.tar.gz -C <span class="variable">$install_dir</span>/expat</div><div class="line"><span class="built_in">cd</span> <span class="variable">$install_dir</span>/expat/expat-2.1.0</div><div class="line">perl ./configure --prefix=<span class="variable">$install_dir</span>/expat LDFLAGS=-L/<span class="variable">$install_dir</span>/expat/lib </div><div class="line">make</div><div class="line">make install</div><div class="line"></div><div class="line"></div><div class="line">http://search.cpan.org - search <span class="keyword">for</span> and download - XML::Parser</div><div class="line"></div><div class="line">install_dir=/home/wangdong/<span class="built_in">local</span></div><div class="line">mkdir -p <span class="variable">$install_dir</span>/XML-parser</div><div class="line">wget http://search.cpan.org/CPAN/authors/id/T/TO/TODDR/XML-Parser-2.44.tar.gz</div><div class="line">tar zxf XML-Parser-2.44.tar.gz -C <span class="variable">$install_dir</span>/XML-parser</div><div class="line"><span class="built_in">cd</span> <span class="variable">$install_dir</span>/XML-parser/XML-Parser-2.44</div><div class="line">perl ./Makefile.PL EXPATLIBPATH=<span class="variable">$install_dir</span>/expat/lib EXPATINCPATH=<span class="variable">$install_dir</span>/expat/include</div><div class="line">make</div><div class="line">make <span class="built_in">test</span></div><div class="line">make install</div></pre></td></tr></table></figure>
<p><a href="https://github.com/libexpat/libexpat/" target="_blank" rel="external">libexpat/libexpat（会报错）</a></p>
<h1 id="lncRNApipe使用"><a href="#lncRNApipe使用" class="headerlink" title="lncRNApipe使用"></a>lncRNApipe使用</h1><pre><code>time perl $lncRNApipe --run $merge/lncRNApipe \
--cuffcmp &apos;-r &apos;$lncRNA_gtf&apos; -s &apos;$ref_hg38&apos; &apos;$merge&apos;/All_sample_assemble_merge.gtf&apos; \
--cat-ncRNAs &apos;-sample-names &quot;All_sample&quot; -ov 80 -fpkm 2 -len 200 -max-len 10000 -min-exons 1 -antisense&apos; \
--get-uq-feat &apos;-sf &apos;$lncRNA_bed&apos;&apos; \
--fetch-seq &apos;-db hg38&apos; \
--cpc \
--rna \
--cpu 16 \
--inf &amp;&gt;$merge/lncRNApipe.run.log
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;lncRNApipe安装及使用&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>gcc5.2编译安装</title>
    <link href="https:///AnJingwd.github.io/2018/02/13/gcc5.2%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/"/>
    <id>https:///AnJingwd.github.io/2018/02/13/gcc5.2编译安装/</id>
    <published>2018-02-13T05:14:19.000Z</published>
    <updated>2018-04-15T02:37:40.337Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">gcc5.2编译安装</blockquote>

<a id="more"></a>
<h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><pre><code>cd /home/wangdong/local
wget http://www.netgull.com/gcc/releases/gcc-5.2.0/gcc-5.2.0.tar.gz
tar xzf gcc-5.2.0.tar.gz
cd gcc-5.2.0
./contrib/download_prerequisites
cd ..
mkdir objdir
cd objdir
$PWD/../gcc-5.2.0/configure --prefix=$HOME/gcc-5.2.0 --enable-languages=c,c++,fortran,go --disable-multilib
make
make install

echo &apos;export PATH=~/gcc-5.2.0/bin:$PATH&apos;&gt;&gt;~/.bashrc
echo &apos;export LD_LIBRARY_PATH=~/gcc-5.2.0/lib:$LD_LIBRARY_PATH&apos;&gt;&gt;~/.bashrc
echo &apos;export LD_LIBRARY_PATH=~/gcc-5.2.0/lib64:$LD_LIBRARY_PATH&apos;&gt;&gt;~/.bashrc
source ~/.bashrc
</code></pre><h1 id="cc与gcc"><a href="#cc与gcc" class="headerlink" title="cc与gcc"></a>cc与gcc</h1><p><a href="https://www.cnblogs.com/xj626852095/p/3648246.html" target="_blank" rel="external">cc、gcc、g++、CC的区别概括</a></p>
<p>gcc是C编译器；g++是C++编译器；linux下cc一般是一个符号连接，指向gcc；gcc和g++都是GUN（组织）的编译器。cc来自于昂贵的Unix系统，cc是商业软件。</p>
<p>对于cc设置软连接：ln -s gcc cc</p>
<h1 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h1><p>在脚本./contrib/download_prerequisites中自动在gcc安装目录内安装了</p>
<ul>
<li>MPFR=mpfr-2.4.2</li>
<li>GMP=gmp-4.3.2</li>
<li>MPC=mpc-0.8.1</li>
<li>isl=isl-0.14<br>等依赖，并设置了软连接</li>
</ul>
<h1 id="多核处理器下提高make的效率"><a href="#多核处理器下提高make的效率" class="headerlink" title="多核处理器下提高make的效率"></a>多核处理器下提高make的效率</h1><p>make的-j参数可以使make进行并行编译。make该参数的帮助如下：</p>
<p>-j [N], –jobs[=N]          Allow N jobs at once; infinite jobs with no arg<br><strong>虽然-j 可以大大缩短gcc编译时间,但注意：make -j命令并不是任何情况下都可以用的，在存在编译依赖的情况下，单核编译还是一种比较稳妥的方案。</strong></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://luiarthur.github.io/gccinstall" target="_blank" rel="external">Installing GCC without Root Privileges（推荐）</a></p>
<p>（2）<a href="http://bakeronit.com/2015/11/04/install_gcc/" target="_blank" rel="external">Install gcc-5.2.0 without root</a></p>
<p>（3）<a href="https://yhigu.wordpress.com/2016/03/02/install-latest-version-of-gcc-and-gcc-c-on-centos-6-7-from-source-code/" target="_blank" rel="external">Install Latest version of gcc and gcc-c++ on CentOS 6.7 from source code</a></p>
<p>（4）<a href="https://www.jianshu.com/p/7872d02694ea" target="_blank" rel="external">一文解决C程序的编译问题（推荐）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;gcc5.2编译安装&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https:///AnJingwd.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https:///AnJingwd.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>RNA-seq鉴定LncRNA概述</title>
    <link href="https:///AnJingwd.github.io/2018/02/05/RNA-seq%E9%89%B4%E5%AE%9ALncRNA%E6%A6%82%E8%BF%B0/"/>
    <id>https:///AnJingwd.github.io/2018/02/05/RNA-seq鉴定LncRNA概述/</id>
    <published>2018-02-05T13:44:08.000Z</published>
    <updated>2018-04-25T01:42:04.633Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">RNA-seq鉴定LncRNA概述：lncRNA简介，分析pipline，分析软件，结果评估指标</blockquote>

<a id="more"></a>
<h1 id="lncRNA简介"><a href="#lncRNA简介" class="headerlink" title="lncRNA简介"></a>lncRNA简介</h1><p>&emsp;&emsp;人类细胞中仅有少数转录生成的RNAs可作为蛋白质合成的模板。其余的RNA被称为非编码RNAs (ncRNAs)，它们位于编码蛋白的基因之间，其中长度超过200nt的ncRNAs称为lncRNAs(Long non-coding RNAs)</p>
<p>&emsp;&emsp;LincRNA序列的获取有以下两种途径：①可参考LncRNA (Long non-coding RNA)序列的获取，只是在获得LncRNA的序列后需确认该LncRNA为LincRNA；②通过检索LincRNA的研究论文获取其序列，很多LincRNA的序列会在附件中包含或者文章提供链接地址。</p>
<p>即lncRNA是一大类，长度超过200nt的称为LncRNA，位于基因间区的称为LincRNA.</p>
<h1 id="lncRNA特点"><a href="#lncRNA特点" class="headerlink" title="lncRNA特点"></a>lncRNA特点</h1><ul>
<li>lincRNA典型的表现出显著的组织和细胞特异性表达</li>
<li>lincRNA可能与其共表达的蛋白编码基因具有共同的生物学功能</li>
<li>lincRNA能折叠成热力学稳定的二级或者更高级的结构，这是其发挥功能的基础</li>
<li>相当大比例的lncRNA是编码基因的反义转录本或者与编码基因的外显子区正义方向部分重叠。</li>
</ul>
<p><img src="https://i.imgur.com/T0BhoK3.jpg" alt=""></p>
<h1 id="RNA-seq分析pipline"><a href="#RNA-seq分析pipline" class="headerlink" title="RNA-seq分析pipline"></a>RNA-seq分析pipline</h1><ol>
<li><a href="http://rnaseq.uoregon.edu/" target="_blank" rel="external">RNA-Seq guide (RNA-seqlopedia)</a></li>
</ol>
<p><img src="https://i.imgur.com/mfsVvwT.jpg" alt=""></p>
<p>转录组内的RNA，按照polyA形态：</p>
<ul>
<li>带polyA的RNA(mRNA和大部分的lncRNA)</li>
<li>不带polyA的RNA(小RNA和小部分的lncRNA)</li>
</ul>
<p>取样实例：晚期肝癌病人的肝组织（共四个）</p>
<ul>
<li>癌旁组织（N）</li>
<li>原发灶（P）</li>
<li>转移灶（M）</li>
<li>门脉血栓转移灶（V）</li>
</ul>
<p><img src="https://i.imgur.com/E8QHTUc.png" alt=""></p>
<ol>
<li><a href="https://github.com/twbattaglia/RNAseq-workflow" target="_blank" rel="external">twbattaglia/RNAseq-workflow</a></li>
</ol>
<p><img src="https://i.imgur.com/9MadHvS.jpg" alt=""></p>
<ol>
<li><a href="https://github.com/griffithlab/rnaseq_tutorial/wiki" target="_blank" rel="external">griffithlab/rnaseq_tutorial</a>,&emsp;&emsp;<a href="http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1004393" target="_blank" rel="external">文章</a> ,&emsp;&emsp; <a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Lectures" target="_blank" rel="external">Lectures</a></li>
</ol>
<p><img src="https://i.imgur.com/cxxChCD.png" alt=""></p>
<p><a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/Expression" target="_blank" rel="external">Expression</a><br><img src="https://i.imgur.com/CD5YS69.jpg" alt=""> </p>
<p><a href="https://www.jianshu.com/p/0e48facb3786?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weixin-friends" target="_blank" rel="external">重复文章 “RNA-seq的转录水平表达分析”</a></p>
<p>该流程不适用小样本数据：For small sample sizes (n &lt; 4 per group), it is often better to perform regularization. This can be done using the limma package in Bioconductor</p>
<ol>
<li><p><a href="https://bioinform.github.io/rnacocktail/" target="_blank" rel="external">RNACocktail：A comprehensive framework for accurate and efficient RNA-Seq analysis</a>， <a href="http://dx.doi.org/10.1038/s41467-017-00050-4" target="_blank" rel="external">文章</a></p>
</li>
<li><p><a href="https://github.com/griffithlab/rnaseq_tutorial/blob/master/manuscript/supplementary_tables/supplementary_table_9.md" target="_blank" rel="external">RNA-seq workshops and online tutorials</a></p>
</li>
</ol>
<h1 id="LncRNA注释GTF文件及fasta文件"><a href="#LncRNA注释GTF文件及fasta文件" class="headerlink" title="LncRNA注释GTF文件及fasta文件"></a>LncRNA注释GTF文件及fasta文件</h1><ol>
<li>参考基因组fa及GTF文件下载：<a href="http://www.ensembl.org/info/data/ftp/index.html" target="_blank" rel="external">链接</a></li>
</ol>
<ul>
<li>Homo_sapiens.GRCh38.dna.primary_assembly.fa</li>
<li>Homo_sapiens.GRCh38.92.gtf</li>
</ul>
<p>参考基因组建立索引：</p>
<p><code>which hisat2_extract_exons.py</code> $known_coding_gtf &gt; genome.exon<br><code>which hisat2_extract_splice_sites.py</code> $known_coding_gtf &gt; genome.ss<br>time hisat2-build -p 8 $ref_hg38 –ss genome.ss –exon genome.exon genome_tran  </p>
<ol>
<li><a href="http://www.gencodegenes.org/releases/current.html" target="_blank" rel="external">GENCODE</a>  &emsp;&emsp; 2. <a href="http://www.noncode.org/download.php" target="_blank" rel="external">NONCODE</a></li>
</ol>
<p>ps: NONCODE has updated to NONCODEv5. NONCODE2016 website has been moved to <a href="http://www.bioinfo.org/NONCODE2016" target="_blank" rel="external">http://www.bioinfo.org/NONCODE2016</a></p>
<p>lncRNA建立索引：</p>
<p><code>which hisat2_extract_exons.py</code> $lncRNA_gtf &gt; NONCODE2016_human.exon<br><code>which hisat2_extract_splice_sites.py</code> $lncRNA_gtf &gt; NONCODE2016_human.ss<br>time hisat2-build -p 8 $lncRNA_ref –ss NONCODE2016_human.ss –exon NONCODE2016_human.exon NONCODE2016_index</p>
<p>&emsp;&emsp;ENCODE计划揭示了大约76%的人类基因组转录产生非编码蛋白的RNA分子，其中包括大约10000lincRNAs。NOCODE最新版数据库收录了&gt;30000个人的lincRNAs和 &gt;20000 小鼠的lincRNA。</p>
<h1 id="RNA-seq分析软件"><a href="#RNA-seq分析软件" class="headerlink" title="RNA-seq分析软件"></a>RNA-seq分析软件</h1><ul>
<li><a href="https://bioinformatics.ibers.aber.ac.uk/wiki/index.php/1.1_RNA-Seq_analysis_tools" target="_blank" rel="external">RNA-Seq analysis common tools</a></li>
</ul>
<p>推荐文献：<a href="https://www.nature.com/articles/s41467-017-00050-4" target="_blank" rel="external">Gaining comprehensive biological insight into the transcriptome by performing a broad-spectrum RNA-seq analysis</a></p>
<h2 id="基因组和转录组比对"><a href="#基因组和转录组比对" class="headerlink" title="基因组和转录组比对"></a>基因组和转录组比对</h2><h2 id="基因水平定量"><a href="#基因水平定量" class="headerlink" title="基因水平定量"></a>基因水平定量</h2><p>官网：<a href="http://htseq.readthedocs.io/en/release_0.9.1/" target="_blank" rel="external">HTSeq: Analysing high-throughput sequencing data with Python</a></p>
<p>使用：<a href="http://www.chenlianfu.com/?p=2438" target="_blank" rel="external">使用HTSeq进行有参转录组的表达量计算（推荐）</a></p>
<p>扩展阅读：</p>
<ol>
<li><p><a href="http://bioinformatics.cvr.ac.uk/blog/featurecounts-or-htseq-count/" target="_blank" rel="external">featureCounts or htseq-count?</a></p>
</li>
<li><p><a href="htseq-counts跟bedtools的区别">htseq-counts跟bedtools的区别</a></p>
</li>
</ol>
<h3 id="stringTie"><a href="#stringTie" class="headerlink" title="stringTie"></a>stringTie</h3><p><a href="https://github.com/NCBI-Hackathons/RNA_mapping/wiki" target="_blank" rel="external">NCBI-Hackathons/RNA_mapping</a></p>
<p>&emsp;&emsp;RNA-Seq基因组比对工具HISAT2：HISAT2是TopHat2/Bowti2的继任者，使用改进的BWT算法，实现了更快的速度和更少的资源占用，作者推荐TopHat2/Bowti2和HISAT的用户转换到HISAT2。<a href="https://ccb.jhu.edu/software/hisat2/index.shtml" target="_blank" rel="external">官网</a></p>
<p>gene annotation 一般选择 RefSeq 或者 Ensembl，这里，我们的参考基因组fasta文件和基因注释文件都选择 Ensembl的hg38版本（release-91），其ftp地址为：<a href="http://asia.ensembl.org/info/data/ftp/index.html" target="_blank" rel="external">http://asia.ensembl.org/info/data/ftp/index.html</a></p>
<pre><code>wget ftp://ftp.ensembl.org/pub/release-91/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz
wget ftp://ftp.ensembl.org/pub/release-91/gtf/homo_sapiens/Homo_sapiens.GRCh38.91.chr.gtf.gz
</code></pre><h3 id="tophat-基于python2"><a href="#tophat-基于python2" class="headerlink" title="tophat(基于python2.*)"></a>tophat(基于python2.*)</h3><p><a href="http://blog.sina.com.cn/s/blog_a7f92a6a010101tv.html" target="_blank" rel="external">tophat 一些小错误</a></p>
<p>#genome index<br>    samtools faidx Homo_sapiens.GRCh38.dna.primary_assembly.fa<br>    bowtie2-build Homo_sapiens.GRCh38.dna.primary_assembly.fa hg38_genome</p>
<p>#transcriptome-index<br>    tophat -G $ref_mRNA_gtf –transcriptome-index=$tophat_transcriptome_index $bowtieGenomeIndex</p>
<p>PS: Please note that it is highly recommended that a FASTA file with the sequence(s) the genome being indexed be present in the same directory with the Bowtie index files and having the name <genome_index_base>.fa. If not present, TopHat will automatically rebuild this FASTA file from the Bowtie index files</genome_index_base></p>
<h2 id="比对质量评估"><a href="#比对质量评估" class="headerlink" title="比对质量评估"></a>比对质量评估</h2><p><img src="https://i.imgur.com/s2HS5Xp.png" alt=""></p>
<p><a href="http://rseqc.sourceforge.net/" target="_blank" rel="external">RSeQC: An RNA-seq Quality Control Package</a></p>
<pre><code>pip2.7 install RSeQC
</code></pre><h2 id="转录本重构"><a href="#转录本重构" class="headerlink" title="转录本重构"></a>转录本重构</h2><p><img src="https://i.imgur.com/NrEDde5.jpg" alt=""></p>
<p>转录本构建效果评估—评价指标：</p>
<ul>
<li>多外显子比率</li>
<li>转录本长度</li>
<li>转录本的可变剪切数目</li>
<li>对已知基因的覆盖程度</li>
</ul>
<table>
<thead>
<tr>
<th>基因数目</th>
<th>转录本数目</th>
<th>多外显子比率</th>
<th>多外显子转录本数目</th>
</tr>
</thead>
<tbody>
<tr>
<td>5-8万</td>
<td>&gt;10万</td>
<td>30%-50%</td>
<td>5万</td>
</tr>
</tbody>
</table>
<p><strong>对已知编码基因的覆盖程度：&gt;60%</strong></p>
<p>使用StringleTie的-个G模式构建转录本的输出文件主要有：</p>
<ol>
<li>.gtf文件:记录组装的转录本信息</li>
<li>gene_abundances.tsv文件：以tab键分割的记录基因丰度信息</li>
<li>在使用-B 参数下，生成*.ctab文件：用于下游Ballgown软件做差异表达分析的输入文件</li>
</ol>
<p>输出结果具体解释可查看StringTie官网的<a href="http://ccb.jhu.edu/software/stringtie/index.shtml?t=manual" target="_blank" rel="external">output部分</a></p>
<h2 id="合并转录本"><a href="#合并转录本" class="headerlink" title="合并转录本"></a>合并转录本</h2><p><a href="https://github.com/cole-trapnell-lab/cufflinks" target="_blank" rel="external">cole-trapnell-lab/cufflinks</a></p>
<p>可以直接下载解压预编译好的版本，省去安装 Boost C++ libraries的麻烦。在一下链接中选择linux版即可：<a href="http://cole-trapnell-lab.github.io/cufflinks/install/" target="_blank" rel="external">cufflinks</a></p>
<p>事实上，对于多个样本构建的多套转录本，如何得到统一的一套转录本，有下面三种方法：</p>
<ul>
<li>1 在转录本拼接之前，把各样本的比对bam文件合并，然后用合并的bam跑cufflinks</li>
<li>2 每个样本的比对bam文件分别单独跑cufflinks，各样本的转录本构建后，再用cuffcompare合并为一套转录本。</li>
<li>3 每个样本的比对bam文件分别单独跑cufflinks，各样本的转录本构建后，再用cuffmerge合并为一套转录本。</li>
</ul>
<p>这三种做法区别在于：</p>
<ul>
<li>第一种方法流程相对简单，所有的工作都抛给cufflinks一人完成，你都不需要知道cuffmerge、cuffcompare的用法。貌似是种完美解决方案。但很大的问题是：cufflinks能处理得了最终合并的bam吗？对于小物种的样本还可以，但对于人，若是7，8个样本合成的bam，cufflinks吃不销！</li>
<li>第二和三种方法是类似的，都是在保留可变剪切结构的前提下，将转录本合并。不同的是，cuffcompare只有A、B两条转录本结构相同的时候，才将A、B合并。而cuffmerge是A、B某些部分互相overlap，就将它俩合并。事实上，cuffmerge再做合并的时候，是把overlap的transfrag重新调用了cufflinks，合成一个transfrag。</li>
<li>第二和三种方法还有一个很大的不同是，cuffmerge可以带上参考注释有参考的进行合并，而cuffcompare不能如此。这是cuffmerge对cuffcompare的一个优势。</li>
</ul>
<p>因此，我认为第三种方法比第二种方法是最接近于第一种方法，而第一种方法的可实现性较差，在现有条件，最完美的解决方案就是第三种方法：每个bam单独跑cufflinks，跑完的结果再用cuffmerge合并。</p>
<p>参考：<a href="http://blog.csdn.net/shmilyringpull/article/details/8136837" target="_blank" rel="external">转录组测序分析中cufflinks的使用及问题</a></p>
<h2 id="鉴定novel-lncRNA"><a href="#鉴定novel-lncRNA" class="headerlink" title="鉴定novel lncRNA"></a>鉴定novel lncRNA</h2><ul>
<li>step1: 对所有样品拼接得到的转录本使用cuffcompare软件进行合并，筛除链方向不明的转录本；</li>
<li>step2: 选择转录本长度&gt;=200bp，Exon个数&gt;=2的转录本；</li>
<li>step3: 通过cufflinks计算每条转录本的reads覆盖度，选择至少在一个样品中覆盖度&gt;=3的转录本；</li>
<li>step4: 若该物种存在已知lncRNA数据，首先通过cuffcompare软件，将前一步得到的转录本与已知lncRNA进行比较，得到与已知lncRNA相同的转录本。这一部分转录本直接纳入最终的lncRNA集，不再进行后续筛选。之后，通过与该物种已知非lncRNA及非mRNA类型（rRNA,tRNA,snRNA,snoRNA,pre-miRNA,pseudogenes等）的转录本进行比较，筛除那些与以上已知转录本相似或相同的转录本。若无已知lncRNA数据，则直接进行与该物种已知非lncRNA及非mRNA类型转录本的比较；</li>
<li>step5: 通过与已知mRNA进行比较，并利用cuffcompare分析结果中的class_code(<a href="http://cole-trapnell-lab.github.io/cufflinks/cuffcompare/index.html#transfrag-class-codes)信息筛选候选lincRNA，intronic" target="_blank" rel="external">http://cole-trapnell-lab.github.io/cufflinks/cuffcompare/index.html#transfrag-class-codes)信息筛选候选lincRNA，intronic</a> lncRNA, anti-sense lncRNA类型的转录本。</li>
</ul>
<h3 id="class-code"><a href="#class-code" class="headerlink" title="class_code"></a>class_code</h3><table>
<thead>
<tr>
<th>Priority</th>
<th>Code</th>
<th>Description </th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>=</td>
<td>Complete match of intron chain</td>
</tr>
<tr>
<td>2</td>
<td>c</td>
<td>Contained</td>
</tr>
<tr>
<td>3</td>
<td>j</td>
<td>Potentially novel isoform (fragment): at least one splice junction is shared with a reference transcript</td>
</tr>
<tr>
<td>4</td>
<td>e</td>
<td>Single exon transfrag overlapping a reference exon and at least 10 bp of a reference intron, indicating a possible pre-mRNA fragment.</td>
</tr>
<tr>
<td>5</td>
<td>i</td>
<td>A transfrag falling entirely within a reference intron</td>
</tr>
<tr>
<td>6</td>
<td>o</td>
<td>Generic exonic overlap with a reference transcript</td>
</tr>
<tr>
<td>7</td>
<td>p</td>
<td>Possible polymerase run-on fragment (within 2Kbases of a reference transcript)</td>
</tr>
<tr>
<td>8</td>
<td>r</td>
<td>Repeat. Currently determined by looking at the soft-masked reference sequence and applied to transcripts where at least 50% of the bases are lower case</td>
</tr>
<tr>
<td>9</td>
<td>u</td>
<td>Unknown, intergenic transcript</td>
</tr>
<tr>
<td>10</td>
<td>x</td>
<td>Exonic overlap with reference on the opposite strand</td>
</tr>
<tr>
<td>11</td>
<td>s</td>
<td>An intron of the transfrag overlaps a reference intron on the opposite strand (likely due to read mapping errors)</td>
</tr>
<tr>
<td>12</td>
<td>.</td>
<td>(.tracking file only, indicates multiple classifications)</td>
</tr>
</tbody>
</table>
<h2 id="转录水平本定量"><a href="#转录水平本定量" class="headerlink" title="转录水平本定量"></a>转录水平本定量</h2><h2 id="lincRNA鉴定及功能注释"><a href="#lincRNA鉴定及功能注释" class="headerlink" title="lincRNA鉴定及功能注释"></a>lincRNA鉴定及功能注释</h2><p><img src="https://i.imgur.com/kSQJyU6.jpg" alt=""></p>
<p><img src="https://i.imgur.com/fSQhvH8.jpg" alt=""></p>
<ul>
<li>CNCI：<a href="https://academic.oup.com/nar/article/41/17/e166/2411728" target="_blank" rel="external">文献</a>，<a href="https://github.com/www-bioinfo-org/CNCI" target="_blank" rel="external">github仓库</a></li>
</ul>
<p><img src="https://i.imgur.com/xLkXFAQ.png" alt=""></p>
<p><a href="http://cpc.cbi.pku.edu.cn/docs/install_guide.jsp" target="_blank" rel="external">CPC </a></p>
<ul>
<li>ncFANs： <a href="https://academic.oup.com/nar/article/39/suppl_2/W118/2506940" target="_blank" rel="external">文献</a>， <a href="https://github.com/www-bioinfo-org/ncFANs" target="_blank" rel="external">github仓库</a></li>
</ul>
<p><img src="https://i.imgur.com/nDRVJCw.jpg" alt=""></p>
<p><img src="https://i.imgur.com/TvTIJhl.jpg" alt=""></p>
<h2 id="差异表达分析"><a href="#差异表达分析" class="headerlink" title="差异表达分析"></a>差异表达分析</h2><p><a href="https://www.bioconductor.org/help/course-materials/2015/LearnBioconductorFeb2015/B02.1.1_RNASeqLab.html" target="_blank" rel="external">RNA-Seq workflow: gene-level exploratory analysis and differential expression</a></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1） <a href="https://academic.oup.com/bib/article-abstract/18/5/789/2562763?redirectedFrom=fulltext" target="_blank" rel="external">Identification and function annotation of long intervening noncoding RNAs</a></p>
<p>（2）<a href="https://mp.weixin.qq.com/s/NUEi6oRFL7B3f1FpCD4Xug" target="_blank" rel="external">转录组分析工具哪家强？</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;RNA-seq鉴定LncRNA概述：lncRNA简介，分析pipline，分析软件，结果评估指标&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>查看R包源码及linux下编译安装R</title>
    <link href="https:///AnJingwd.github.io/2018/01/28/%E6%9F%A5%E7%9C%8BR%E5%8C%85%E6%BA%90%E7%A0%81%E5%8F%8Alinux%E4%B8%8B%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85R/"/>
    <id>https:///AnJingwd.github.io/2018/01/28/查看R包源码及linux下编译安装R/</id>
    <published>2018-01-28T14:08:43.000Z</published>
    <updated>2018-04-19T13:04:18.807Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">查看R包源码，毕竟看优秀的源代码才能学得更快，为开发自己的R包打基础；同时由于R会将数据一次性读入内存的特性，实际分析数据时，选择linux集群将更合适，所以有必要在linux环境下编译安装R</blockquote>

<a id="more"></a>
<h1 id="R相关资源"><a href="#R相关资源" class="headerlink" title="R相关资源"></a>R相关资源</h1><p>（1）<a href="https://r-forge.r-project.org/" target="_blank" rel="external">R-Forge</a>：offers a central platform for the development of R packages, R-related software and further projects.</p>
<p>（2）<a href="http://rseek.org/" target="_blank" rel="external">rseek</a>：RSeek.org R-project Search Engine </p>
<p>（3）<a href="http://blog.yhat.com/" target="_blank" rel="external">The Yhat Blog</a>: machine learning, data science, engineering(推荐)</p>
<h1 id="查看R包函数源码"><a href="#查看R包函数源码" class="headerlink" title="查看R包函数源码"></a>查看R包函数源码</h1><p>&emsp;&emsp;首先，一个扩展包中定义的函数有区分公开和不公开的，会在扩展包根目录下的NAMESPACE文件中定义是否Export，如果一个函数没有Export，则为不公开的函数，只能在包内部调用。</p>
<p>&emsp;&emsp;lattice::qq是一个Generic Function，就像是plot，summary等函数，是由对象的class来确定实际执行的函数（例如对于data frame,执行summary时会执行summary.data.frame，对于lm会执行summary.lm等等，都不是则会执行summary.default）这是R S3 面向对象系统的设计。因此看到qq源代码时只能看到 UseMethod(“qq”)，还要看到哪些class实现了qq方法，而lattice并没有把这些实现给Export</p>
<p>&emsp;&emsp;想要看到源代码本可以直接在Console中输入函数名称或者在RStudio中函数上按F2即可，即 lattice::qq，但是这只是看到了Generic Function的源代码，如果需要看到具体的执行函数的源代码，那么就需要获得整个包的源码。可以到CRAN的页面CRAN - Package lattice 中下载Package source那个链接，这里面包含了整个lattice的源代码：<a href="http://cran.r-project.org/src/contrib/lattice_0.20-29.tar.gz" target="_blank" rel="external">http://cran.r-project.org/src/contrib/lattice_0.20-29.tar.gz</a></p>
<p>转自知乎：任坤 <a href="https://www.zhihu.com/question/24586822/answer/28305172" target="_blank" rel="external">链接</a></p>
<h2 id="以pheatmap包及其函数为例"><a href="#以pheatmap包及其函数为例" class="headerlink" title="以pheatmap包及其函数为例"></a>以pheatmap包及其函数为例</h2><p>（1）在Rstudio下查看</p>
<pre><code>??pheatmap
</code></pre><p><img src="https://i.imgur.com/6I5TzWq.jpg" alt=""></p>
<p><img src="https://i.imgur.com/4r5imUK.jpg" alt=""></p>
<p><strong>上述方法只能查到该包的Generic Function,对于不公开的内部函数只能下载源码包查看</strong></p>
<p>（2）找到R CRAN的相关源码包（.tar.gz）</p>
<p>例如：<a href="https://cran.r-project.org/web/packages/ggplot2/" target="_blank" rel="external">https://cran.r-project.org/web/packages/ggplot2/</a> 不同包只需要更改最后包名即可</p>
<h1 id="linux下源码安装R-3-4-4"><a href="#linux下源码安装R-3-4-4" class="headerlink" title="linux下源码安装R-3.4.4"></a>linux下源码安装R-3.4.4</h1><h2 id="建议先升级gcc"><a href="#建议先升级gcc" class="headerlink" title="建议先升级gcc"></a>建议先升级gcc</h2><p>可参考<a href="https://anjingwd.github.io/AnJingwd.github.io/2018/02/13/gcc5.2%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/" target="_blank" rel="external">gcc5.2编译安装</a>，因为需要相应的动态链接库。</p>
<h2 id="安装依赖的包"><a href="#安装依赖的包" class="headerlink" title="安装依赖的包"></a>安装依赖的包</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#新建一个文件夹，然后把需要依赖的组件安装这个路径下</span></div><div class="line">mkdir -p <span class="variable">$HOME</span>/softwares/packages</div><div class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/softwares/packages</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">##bzip2-1.0.6</span></div><div class="line">    wget https://link.zhihu.com/?target=http%3A//www.bzip.org/1.0.6/bzip2-1.0.6.tar.gz</div><div class="line">    untargz bzip2-1.0.6.tar.gz</div><div class="line">    <span class="built_in">cd</span> bzip2-1.0.6</div><div class="line">    </div><div class="line">    修改bzip2-1.0.6的<span class="string">"Makefile"</span>文件：</div><div class="line">    </div><div class="line">    CC=gcc -fPIC  &lt;&lt; 新增 -fPIC，默认是64位编译的；</div><div class="line">    AR=ar</div><div class="line">    RANLIB=ranlib</div><div class="line">    LDFLAGS=</div><div class="line">    BIGFILES=-D_FILE_OFFSET_BITS=64</div><div class="line">    CFLAGS=-fPIC -Wall -Winline -O2 -g  $(BIGFILES)   <span class="comment"># 这里也可以加上</span></div><div class="line"></div><div class="line">    make -f Makefile-libbz2_so</div><div class="line">    make clean &lt;------------保守建议，还是clean一下 </div><div class="line">    make</div><div class="line">    make install PREFIX=<span class="variable">$HOME</span>/softwares/packages   <span class="comment"># prefix表示的安装的路径前缀</span></div><div class="line"></div><div class="line"><span class="comment">## curl-7.59</span></div><div class="line">    wget https://curl.haxx.se/download/curl-7.59.0.zip</div><div class="line">    gunzip curl-7.59.0.zip</div><div class="line">    <span class="built_in">cd</span> curl-7.59.0</div><div class="line">    ./configure --prefix=<span class="variable">$HOME</span>/packages   <span class="comment"># 这个是之前设置的packages路径</span></div><div class="line">    make -j3</div><div class="line">    make install</div><div class="line"></div><div class="line"><span class="comment">## pcre-8.41.tar.gz</span></div><div class="line">    wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.42.tar.gz</div><div class="line">    tar –xvf pcre-8.41.tar.gz</div><div class="line">    <span class="built_in">cd</span> pcre</div><div class="line">    ./configure --<span class="built_in">enable</span>-utf8  --prefix=<span class="variable">$HOME</span>/softwares/packages  <span class="comment"># 这个是之前设置的packages路径，一定要设置enable-utf8;</span></div><div class="line">    make</div><div class="line">    make install</div><div class="line"></div><div class="line"><span class="comment">## xz-5.2.3.tar.gz</span></div><div class="line">    下载路径：https://sourceforge.net/projects/lzmautils/files/xz-5.2.3.tar.gz/download</div><div class="line">    tar xzvf xz-5.2.3.tar.gz</div><div class="line">    <span class="built_in">cd</span> xz-5.2.3</div><div class="line">    ./configure --prefix=<span class="variable">$HOME</span>/softwares/packages</div><div class="line">    make -j3</div><div class="line">    make install</div><div class="line"></div><div class="line"><span class="comment">## zlib-1.2.8.tar.gz</span></div><div class="line">    wget https://link.zhihu.com/?target=http%3A//zlib.net/zlib-1.2.11.tar.g</div><div class="line">    tar xzvf zlib-1.2.8.tar.gz</div><div class="line">    <span class="built_in">cd</span> zlib-1.2.8</div><div class="line">    ./configure --prefix=<span class="variable">$HOME</span>/softwares/packages</div><div class="line">    make</div><div class="line">    make install</div></pre></td></tr></table></figure>
<h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$HOME</span>/softwares/packages/bin:<span class="variable">$PATH</span></div><div class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$HOME</span>/softwares/packages/lib:<span class="variable">$LD_LIBRARY_PATH</span> </div><div class="line"><span class="built_in">export</span> CFLAGS=<span class="string">"-I<span class="variable">$HOME</span>/softwares/packages/include"</span> </div><div class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">"-L<span class="variable">$HOME</span>/softwares/packages/lib"</span></div><div class="line"></div><div class="line"><span class="built_in">source</span> ~/.bashrc</div></pre></td></tr></table></figure>
<h2 id="安装R3-4-4"><a href="#安装R3-4-4" class="headerlink" title="安装R3.4.4"></a>安装R3.4.4</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">wget https://mirrors.tuna.tsinghua.edu.cn/CRAN/src/base/R-<span class="number">3</span>/R-<span class="number">3.4</span><span class="number">.4</span>.tar.gz</div><div class="line">untargz R-<span class="number">3.4</span><span class="number">.4</span>.tar.gz</div><div class="line">cd R-<span class="number">3.4</span><span class="number">.4</span>.tar.gz</div><div class="line">./configure --prefix=$HOME/softwares/packages/R  --enable-R-shlib  --with-readline=yes --with-libpng=yes --with-x=no  </div><div class="line"><span class="comment"># --enable-R-shlib一定要设置，否则安装不上Rserve;  prefix是安装路径，可以自定义；</span></div><div class="line"></div><div class="line"><span class="comment">#当前解压目录下编译、安装</span></div><div class="line">make &amp;&amp; make install</div><div class="line"></div><div class="line"><span class="comment">#离开解压目录，进入安装成功目录，进行检查是否成功</span></div><div class="line">cd /home/wangdong/R/bin</div><div class="line">./R</div><div class="line"></div><div class="line"><span class="comment">#添加环境变量</span></div><div class="line">echo <span class="string">'export PATH=/home/wangdong/R/bin:$PATH'</span>&gt;&gt;~/.bashrc</div><div class="line"><span class="keyword">source</span> ~/.bashrc</div></pre></td></tr></table></figure>
<h1 id="安装packages"><a href="#安装packages" class="headerlink" title="安装packages"></a>安装packages</h1><h2 id="方法一：每次安装包时指定镜像"><a href="#方法一：每次安装包时指定镜像" class="headerlink" title="方法一：每次安装包时指定镜像"></a>方法一：每次安装包时指定镜像</h2><ul>
<li>查看所有镜像：chooseCRANmirror()</li>
<li>选择镜像：chooseCRANmirror(ind=36)</li>
<li>通过getOption(“repos”)函数知道目前的镜像网站是哪里</li>
<li><p>所有的镜像网站网址在本地的一个csv</p>
<p>  cd /home/wangdong/R/R-3.1.2/doc<br>  less CRAN_mirrors.csv</p>
<p>  install.packages(‘plyr’, repos=’<a href="http://mirrors.tuna.tsinghua.edu.cn/CRAN/" target="_blank" rel="external">http://mirrors.tuna.tsinghua.edu.cn/CRAN/</a>‘)</p>
</li>
</ul>
<h2 id="方法二：修改配置文件"><a href="#方法二：修改配置文件" class="headerlink" title="方法二：修改配置文件"></a>方法二：修改配置文件</h2><p>Rprofile.site (in the directory /your-R-installation/etc/ , eg R-2.14.0/etc)</p>
<pre><code>cd /home/wangdong/R/R-3.1.2/etc
vim repositories

#set a CRAN mirror
local({r &lt;- getOption(&quot;repos&quot;)
    r[&quot;CRAN&quot;] &lt;- &quot;http://mirrors.tuna.tsinghua.edu.cn/CRAN/&quot;
    options(repos=r)})
</code></pre><p>备用镜像：</p>
<ul>
<li><a href="http://mirror.bjtu.edu.cn/cran/" target="_blank" rel="external">http://mirror.bjtu.edu.cn/cran/</a></li>
<li><a href="http://mirrors.ustc.edu.cn/CRAN/" target="_blank" rel="external">http://mirrors.ustc.edu.cn/CRAN/</a></li>
<li><a href="http://mirrors.xmu.edu.cn/CRAN/" target="_blank" rel="external">http://mirrors.xmu.edu.cn/CRAN/</a></li>
</ul>
<h2 id="安装bioconder"><a href="#安装bioconder" class="headerlink" title="安装bioconder"></a>安装bioconder</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">source</span>(<span class="string">"http://bioconductor.org/biocLite.R"</span>)</div><div class="line">options(BioC_mirror=<span class="string">"http://mirrors.ustc.edu.cn/bioc/"</span>)</div><div class="line">biocLite()</div></pre></td></tr></table></figure>
<p>如果安装bioconductor软件包安装不上，可以先update.packages()，然后选择镜像。</p>
<h2 id="设置环境变量-1"><a href="#设置环境变量-1" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><p>R中用.libPaths()函数查看lib路径，如果有多个lib,install.packages()默认是安装在第一个目录下</p>
<p>修改.bashrc文件中R lib路径的<strong>环境变量（R_LIBS）</strong>：export R_LIBS=/home/wangdong/R/lib64/R/library，就能设定自己lib的默认目录，即使使用的R是别人安装的或是集体共用的，也能拥有自己的library</p>
<h3 id="终端直接调用R脚本"><a href="#终端直接调用R脚本" class="headerlink" title="终端直接调用R脚本"></a>终端直接调用R脚本</h3><pre><code>/home/wangdong/R/bin/Rscript 或者 Rscript test.R
</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://blog.sina.com.cn/s/blog_605f5b4f010160su.html" target="_blank" rel="external">R中查看函数源代码</a></p>
<p>（2）<a href="http://blog.sina.com.cn/s/blog_605f5b4f010160su.html" target="_blank" rel="external">R中查看函数源代码</a></p>
<p>（3）<a href="http://blog.csdn.net/high2011/article/details/52052333" target="_blank" rel="external">linux下源码安装R-3.1.2.tar.gz和RStudio开发工具</a></p>
<p>（4）<a href="http://m.blog.itpub.net/9036/viewspace-2122686/" target="_blank" rel="external">CentOS 下 R 的安装</a></p>
<p>（5）<a href="https://stackoverflow.com/questions/11488174/how-to-select-a-cran-mirror-in-r" target="_blank" rel="external">How to select a CRAN mirror in R</a></p>
<p>（6）<a href="https://zhuanlan.zhihu.com/p/28055351" target="_blank" rel="external">linux下R3.4.1的安装手册（推荐）</a></p>
<p>（7）<a href="https://oguya.ch/posts/2017-03-18-building-R-on-rhel-6/" target="_blank" rel="external">Building R on RedHat Linux 6</a></p>
<p>（8）<a href="http://blog.sina.com.cn/s/blog_6aaea1760102x5ka.html" target="_blank" rel="external">Linux下的R安装、配置与测试 </a></p>
<p>（9）<a href="https://stackoverflow.com/questions/40639138/configure-error-installing-r-3-3-2-on-ubuntu-checking-whether-bzip2-support-suf" target="_blank" rel="external">configure error installing R-3.3.2 on Ubuntu: checking whether bzip2 support suffices… configure: error: bzip2 library and headers are required</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;查看R包源码，毕竟看优秀的源代码才能学得更快，为开发自己的R包打基础；同时由于R会将数据一次性读入内存的特性，实际分析数据时，选择linux集群将更合适，所以有必要在linux环境下编译安装R&lt;/blockquote&gt;
    
    </summary>
    
      <category term="R" scheme="https:///AnJingwd.github.io/categories/R/"/>
    
    
      <category term="R" scheme="https:///AnJingwd.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>qPCR结果分析及非参数检验</title>
    <link href="https:///AnJingwd.github.io/2018/01/28/qPCR%E7%BB%93%E6%9E%9C%E5%88%86%E6%9E%90%E5%8F%8A%E9%9D%9E%E5%8F%82%E6%95%B0%E6%A3%80%E9%AA%8C/"/>
    <id>https:///AnJingwd.github.io/2018/01/28/qPCR结果分析及非参数检验/</id>
    <published>2018-01-28T02:33:14.000Z</published>
    <updated>2018-01-28T11:22:47.442Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">qPCR结果分析及非参数检验</blockquote>

<a id="more"></a>
<h1 id="相对表达量计算"><a href="#相对表达量计算" class="headerlink" title="相对表达量计算"></a>相对表达量计算</h1><p>一：⊿Ct如何计算，公式推导</p>
<p>(1)    一般，我们都假设扩增效率为1，也就是每个循环增加一倍。</p>
<p><img src="https://i.imgur.com/DyztX9Q.jpg" alt=""></p>
<p>(2)    当产物量达到同一水平的时候，但Ct值不同，其原因就在于期初的模板量的差距，而当检测样本和内参基因的产物量相同的时候，找出他们模板量的比值差的话，就需要做一下除法，也就是下面这样： </p>
<p><img src="https://i.imgur.com/v10u3n5.jpg" alt=""></p>
<p>二：具体例子（⊿⊿Ct计算）</p>
<p><img src="https://i.imgur.com/3Wd6BKb.png" alt=""></p>
<p>一般在进行qPCR实验时，都会设计独立三次重复试验，每次作3个复孔，然后根据下列公式先分别计算试验组和对照组的ΔCt值</p>
<ul>
<li>ΔCt试验=Ct目的基因-Ct内参基因</li>
<li>ΔCt对照=Ct目的基因-Ct内参基因</li>
</ul>
<p>注：Ct目的基因和Ct内参基因是三个复孔Ct值求得的均值</p>
<p>ΔΔCt=ΔCt试验-ΔCt对照，相对表达量=2^(-⊿⊿Ct)</p>
<p>&emsp;&emsp;相对表达量是指目的基因在试验组中的表达是目的基因在对照组表达的多少倍。在P&lt;0.05的情况下，如果2-ΔΔCt小于1说明目的基因在试验组中表达下调，大于1说明目的基因在试验组中表达上调。否则表达无差异。</p>
<h1 id="组间差异非参数检验"><a href="#组间差异非参数检验" class="headerlink" title="组间差异非参数检验"></a>组间差异非参数检验</h1><p>原始数据处理（EXCEL）：</p>
<p><img src="https://i.imgur.com/4Lgn5iR.png" alt=""></p>
<p>&emsp;&emsp;如果数据无法满足t检验或ANOVA的参数假设，可以转而使用非参数方法。<strong>若两组数据独立，</strong> 可以使用Wilcoxon秩和检验（更广为人知的名字是Mann-Whitney U检验）来评估观测是否是从相同的概率分布中抽得的（即，在一个总体中获得更高得分的概率是否比另<br>一个总体要大）。调用格式为：</p>
<pre><code>wilcox.test(y ~ x, data)
</code></pre><p>其中的y是数值型变量，而x是一个二分变量。</p>
<p>Wilcoxon符号秩检验是<strong>非独立样本</strong>t检验的一种非参数替代方法。它适用于两组成对数据和无法保证正态性假设的情境。调用格式与Mann-Whitney U检验完全相同，不过还可以添加参数paired=TRUE。</p>
<h2 id="绘制箱图"><a href="#绘制箱图" class="headerlink" title="绘制箱图"></a>绘制箱图</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#qPCR_barplot.R</span></div><div class="line">setwd(<span class="string">"F:/R working directory/qPCR"</span>)</div><div class="line">qPCR&lt;-read.csv(<span class="string">"miRNA_qPCR_plot.csv"</span>,header=<span class="literal">TRUE</span>,check.names = <span class="literal">FALSE</span>)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line">p&lt;-ggplot(data=qPCR, aes(x=miRNA,y=value))+geom_boxplot(aes(fill=sample))</div><div class="line"></div><div class="line">p + facet_wrap(~ miRNA, scales=<span class="string">"free"</span>)</div></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://www.360doc.com/content/17/0706/21/44614528_669420186.shtml" target="_blank" rel="external">如何分析你凌乱不堪的qPCR数据（推荐）</a></p>
<p>（2）<a href="http://www.dxy.cn/bbs/topic/25725392" target="_blank" rel="external">分享自己关于qPCR（RT-PCR）数据相对定量的分析方法与经验！</a></p>
<p>（3）<a href="http://www.dxy.cn/bbs/thread/29554700#29554700" target="_blank" rel="external">△△CT数据处理</a></p>
<p>（4）<a href="http://www.dxy.cn/bbs/thread/26343222#26343222" target="_blank" rel="external">相对荧光定量数据处理</a></p>
<p>（5）<a href="http://www.jianshu.com/p/b7274afff14f?from=timeline" target="_blank" rel="external">R语言可视化学习笔记之添加p-value和显著性标记（推荐）</a></p>
<p>（6）<a href="https://github.com/const-ae/ggsignif" target="_blank" rel="external">添加线条来连接比较的两组，这一功能已由包ggsignif实现（推荐）</a></p>
<p>（7）<a href="https://www.tanboyu.com/r-for-nonparametric-tests.html" target="_blank" rel="external">非参检验R语言实现</a></p>
<p>（8）<a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=4&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwjVxeX1x_DXAhXMxrwKHVvOAnwQFgg4MAM&amp;url=http%3A%2F%2Fblog.csdn.net%2Ftimothyzh%2Farticle%2Fdetails%2F7657470&amp;usg=AOvVaw3SpJzBCWcgBwfbkJn65CFP" target="_blank" rel="external">Wilcoxon-Mann-Whitney秩和检验/rank sum test（或test U）</a></p>
<p>（9）<a href="https://wenku.baidu.com/view/d09fcc7033687e21ae45a902.html" target="_blank" rel="external">荧光定量PCR应用指南{推荐}</a></p>
<p>（10） <a href="http://sphweb.bumc.bu.edu/otlt/mph-modules/bs/bs704_nonparametric/BS704_Nonparametric4.html" target="_blank" rel="external">Mann Whitney U Test (Wilcoxon Rank Sum Test)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;qPCR结果分析及非参数检验&lt;/blockquote&gt;
    
    </summary>
    
      <category term="实验" scheme="https:///AnJingwd.github.io/categories/%E5%AE%9E%E9%AA%8C/"/>
    
    
      <category term="实验" scheme="https:///AnJingwd.github.io/tags/%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>IGV批量查看变异</title>
    <link href="https:///AnJingwd.github.io/2018/01/26/IGV%E6%89%B9%E9%87%8F%E6%9F%A5%E7%9C%8B%E5%8F%98%E5%BC%82/"/>
    <id>https:///AnJingwd.github.io/2018/01/26/IGV批量查看变异/</id>
    <published>2018-01-26T03:21:34.000Z</published>
    <updated>2018-04-11T10:50:23.029Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">IGV批量查看变异并过滤</blockquote>

<a id="more"></a>
<h1 id="IGV可视化准备"><a href="#IGV可视化准备" class="headerlink" title="IGV可视化准备"></a>IGV可视化准备</h1><p><a href="http://www.nature.com/nbt/journal/v29/n1/full/nbt.1754.html" target="_blank" rel="external">Nature biotechnology文献</a>：Integrative Genomics Viewer</p>
<p><a href="http://software.broadinstitute.org/software/igv/download" target="_blank" rel="external">Downloads IGV </a>; &emsp;<a href="http://software.broadinstitute.org/software/igv/igvtools" target="_blank" rel="external">igvtools</a>为一些数据可视化预处理程序</p>
<p>IGV可视化数据准备</p>
<ul>
<li>不是什么数据都可以拿IGV看的，参考基因组必须为FASTA格式；</li>
<li>IGV只是负责将比对结果可视化，并没有比对过程，所以不能直接载入reads；</li>
<li>需要将待比对的reads与前面指定的参考基因组用bwa进行比对；</li>
<li>比对后的sam文件也不能直接载入，<strong>要转bam；bam排序；bam建索引（可以一步完成）</strong>；</li>
</ul>
<p><strong>需要两个文件.bam文件和.bam.bai文件</strong></p>
<h1 id="IGV批量查看变异"><a href="#IGV批量查看变异" class="headerlink" title="IGV批量查看变异"></a>IGV批量查看变异</h1><h2 id="生成批量查看-bat文件"><a href="#生成批量查看-bat文件" class="headerlink" title="生成批量查看.bat文件"></a>生成批量查看.bat文件</h2><p>IGV批量运行的.bat文件命令参数及例子：<a href="http://software.broadinstitute.org/software/igv/PortCommands" target="_blank" rel="external">Controlling IGV through a Port</a> ,&emsp;&emsp; <a href="http://software.broadinstitute.org/software/igv/batch" target="_blank" rel="external">a batch file example</a> &emsp;&emsp; <a href="https://github.com/stevekm/IGV-snapshot-automator" target="_blank" rel="external">IGV-snapshot-automator项目</a></p>
<p>使用命令：<br>    java -Xmx1024M -jar ~/bin/igv-2.3.52/igv.jar -b IGV_screenshot.bat</p>
<h1 id="VNC-Viewer使用"><a href="#VNC-Viewer使用" class="headerlink" title="VNC Viewer使用"></a>VNC Viewer使用</h1><p>&emsp;&emsp;VNC (Virtual Network Console)是虚拟网络控制台的缩写。它 是一款优秀的远程控制工具软件，由著名的 AT&amp;T 的欧洲研究实验室开发的。VNC 是在基于 UNIX 和 Linux 操作系统的免费的开源软件。VNC基本上是由两部分组成：一部分是客户端的应用程序(vncviewer)；另外一部分是服务器端的应用程序(vncserver)。<a href="https://archive.realvnc.com/download/open/4.0/" target="_blank" rel="external">Download VNC Viewer </a>，解压后按照README安装即可</p>
<p><a href="http://blog.itpub.net/519536/viewspace-607549/" target="_blank" rel="external">Linux环境VNC服务安装、配置与使用</a></p>
<p>工作流程：</p>
<ol>
<li>服务器端启动VNC Server，使用命令vncserver,之后输入密码并确认，之后获得数字1，表示vncserver创建的第一个vnc viewer用户；</li>
<li>在win7的客户端创建连接即可</li>
</ol>
<p><img src="https://i.imgur.com/qnCN4Vt.jpg" alt=""></p>
<p>之后点击igv.sh运行igv,在Tools的Run Batch Script，导入.bat文件即可！</p>
<h1 id="变异的过滤"><a href="#变异的过滤" class="headerlink" title="变异的过滤"></a>变异的过滤</h1><p>&emsp;&emsp;在对Func.refGene，ExonicFunc.refGene，1000g2015aug_eas等进行hard filter后，一般全外显子测序找到的突变依然还有一两百个，接下来需要通过直观的可视化，验证SNP/SNV calls和结构重排，进一步去除假阳性的结果。<a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/IGV-Tutorial" target="_blank" rel="external">IGV Tutorial（推荐）</a></p>
<h2 id="查看技巧"><a href="#查看技巧" class="headerlink" title="查看技巧"></a>查看技巧</h2><ol>
<li>File—&gt;Load from Server可以加载许多tracks</li>
</ol>
<p><img src="https://i.imgur.com/Okk9sPp.jpg" alt=""></p>
<ol>
<li>在reads区右键可以选择不同的查看方式</li>
</ol>
<p><img src="https://i.imgur.com/SeQvjJ9.jpg" alt=""></p>
<ol>
<li><p><strong>可以同时开多个igv.sh或者将IGV_snapshots.bat文件合并，并删除掉除最后一个之外的所有exit语句</strong></p>
</li>
<li><p><strong>maxPanelHeight 设置很重要，默认800，但是igv截图不全，所以设置为10000</strong></p>
</li>
</ol>
<h2 id="过滤标准"><a href="#过滤标准" class="headerlink" title="过滤标准"></a>过滤标准</h2><ol>
<li>高质量的SNVs和SNPs要求在所有的reas中High base qualities，并且不能在reads的末端；</li>
<li>Good mapping quality of reads, no strand bias, allele frequency consistent with heterozygous mutation</li>
</ol>
<h3 id="Important-metrics-for-evaluating-the-validity-of-SNVs"><a href="#Important-metrics-for-evaluating-the-validity-of-SNVs" class="headerlink" title="Important    metrics    for    evaluating    the    validity of    SNVs:"></a>Important    metrics    for    evaluating    the    validity of    SNVs:</h3><ul>
<li>Coverage    </li>
<li>Amount  of     support    </li>
<li>Strand     bias    /    PCR    artifacts    </li>
<li>Mapping    qualities    </li>
<li>Base    qualities    </li>
</ul>
<ol>
<li>通过Coverage track查看比对情况，没有比对上参考基因组的碱基将在Coverage track和data panel以不同颜色高亮显示；</li>
</ol>
<p><img src="https://i.imgur.com/5dNcVPB.jpg" alt=""></p>
<ol>
<li>低质量的碱基calls是半透明的（faint,semi-transparent）</li>
</ol>
<p><img src="https://i.imgur.com/OYSyAsZ.png" alt=""></p>
<h3 id="区分SNP突变和错配："><a href="#区分SNP突变和错配：" class="headerlink" title="区分SNP突变和错配："></a>区分SNP突变和错配：</h3><ol>
<li>SNP突变如果是杂合，会在Coverage track处显示红蓝box,当鼠标悬停在上面时显示allele counts 和frequencies。可以在此处右键，选择sort alignments by &gt; base查看，以此根据碱基的透明度确定SNP碱基call的质量；</li>
</ol>
<p><img src="https://i.imgur.com/A5XUxR9.jpg" alt=""></p>
<ol>
<li>而错配的情况在在Coverage track处是没有红蓝box的。通过在此处右键，选择shade base by quality使得用半透明颜色表示的低质量碱基全部高亮显示，方便查看；接着选择Sort alignments by &gt; read strand，然后Color alignments by &gt; read strand，以此确定是否存在stand bias。</li>
</ol>
<p><img src="https://i.imgur.com/vgCysAl.png" alt=""></p>
<p><img src="https://i.imgur.com/Cu5w71N.png" alt=""></p>
<p><img src="https://i.imgur.com/HlMwp7F.png" alt=""></p>
<h3 id="Important-metrics-for-evaluating-SVs"><a href="#Important-metrics-for-evaluating-SVs" class="headerlink" title="Important    metrics    for    evaluating    SVs:"></a>Important    metrics    for    evaluating    SVs:</h3><ul>
<li>Coverage    </li>
<li>Insert    size    </li>
<li>Read    pair orientation</li>
</ul>
<p>具体使用可查看：<a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/LectureFiles/cshl/2016/IGV_Tutorial_Long_BroadInstitute.pdf" target="_blank" rel="external">IGV Lecture - Long, from Broad Institute    </a>，<strong>也包括了查看RNA-seq比对情况的操作</strong></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://www.cnblogs.com/leezx/p/5603481.html" target="_blank" rel="external">可视化工具之 IGV 使用方法</a></p>
<p>（2）<a href="https://gist.github.com/dfjenkins3/5c6dc1e55e78fa17b931" target="_blank" rel="external">IGV_Batch_Screenshots.md</a></p>
<p>（3）<a href="http://blog.csdn.net/Bingorl/article/details/78289280?locationNum=8&amp;fps=1" target="_blank" rel="external">如何使用VNC Viewer连接远程CentOS服务器</a></p>
<p>（4）<a href="https://www.biostars.org/p/5563/" target="_blank" rel="external">Quick Visual Inspection Of Mapping Images For A List Of Regions</a></p>
<p>（5）<a href="https://github.com/igvteam/igv/issues/160" target="_blank" rel="external">Unable to adjust image height via batch script </a></p>
<p>（6）<a href="https://mp.weixin.qq.com/s/tX0EaXlNNETSsY4DC68jCA" target="_blank" rel="external">Xshell显示图形化界面</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;IGV批量查看变异并过滤&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>设计miRNA的qPCR引物</title>
    <link href="https:///AnJingwd.github.io/2018/01/24/%E8%AE%BE%E8%AE%A1miRNA%E7%9A%84qPCR%E5%BC%95%E7%89%A9/"/>
    <id>https:///AnJingwd.github.io/2018/01/24/设计miRNA的qPCR引物/</id>
    <published>2018-01-24T02:01:15.000Z</published>
    <updated>2018-01-25T01:04:07.551Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">在线设计miRNA的qPCR引物</blockquote>

<a id="more"></a>
<h1 id="miRNA简介"><a href="#miRNA简介" class="headerlink" title="miRNA简介"></a>miRNA简介</h1><p>&emsp;&emsp;microRNAs(miRNAs)是指长度在20-24nt的非编码RNAs,其可通过影响转录的mRNAs的转录和稳定性，参与细胞组织的转录后基因表达调控。miRNAs由RNA聚合酶II转录为带帽子和多聚腺苷酸的初级转录物（pri-miRNA）的一部分（有的编码蛋白，有的是非编码的）。初级转录物被Drosha核糖核酸酶III切割产生大约70nt的茎环前体miRNA(pre-miRNA)，其被细胞质Dicer 核糖核酸酶裂解产生成熟的miRNA和反义miRNA star(miRNA*)。成熟的miRNA包含在RNA诱导的沉默复合物（RISC)中。通过不完全的碱基配对，其能够识别靶标mRNA的3’端，并通常导致的结果是翻译被抑制或者靶标mRNA的去稳定化。RefSeq代表预测的microRNA的茎环结构。</p>
<p>miRNA主要公共数据库<a href="http://www.mirbase.org/" target="_blank" rel="external">miRBase</a>中已经有1W多条来自不同物种的miRNA序列</p>
<p><img src="https://i.imgur.com/qfASLJU.jpg" alt=""></p>
<h1 id="miRNA检测引物设计"><a href="#miRNA检测引物设计" class="headerlink" title="miRNA检测引物设计"></a>miRNA检测引物设计</h1><p>引物有两种类型，一个是poly加尾，一个是加茎环结构。PCR荧光定量又分为探针法和染料法：</p>
<ol>
<li>Poly方法的话，引物设计简单，但是引起非特异性扩增的可能性大。</li>
<li>探针法特异性更高，但是价格高，不适合大批量的实验。</li>
</ol>
<h2 id="加Poly方法"><a href="#加Poly方法" class="headerlink" title="加Poly方法"></a>加Poly方法</h2><p>miRNA qRT-PCR Detection Kit中已提供有miRNA检测的Reverse 通用引物：“Universal adaptor PCR Primer”，Forward 检测引物需客户参考miRNA序列自行设计。因为miRNA序列长度一般都在18～24nt之间，所以其检测的Forward 检测引物一般都直接选用其miRNA序列或为增加其检测的特异性而特殊设计的序列：如有的miRNA GC含量偏高或引物易形成引物二聚体，其引物可为miRNA 3’端去除几个碱基后整理的序列。</p>
<p>miRNA qPCR Forward Primer 设计举例（以小鼠mmu-miR-125b-5p为例）：<br>在miRNA Database中查找检测的miRNA序列，如下图所示：<a href="http://www.mirbase.org/cgi-bin/mature.pl?mature_acc=MIMAT0000136" target="_blank" rel="external">miRNA Database</a></p>
<p><img src="https://i.imgur.com/a8j33ex.jpg" alt=""></p>
<p><strong>如果不确定5p或者3p哪一个有功能，要么都设计，要么参考Previous IDs并查阅文献</strong></p>
<p>则其Forward 检测引物可为：</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Sequences</th>
</tr>
</thead>
<tbody>
<tr>
<td>miRNA 成熟序列</td>
<td>ucccugagacccuaacuuguga</td>
</tr>
<tr>
<td>上游引物序列</td>
<td>tccctgagaccctaacttgtga （Tm：58.8）</td>
</tr>
</tbody>
</table>
<p>通用序列是：5′-GCTGTCAACGATACGCTACGTAACG-3′，也就是下游引物序列，内参一般使用U6基因：</p>
<ul>
<li>U6-Control-F 5＇ -CTCGCTTCGGCAGCACA-3＇</li>
<li>U6-Control-R 5＇ -AACGCTTCACGAATTTGCGT-3＇</li>
</ul>
<p><strong>最后，需要检测下引物对的几个参数</strong></p>
<p>NCBI 的<a href="https://www.ncbi.nlm.nih.gov/tools/primer-blast/" target="_blank" rel="external">Primer-BLAST</a>工具</p>
<p>在Primer Parameters 中分别输入上下游引物，在Primer Pair Specificity Checking Parameters 的Database 中选择相应模板类型（这里我选择Refseq mRNA)，将Organism 的物种改成Mus (taxid:10088)，即小鼠。然后点击左下角的Get Primers就可以得到比对结果。</p>
<ul>
<li>结果中主要看看是否有目的基因以外的基因出现，如果其它的基因也可以扩增出来，那说明引物特异性不好，可将引物返回我们再重新设计</li>
<li>如果出现的非目的条带和目的条带大小相差较大，可忽略不计，因为PCR扩增程序中延伸时间的限制，这种非目的条带扩增不出来。</li>
<li>另外，有些非目的条带和引物之间有四五个碱基不能互补配对，一般是扩增不出来的，尤其是这种不能互补的碱基在引物的3’端时，扩增不出的可能性更大。</li>
</ul>
<p><img src="https://i.imgur.com/c9BYFJe.jpg" alt=""></p>
<ol>
<li>Tm 融链温度 这个最关键，主要还是看这个，内参基因U6的Tm值为60，所以设计的上游引物也尽量在这个温度左右。通用引物做一些优化后为GCTGTCAACGATACGCTACCTA(去掉右端的剩下22个碱基，保持与大多成熟miRNA长度一致，然后将右端第三位的G改为C，降低通用引物的Self complementarity)。</li>
</ol>
<p><img src="https://i.imgur.com/Q6Fm06U.png" alt=""></p>
<p><strong>设计过程中，通过对上游引物5’端加1-3个GC碱基或者对上游引物3’端去除几个碱基使上游引物Tm值也在60左右即可！！！</strong></p>
<ol>
<li>GC%值 这个标准的话是45-50左右，但是主要还是服从于调整Tm值。</li>
<li>Self complementarity 贴吧里说的是越低越好，我有一条引物的值为9，打算让生工重新设计，但是生工的MM说了，miRNA他的要求跟别的普通的要求不一样，好吧</li>
<li><strong>最重要的特异性扩增问题：miRNA是不用检测特异性的，可以直接使用的。</strong></li>
</ol>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://wenku.baidu.com/view/882b5c2b2f60ddccda38a087.html" target="_blank" rel="external">miRNA命名规范</a></p>
<p>（2）<a href="http://www.dxy.cn/bbs/topic/17332608" target="_blank" rel="external">miRNA用荧光定量PCR检测的流程以及汇总 [推荐]</a></p>
<p>（3）<a href="https://jingyan.baidu.com/article/b0b63dbf19baf74a483070c8.html" target="_blank" rel="external">如何在pubmed中设计QPCR引物？</a></p>
<p>（4）<a href="http://www.dxy.cn/bbs/thread/30911259#30911259" target="_blank" rel="external">MiRNA 引物设计与合成总结</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;在线设计miRNA的qPCR引物&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>批量生成与提交shell脚本</title>
    <link href="https:///AnJingwd.github.io/2018/01/21/%E6%89%B9%E9%87%8F%E7%94%9F%E6%88%90%E4%B8%8E%E6%8F%90%E4%BA%A4shell%E8%84%9A%E6%9C%AC/"/>
    <id>https:///AnJingwd.github.io/2018/01/21/批量生成与提交shell脚本/</id>
    <published>2018-01-21T02:15:40.000Z</published>
    <updated>2018-03-10T13:41:02.833Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">批量生成与提交shell脚本</blockquote>

<a id="more"></a>
<p>同一分析流程的shell脚本，通过替换样本参数，批量生成每个样本单独的piplines，从而实现批量提交，批量运行，在样本多的时候适用。</p>
<h1 id="批量生成shell脚本"><a href="#批量生成shell脚本" class="headerlink" title="批量生成shell脚本"></a>批量生成shell脚本</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#creat_multi_piplines.py</span></div><div class="line"></div><div class="line">  <span class="number">1</span> <span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line">  <span class="number">2</span> <span class="comment">#!/home/wangdong/python/python27/bin/python2.7</span></div><div class="line">  <span class="number">3</span> </div><div class="line">  <span class="number">4</span> <span class="keyword">import</span> argparse,os,re,sys</div><div class="line">  <span class="number">5</span> </div><div class="line">  <span class="number">6</span> <span class="comment">#import parameters</span></div><div class="line">  <span class="number">7</span> parser = argparse.ArgumentParser(description=<span class="string">'manual to this script'</span>)</div><div class="line">  <span class="number">8</span> parser.add_argument(<span class="string">'--pipline_file'</span>, type=str, default=<span class="keyword">None</span>)</div><div class="line">  <span class="number">9</span> parser.add_argument(<span class="string">'--info_file'</span>, type=str, default=<span class="keyword">None</span>)</div><div class="line"> <span class="number">10</span> parser.add_argument(<span class="string">'--result_dir'</span>, type=str, default=<span class="keyword">None</span>)</div><div class="line"> <span class="number">11</span> args = parser.parse_args()</div><div class="line"> <span class="number">12</span> </div><div class="line"> <span class="number">13</span> </div><div class="line"> <span class="number">14</span> <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(args.result_dir):</div><div class="line"> <span class="number">15</span> &gt;---os.mkdir(args.result_dir)</div><div class="line"> <span class="number">16</span> </div><div class="line"> <span class="number">17</span> sample_pair = &#123;&#125;</div><div class="line"> <span class="number">18</span> <span class="keyword">with</span> open(args.info_file) <span class="keyword">as</span> f1:</div><div class="line"> <span class="number">19</span> &gt;---<span class="keyword">for</span> line <span class="keyword">in</span> f1:</div><div class="line"> 20 &gt;---&gt;---line = line.strip()</div><div class="line"> 21 &gt;---&gt;---mylist = line.split('\t')</div><div class="line"> 22 &gt;---&gt;---sample_pair[mylist[1]] = [mylist[0],mylist[2]]</div><div class="line"> <span class="number">23</span> </div><div class="line"> <span class="number">24</span> </div><div class="line"> <span class="number">25</span> <span class="keyword">for</span> key <span class="keyword">in</span> sample_pair:</div><div class="line"> <span class="number">26</span> &gt;---new_pip_file_name = <span class="string">"&#123;&#125;.sh"</span>.format(key)</div><div class="line"> <span class="number">27</span> &gt;---result_file = open(os.path.join(args.result_dir,new_pip_file_name),<span class="string">'w'</span>)</div><div class="line"> <span class="number">28</span> &gt;---<span class="keyword">with</span> open(args.pipline_file,<span class="string">'r'</span>) <span class="keyword">as</span> f2:</div><div class="line"> 29 &gt;---&gt;---for line in f2:</div><div class="line"> 30 &gt;---&gt;---&gt;---line = re.sub("MY_SAMPLE_ID_2017", str(sample_pair[key][0]), str(line))</div><div class="line"> 31 &gt;---&gt;---&gt;---line = re.sub("MY_SAMPLE_ID_2018", str(sample_pair[key][1]), str(line))</div><div class="line"> 32 &gt;---&gt;---&gt;---line = re.sub("MY_LIBRARY_ID", str(key), str(line))</div><div class="line"> 33 &gt;---&gt;---&gt;---result_file.write(line)</div><div class="line"> <span class="number">34</span> &gt;---result_file.close()</div><div class="line"> <span class="number">35</span> &gt;---chmod_commond = <span class="string">"chmod +x &#123;&#125;"</span>.format(os.path.join(args.result_dir, new_pip_file_name))</div><div class="line"> <span class="number">36</span> &gt;---os.system(chmod_commond)</div><div class="line"> <span class="number">37</span> </div><div class="line"> <span class="number">38</span> </div><div class="line"> <span class="number">39</span> </div><div class="line"> <span class="number">40</span> <span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"> <span class="number">41</span> &gt;---print(<span class="string">'well done!'</span>)</div></pre></td></tr></table></figure>
<h1 id="批量提交shell脚本"><a href="#批量提交shell脚本" class="headerlink" title="批量提交shell脚本"></a>批量提交shell脚本</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#submit_multi_work.sh</span></div><div class="line"></div><div class="line">  1 <span class="comment">####################</span></div><div class="line">  2 <span class="comment">###function###</span></div><div class="line">  3 <span class="comment">#submit_multi_work</span></div><div class="line">  4 <span class="comment">####data####</span></div><div class="line">  5 <span class="comment">#20180121</span></div><div class="line">  6 <span class="comment">####use#####</span></div><div class="line">  7 <span class="built_in">echo</span> <span class="string">"usage: ./submit_multi_work.sh tasks_list.txt "</span></div><div class="line">  8                                              </div><div class="line">  9 <span class="comment">####################           </span></div><div class="line"> 10 <span class="comment">#!/bin/bash                       </span></div><div class="line"> 11 <span class="built_in">set</span> -u                           </div><div class="line"> 12 <span class="built_in">set</span> -e    </div><div class="line"> 13 <span class="built_in">set</span> -o pipefail</div><div class="line"> 14           </div><div class="line"> 15 <span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">""</span> ] ; <span class="keyword">then</span></div><div class="line"> 16 &gt;---<span class="built_in">echo</span> <span class="string">"Bad command. No tasklist file been appointed. Right format: <span class="variable">$0</span> tasks_list.txt"</span></div><div class="line"> 17 &gt;---<span class="built_in">exit</span> 1</div><div class="line"> 18 <span class="keyword">fi</span></div><div class="line"> 19 tasks_num=`cat <span class="variable">$1</span>|wc -l`</div><div class="line"> 20 <span class="built_in">echo</span> <span class="string">"total tasks founded:<span class="variable">$tasks_num</span>"</span></div><div class="line"> 21 <span class="built_in">echo</span> <span class="string">"Now begin running....."</span></div><div class="line"> 22 mix_tasks=6  <span class="comment">#set mix tasks to assign</span></div><div class="line"> 23 cat <span class="variable">$1</span>|<span class="keyword">while</span> <span class="built_in">read</span> line</div><div class="line"> 24 <span class="keyword">do</span></div><div class="line"> 25 &gt;---tasks=`ps -u wangdong |grep -w <span class="string">'sh'</span> | wc -l`</div><div class="line"> 26 &gt;---<span class="keyword">while</span> [ <span class="variable">$tasks</span> -gt <span class="variable">$mix_tasks</span> ]</div><div class="line"> 27 &gt;---&gt;---<span class="keyword">do</span></div><div class="line"> 28 &gt;---&gt;---sleep 20</div><div class="line"> 29 &gt;---&gt;---&gt;---<span class="built_in">echo</span> <span class="string">"task is running"</span></div><div class="line"> 30 &gt;---&gt;---&gt;---tasks=`ps -u wangdong |grep -w <span class="string">'sh'</span> | wc -l`</div><div class="line"> 31 &gt;---&gt;---<span class="keyword">done</span></div><div class="line"> 32 &gt;---<span class="variable">$line</span>  <span class="comment"># run the COMMOND in tasklist</span></div><div class="line"> 33 &gt;---<span class="built_in">echo</span> <span class="string">"running <span class="variable">$line</span>"</span>~~</div><div class="line"> 34 &gt;---sleep 5</div><div class="line"> 35 <span class="keyword">done</span>~~</div><div class="line"> 36 <span class="built_in">echo</span> <span class="string">"end."</span>~</div><div class="line"></div><div class="line"><span class="comment">#tasks_list.txt</span></div><div class="line"></div><div class="line">  1 nohup /home/wangdong/projects/project4/piplines/oi_capture_process_sh/oi_1.sh &gt; oi_1.logfile 2&gt;&amp;1 &amp;</div><div class="line">  2 nohup /home/wangdong/projects/project4/piplines/oi_capture_process_sh/oi_2.sh &gt; oi_2.logfile 2&gt;&amp;1 &amp;</div><div class="line">  3 nohup /home/wangdong/projects/project4/piplines/oi_capture_process_sh/oi_3.sh &gt; oi_3.logfile 2&gt;&amp;1 &amp;</div><div class="line"></div><div class="line"><span class="comment">#run the submit_multi_work.sh</span></div><div class="line"></div><div class="line">    ./submit_multi_work.sh tasks_list.txt &gt; batchRun.log &amp;</div><div class="line"></div><div class="line"><span class="comment">#simple commond </span></div><div class="line"></div><div class="line">    cat task_list.txt |<span class="keyword">while</span> <span class="built_in">read</span> line;<span class="keyword">do</span> <span class="variable">$line</span>;<span class="keyword">done</span></div></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://www.genek.tv/article/25" target="_blank" rel="external">批量生成脚本的技巧</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;批量生成与提交shell脚本&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术" scheme="https:///AnJingwd.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="https:///AnJingwd.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>ANNOVAR进行突变注释</title>
    <link href="https:///AnJingwd.github.io/2018/01/20/ANNOVAR%E8%BF%9B%E8%A1%8C%E7%AA%81%E5%8F%98%E6%B3%A8%E9%87%8A/"/>
    <id>https:///AnJingwd.github.io/2018/01/20/ANNOVAR进行突变注释/</id>
    <published>2018-01-20T13:50:21.000Z</published>
    <updated>2018-03-06T12:43:23.643Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">ANNOVAR进行突变注释</blockquote>

<a id="more"></a>
<h1 id="ANNOVAR简介"><a href="#ANNOVAR简介" class="headerlink" title="ANNOVAR简介"></a>ANNOVAR简介</h1><p><a href="http://annovar.openbioinformatics.org/en/latest/" target="_blank" rel="external">ANNOVAR Documentation</a>  &emsp;&emsp; ANNOVAR其网页版<a href="http://wannovar.wglab.org/" target="_blank" rel="external">wANNOVAR</a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4718734/bin/NIHMS751006-supplement-Supplementary_Text_and_Figures.pdf" target="_blank" rel="external">Comparison between ANNOVAR and other command line tools for variant annotation</a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4718734/bin/NIHMS751006-supplement-Supplementary_Text_and_Figures.pdf" target="_blank" rel="external">Comparison between ANNOVAR and other command line tools for variant annotation</a></p>
<p>&emsp;&emsp;例如对于人的外显子组测序，可以获得4百万个SNVs(单核苷酸突变)和50万个indels(insertion or deletions)突变。对于基因间区的突变，我们对其侧翼基因感兴趣，并想知道两者之间距离；对于外显子区域的变异，我们关系其对于氨基酸的改变。</p>
<p>&emsp;&emsp;ANNOVAR是一个perl编写的命令行工具，能对<strong>根据hg18,hg19,hg38不同版本基因组call 出来的遗传变异</strong>进行功能注释。允许多种输入文件格式，包括最常被使用的VCF格式，只需要给出chromosome, start position, end position, reference nucleotide and observed nucleotides这6个字段。输出文件也有多种格式，包括注释过的VCF文件、用tab或者逗号分隔的text文件。</p>
<p>&emsp;&emsp;ANNOVAR支持三种不同形式的注释： gene-based, region-based 和filter-based. 这三种注释分别针对于每一个variant的不同方面：</p>
<p><img src="https://i.imgur.com/UGMNkMZ.jpg" alt=""></p>
<ul>
<li>基于基因的注释（gene-based annotation）：SNPs或者CNV变异是否造成编码蛋白氨基酸的改变或者影响；</li>
<li>基于区域的注释（region-based annotation）揭示variant 与不同基因组特定区域的关系，例如：它是否与以下区域有overlap: conserved genomic elements，cytogenetic bands, microRNA target sites和Encyclopedia of DNA Elements (ENCODE)-annotated regions等</li>
<li>基于过滤的注释（ filter-based annotation ）则给出这个variant的一系列信息，例如是否该变异在dbSNP数据库报道过，该变异在1000genome项目，外显子组项目中的频率等，以及不同的计算机算法对变异注释的结果（SIFT/PolyPhen/LRT/MutationTaster/MutationAssessor/FATHMM/MetaSVM/MetaLR scores）等</li>
</ul>
<h1 id="下载（无需安转，但需要安装perl环境）"><a href="#下载（无需安转，但需要安装perl环境）" class="headerlink" title="下载（无需安转，但需要安装perl环境）"></a>下载（无需安转，但需要安装perl环境）</h1><p>最新版官网：<a href="http://annovar.openbioinformatics.org/en/latest/" target="_blank" rel="external">网址</a></p>
<pre><code>untargz annovar.latest.tar.gz
echo &apos;export PATH=/home/wangdong/softwares/annovar/annovar_latest&apos;&gt;&gt;~/.bashrc
</code></pre><p>使用ANNOVAR进行突变注释时，gene definition files(例如GTF文件) 和transcript FASTA files（FASTA文件）版本需要同步对应，否则可能会出现mis-annotated variants (such as annotating SNVs as<br>indels)</p>
<h1 id="常用注释数据库下载"><a href="#常用注释数据库下载" class="headerlink" title="常用注释数据库下载"></a>常用注释数据库下载</h1><ol>
<li><p>注释文件在ANNOVER分For gene-based annotation和For filter-based annotation以列表的形式详细介绍，<a href="http://annovar.openbioinformatics.org/en/latest/user-guide/download/" target="_blank" rel="external">链接</a></p>
<p> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 refGene humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 1000g2015aug humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 exac03 humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 clinvar_20170905 humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 avsnp150 humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 cosmic70 humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 icgc21 humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 nci60 humandb/</p>
</li>
</ol>
<p>这里下载的是几个通常用到的数据库的最新版：</p>
<table>
<thead>
<tr>
<th>Build</th>
<th>Table  Name</th>
<th>Explanation</th>
<th>Date</th>
</tr>
</thead>
<tbody>
<tr>
<td>hg19</td>
<td>refGene</td>
<td>FASTA sequences for all annotated transcripts in RefSeq Gene</td>
<td>20170601</td>
</tr>
<tr>
<td>hg19</td>
<td>1000g2015aug (6 data sets)</td>
<td>The 1000G team fixed a bug in chrX frequency calculation. Based on 201508 collection v5b (based on 201305 alignment)</td>
<td>20150824</td>
</tr>
<tr>
<td>hg19</td>
<td>exac03</td>
<td>ExAC 65000 exome allele frequency data for ALL, AFR (African), AMR (Admixed American), EAS (East Asian), FIN (Finnish), NFE (Non-finnish European), OTH (other), SAS (South Asian)). version 0.3. Left normalization done.</td>
<td>20151129</td>
</tr>
<tr>
<td>hg19</td>
<td>clinvar_20170905</td>
<td>Clinvar version 20170905 with separate columns (CLINSIG CLNDBN CLNACC CLNDSDB CLNDSDBID)</td>
<td>20171003</td>
</tr>
<tr>
<td>hg19</td>
<td>avsnp150</td>
<td>dbSNP150 with allelic splitting and left-normalization</td>
<td>20170929</td>
</tr>
<tr>
<td>hg19</td>
<td>cosmic70</td>
<td>COSMIC database version 70</td>
<td>20140911</td>
</tr>
<tr>
<td>hg19</td>
<td>icgc21</td>
<td>International Cancer Genome Consortium version 21</td>
<td>20160622</td>
</tr>
<tr>
<td>hg19</td>
<td>nci60</td>
<td>NCI-60 human tumor cell line panel exome sequencing allele frequency data</td>
<td>20130724</td>
</tr>
</tbody>
</table>
<ul>
<li>‘1000g2015aug’(version  August 2015), 是2015年版，包含6个 data sets，提供千人基因组项目的替换等位基因频率等信息。</li>
<li>‘exac03’(version 0.3),是0.3版外显子Exome Aggregation Consortium中报道过的variants。</li>
<li>‘clinvar_20140929’ for the variants reported in the ClinVar database (version 20140929)，ClinVar数据库整合了十多个不同类型数据库、通过标准的命名法来描述疾病，同时支持科研人员将数据下载到本地中，开展更为个性化的研究。<strong>ClinVar数据库的目的在于整合这些分散的数据、将变异、临床表型、实证数据以及功能注解与分析等四个方面的信息，通过专家评审，逐步形成一个标准的、可信的、稳定的遗传变异-临床表型相关的数据库。</strong></li>
</ul>
<ol>
<li>基于保守基因组元件注释数据文件，每一个在ANNOVAR说明文档都有详细介绍，<a href="http://annovar.openbioinformatics.org/en/latest/user-guide/region/#overview" target="_blank" rel="external">链接地址</a>，这里我们也只下载常用的即可。</li>
</ol>
<pre><code>perl annotate_variation.pl --downdb --buildver hg19 cytoBand humandb/ 
perl annotate_variation.pl -build hg19 -downdb gwasCatalog humandb/
</code></pre><ul>
<li>‘cytoBand’ 是每个细胞间band（cytogenetic band）的染色体坐标信息 ,</li>
</ul>
<p>注意：</p>
<p>1、第一个命令中不包含 ‘–webfrom annovar’ 选项, 因此是从the UCSC Genome Browser annotation database下载文件的； </p>
<p>2、 ‘–buildver hg19’ 选项是针对hg19这一版的基因组的；</p>
<p>3、运行上面命令后，在 ‘humandb/’ 目录下会多几个以 ‘hg19’为前缀的文件。 </p>
<h1 id="变异注释"><a href="#变异注释" class="headerlink" title="变异注释"></a>变异注释</h1><h2 id="ANNOVER-input-file"><a href="#ANNOVER-input-file" class="headerlink" title="ANNOVER input file"></a>ANNOVER input file</h2><p>ANNOVER的输入文件要求VCF 4.0及以上，这一要求对于绝大多数call 变异的软件，如GATK何SAMtools都是满足的。<a href="http://vcftools.sourceforge.net/specs.html" target="_blank" rel="external">VCF (Variant Call Format) specifications （包括 VCF4.0，4.1，4.2，以及BCF v2.1）
</a></p>
<h2 id="对于ANNOVAR新手，最方便使用table-annovar-pl程序"><a href="#对于ANNOVAR新手，最方便使用table-annovar-pl程序" class="headerlink" title="对于ANNOVAR新手，最方便使用table_annovar.pl程序"></a>对于ANNOVAR新手，最方便使用table_annovar.pl程序</h2><pre><code>table_annovar.pl example/ex1.avinput humandb/ -buildver hg19 -out myanno -remove -protocol refGene,cytoBand,exac03,avsnp147,dbnsfp30a -operation gx,r,f,f,f -nastring . -csvout -polish -xref example/gene_xref.txt
</code></pre><h3 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h3><ul>
<li>-buildver hg19 ANNOVAR默认注释是根据hg18的，所以这里需要指定hg19。</li>
<li>-out myanno 输出注释结果文件myanno.hg19_multianno.txt</li>
<li>-operation g表示gene-based；-operation gx 表示 gene-based with cross-reference annotation (from -xref argument)；-operation r 表示region-based； -operation f 表示 filter-based。如果不提供xref文件就只能指定-operation g。</li>
<li>-csvout使用逗号输出，如果喜欢使用tab键输出，则只需要去除 -csvout</li>
</ul>
<h2 id="annotate-variation-pl是-ANNOVAR的核心程序"><a href="#annotate-variation-pl是-ANNOVAR的核心程序" class="headerlink" title="annotate_variation.pl是 ANNOVAR的核心程序"></a>annotate_variation.pl是 ANNOVAR的核心程序</h2><p>使用例子：</p>
<pre><code>annotate_variation.pl -geneanno -dbtyep refGene -out ex1 -buildver hg19 example/ex1.avinput humandb/
annotate_variation.pl -regionanno -dbtype cytoBand -buildver hg19 example/ex1.avinput humandb/ 
annotate_variation.pl -filter -dbtype exac03 -buildver hg19 example/ex1.avinput humandb/
</code></pre><h3 id="参数解释及技术问题"><a href="#参数解释及技术问题" class="headerlink" title="参数解释及技术问题"></a>参数解释及技术问题</h3><ul>
<li><p>–geneanno -dbtype refGene是默认的，可以省略</p>
</li>
<li><p><strong>ncRNA above refers to RNA without coding annotation. It does not mean that this is a RNA that will never be translated.</strong> For example, BC039000 is regarded as ncRNA by ANNOVAR when using UCSC Known Gene annotation, but it is regarded as a protein-coding gene by ANNOVAR when using ENSEMBL annotation</p>
</li>
<li>By default, the gene name is printed in the second column in the variant_function file. Sometimes, a user may want to see <strong>transcript name instead. The –transcript_function argument can be used to specify this behavior</strong>. Note that it is very likely that multiple transcript names will be printed in the output separated by comma, as each gene name typically corresponds to several transcript names</li>
</ul>
<h1 id="注释结果解释"><a href="#注释结果解释" class="headerlink" title="注释结果解释"></a>注释结果解释</h1><h2 id="表头含义"><a href="#表头含义" class="headerlink" title="表头含义"></a>表头含义</h2><p><img src="https://i.imgur.com/mjzONDT.jpg" alt=""></p>
<p><img src="https://i.imgur.com/rISPcMC.jpg" alt=""></p>
<h2 id="各列内容及含义"><a href="#各列内容及含义" class="headerlink" title="各列内容及含义"></a>各列内容及含义</h2><ul>
<li>Func.refGene, Gene.refGene, GeneDetail.refGene, ExonicFunc.refGene, AAChange.refGene列包含变异对基因结构的影响。其中如果Func.refGene给出注释显示该变异位于exonic/intronic/ncRNA，那么Gene.refGene列给出相应的基因名（如果是多个基因，中间用逗号分割）；如果不是，则给出该变异侧翼两个基因及与其距离。</li>
<li>ExAC* 等列表示在外显子组项目（Exome Aggregation Consortium）数据集中所有样本，包括亚人种中的等位基因频率。</li>
<li>avsnp138 列该变异在dbSNP（version 138）数据集中的SNP 的ID号</li>
<li>其他列包含使用多个变异功能预测软件得到的预测分数，包括SIFT scores, PolyPhen2 HDIV scores, PolyPhen2 HVAR scores, LRT scores, MutationTaster scores, MutationAssessor score, FATHMM scores, GERP++ scores, CADD scores, DANN scores, PhyloP scores and SiPhy scores等。</li>
</ul>
<h2 id="Func-refGene列具体含义"><a href="#Func-refGene列具体含义" class="headerlink" title="Func.refGene列具体含义"></a>Func.refGene列具体含义</h2><table>
<thead>
<tr>
<th>Value</th>
<th>Default precedence</th>
<th>Explanation</th>
<th>Sequence Ontology</th>
</tr>
</thead>
<tbody>
<tr>
<td>exonic</td>
<td>1</td>
<td>variant overlaps a coding</td>
<td>exon_variant (SO:0001791)</td>
</tr>
<tr>
<td>splicing</td>
<td>1</td>
<td>variant is within 2-bp of a splicing junction (use -splicing_threshold to change this)</td>
<td>splicing_variant (SO:0001568)</td>
</tr>
<tr>
<td>ncRNA</td>
<td>2</td>
<td>variant overlaps a transcript without coding annotation in the gene definition (see Notes below for more explanation)</td>
<td>non_coding_transcript_variant (SO:0001619)</td>
</tr>
<tr>
<td>UTR5</td>
<td>3</td>
<td>variant overlaps a 5’ untranslated region</td>
<td>5_prime_UTR_variant (SO:0001623)</td>
</tr>
<tr>
<td>UTR3</td>
<td>3</td>
<td>variant overlaps a 3’ untranslated region</td>
<td>3_prime_UTR_variant (SO:0001624)</td>
</tr>
<tr>
<td>intronic</td>
<td>4</td>
<td>variant overlaps an intron</td>
<td>intron_variant (SO:0001627)</td>
</tr>
<tr>
<td>upstream</td>
<td>5</td>
<td><strong>variant overlaps 1-kb region upstream of transcription start site</strong></td>
<td>upstream_gene_variant (SO:0001631)</td>
</tr>
<tr>
<td>downstream</td>
<td>5</td>
<td><strong>variant overlaps 1-kb region downtream of transcription end site (use -neargene to change this)</strong></td>
<td>downstream_gene_variant (SO:0001632)</td>
</tr>
<tr>
<td>intergenic</td>
<td>6</td>
<td>variant is in intergenic region</td>
<td>intergenic_variant (SO:0001628)</td>
</tr>
</tbody>
</table>
<p><strong>The precedence defined above is used to decide what function to print out when a variant fit multiple functional categories</strong></p>
<h2 id="ExonicFunc-refGene列具体含义"><a href="#ExonicFunc-refGene列具体含义" class="headerlink" title="ExonicFunc.refGene列具体含义"></a>ExonicFunc.refGene列具体含义</h2><table>
<thead>
<tr>
<th>Value</th>
<th>Default precedence</th>
<th>Explanation</th>
<th>Sequence Ontology</th>
</tr>
</thead>
<tbody>
<tr>
<td>frameshift insertion</td>
<td>1</td>
<td>an insertion of one or more nucleotides that cause frameshift changes in protein coding sequence</td>
<td>frameshift_elongation (SO:0001909)</td>
</tr>
<tr>
<td>frameshift deletion</td>
<td>2</td>
<td>a deletion of one or more nucleotides that cause frameshift changes in protein coding sequence</td>
<td>frameshift_truncation (SO:0001910)</td>
</tr>
<tr>
<td>frameshift block substitution</td>
<td>3</td>
<td>a block substitution of one or more nucleotides that cause frameshift changes in protein coding sequence</td>
<td>frameshift_variant (SO:0001589)</td>
</tr>
<tr>
<td>stopgain</td>
<td>4</td>
<td>a nonsynonymous SNV, frameshift insertion/deletion, nonframeshift insertion/deletion or block substitution that lead to the immediate creation of stop codon at the variant site. For frameshift mutations, the creation of stop codon downstream of the variant will not be counted as “stopgain”!</td>
<td>stop_gained (SO:0001587)</td>
</tr>
<tr>
<td>stoploss</td>
<td>5</td>
<td>a nonsynonymous SNV, frameshift insertion/deletion, nonframeshift insertion/deletion or block substitution that lead to the immediate elimination of stop codon at the variant site</td>
<td>stop_lost (SO:0001578)</td>
</tr>
<tr>
<td>nonframeshift insertion</td>
<td>6</td>
<td>an insertion of 3 or multiples of 3 nucleotides that do not cause frameshift changes in protein coding sequence</td>
<td>inframe_insertion (SO:0001821)</td>
</tr>
<tr>
<td>nonframeshift deletion</td>
<td>7</td>
<td>a deletion of 3 or mutliples of 3 nucleotides that do not cause frameshift changes in protein coding sequence</td>
<td>inframe_deletion (SO:0001822)</td>
</tr>
<tr>
<td>nonframeshift block substitution</td>
<td>8</td>
<td>a block substitution of one or more nucleotides that do not cause frameshift changes in protein</td>
<td>coding sequence    inframe_variant (SO:0001650)</td>
</tr>
<tr>
<td>nonsynonymous SNV</td>
<td>9</td>
<td>a single nucleotide change that cause an amino acid change</td>
<td>missense_variant (SO:0001583)</td>
</tr>
<tr>
<td>synonymous SNV</td>
<td>10</td>
<td>a single nucleotide change that does not cause an amino acid change</td>
<td>synonymous_variant (SO:0001819)</td>
</tr>
<tr>
<td>unknown</td>
<td>11</td>
<td>unknown function (due to various errors in the gene structure definition in the database file)</td>
<td>sequence_variant (SO:0001060)</td>
</tr>
</tbody>
</table>
<h2 id="A-unified-annotation-format"><a href="#A-unified-annotation-format" class="headerlink" title="A unified annotation format"></a>A unified annotation format</h2><p>不同的注释软件对突变注释的表示方式不统一，不利于交流，为此，多个注释软件的作者协定了一份统一的注释格式，<a href="http://snpeff.sourceforge.net/VCFannotationformat_v1.0.pdf" target="_blank" rel="external">文档链接</a></p>
<h1 id="突变有害性注释结果选择建议（ANNOVER作者）"><a href="#突变有害性注释结果选择建议（ANNOVER作者）" class="headerlink" title="突变有害性注释结果选择建议（ANNOVER作者）"></a>突变有害性注释结果选择建议（ANNOVER作者）</h1><ul>
<li>一般而言，建议使用one popular prediction score (such as SIFT) 和 one meta-score (such as metaSVM)预测来判断突变是否是有害的</li>
<li>对于 noncoding variants的有害性预测推荐使用one popular prediction score (such as PhyloP) 和 one meta-score (such as CADD)</li>
</ul>
<h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>vcf文件经过Annovar注释后突变个数应该相同，但对于原vcf文件类似如下情况，Annovar则会分别注释成两行</p>
<p><img src="https://i.imgur.com/vzD3s1M.jpg" alt=""></p>
<p>在Annovar官网的FAQ已经给出解释：</p>
<p><img src="https://i.imgur.com/NTrEEp8.png" alt=""></p>
<p>这里需要重新了解下vcf文件格式，（<a href="http://annovar.openbioinformatics.org/en/latest/articles/VCF/" target="_blank" rel="external">Annovar VCF Processing Guide</a>）：</p>
<ol>
<li>GT：样品的基因型（genotype）。两个数字中间用’/‘分 开，这两个数字表示双倍体的sample的基因型。0 表示样品中有ref的allele； 1 表示样品中variant的allele； <strong>2表示有第二个variant的allele</strong></li>
<li>VCF文件是描述位点的格式文件。尽管称作变异检出格式，但并不是为了描述变异或者基因型检出。其可以作为包含基因型检出（甚至变异）的一种选择，并且对于很多肺二倍体物种或者喝多情况（例如线粒体或者人的肿瘤），其有时候甚至不能说是包含基因型检出。但是，很多变异检出软件的目的是为了产生基因型检出；它们使用VCF作为输出文件，但是这并不意味着VCF文件是未存储变异检出而专门设计的。</li>
<li>因为VCF是一个位点描述文件，具有很多的结果。首先，并不是一行对应着一个变异。因为多个变异能在相同的位点，VCF文件的一行原则上可以描述多个突变（包含野生型非突变allele），和多种类型的基因型检出。例如，看下面这来自VCF文件的一行、其有8个tab键分割的列。在ALT列，具有数个逗号分割的改变的alleles。因此在单行上，数个插入和删除，以及一个单核苷酸（SNV）突变同时存在。</li>
</ol>
<p>1 112240038 . CTTT CTTTT,CTTTTT,CTTA,CTT,CT,C . PASS AC=986,3,1249,3,127,3;AF=0.196885,0.000599042,0.249401,0.000599042,0.0253594,0.000599042</p>
<p>很多Annovar使用者喜欢保留VCF文件中的突变注释信息（通过INFO列）。因此对于上述这种情况，我们需要在相同行的INFO列加注释信息到所有的6个allels，并且确保使用者知道相应的注释对应相应的allele</p>
<ol>
<li>VCF可以hijack你的变异，使得SNVs变为多核苷酸突变，并且使得简单的indels变的复杂。这将对注释造成困难，举上述的 CTTT-&gt;CTTA 改变作为例子，其应该是简单的T&gt;A （SNV），但是因为deletion/insertion hijack the locus，其被写为CTTT-&gt;CTTA 而不是T-&gt;A 。考虑到单个allele频率数据库（例如千人基因组项目频率数据库）将只具有 T-&gt;A 但没有 CTTT-&gt;CTTA，然后这个变异通过注释软件注释后将被遗漏，甚至其确实在1000G中被观察到过。</li>
</ol>
<p>同样的，CTTT-&gt;CTTTT 变异可能在数据库中没有记录，因为C&gt;CT可能是更合适的记录这个变异的方式。</p>
<ol>
<li>目前为止还没有描述indel的普遍认同的特定方式。很多使用者偏好做left-normalization（变异开始的位置应该尽可能向左，直至不能再左，这样数目越少越好）。但是HGVS明确指明了left-normalization将被用在cDNA（mRNA）的坐标上,这意味着 right-normalization被要求使用在人的基因组一半的基因上。</li>
<li>在阅读了这些事实后，现在的问题时我们应该如何注释VCF文件来确保最准确的结果呢？</li>
</ol>
<p>因为left-normalization变得越来越流行，我的建议是是就使用left-normalization。我的第二个建议是各个VCF行仅描述一个变异，以便indel不能隐藏SNPs，以此确保1对1的和数据库匹配。</p>
<p>我作为ANNOVAR开发者决定去预处理所有的1000G文件，ESP6500si文件和dbSNP文件，以便一行包含一个变异，使得每个变异都采取 left-normalized。已经更新的数据再2014年的12月可以获得了。</p>
<p>作为使用者我们应该这样做：（1）分割VCF文件确保每一行只包含一个变异；（2）left-normalize所有的VCF文件； （3）使用ANNOVAR注释</p>
<p>所以使用命令：</p>
<p>bcftools norm -m-both -o ex1.step1.vcf ex1.vcf.gz</p>
<p>bcftools norm -f human_g1k_v37.fasta -o ex1.step2.vcf ex1.step1.vcf</p>
<p>第一个命令分割多allels变异检出为单独的行，第二个命令运行真正的 left-normalization。（有时候第一个命令可能出现没有变异能被分解，尽管在文件中存在这些变异，这种情况下，你可以使用<a href="http://genome.sph.umich.edu/wiki/Vt" target="_blank" rel="external">vt program</a> 代替）</p>
<ol>
<li>目前使用left-normalized的数据集包括：avsnp138，avsnp142，clinvar_20150330<br>，1000g2014oct，exac03，esp6500siv2</li>
</ol>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://www.ncbi.nlm.nih.gov/pubmed/26379229" target="_blank" rel="external">Genomic variant annotation and prioritization with ANNOVAR and wANNOVAR</a></p>
<p>（2）<a href="http://blog.sina.com.cn/s/blog_670445240101j0pa.html" target="_blank" rel="external">每日一生信–基于保守性和规则性的预测方法SIFT和PolyPhen</a></p>
<p>（3）<a href="http://blog.csdn.net/g863402758/article/details/75304391" target="_blank" rel="external">annovar对人类基因组和非人类基因组variants注释流程</a></p>
<p>（4）<a href="http://ishare.iask.sina.com.cn/f/63732396.html" target="_blank" rel="external">ANNOVAR注释上机（推荐）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;ANNOVAR进行突变注释&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>RNA-seq质控</title>
    <link href="https:///AnJingwd.github.io/2018/01/10/RNA-seq%E8%B4%A8%E6%8E%A7/"/>
    <id>https:///AnJingwd.github.io/2018/01/10/RNA-seq质控/</id>
    <published>2018-01-10T13:39:44.000Z</published>
    <updated>2018-04-01T06:49:52.475Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">RNA-seq质控：去除低质量reads，adapter以及rRNA</blockquote>

<a id="more"></a>
<h1 id="pipline"><a href="#pipline" class="headerlink" title="pipline"></a>pipline</h1><p>比较值得关注的RNA-seq分析中的重要的步骤包括：实验设计，质控，read比对，表达定量，可视化，差异表达，识别可变剪切，功能注释，融合基因检测，eQTL定位等</p>
<h1 id="建库质控"><a href="#建库质控" class="headerlink" title="建库质控"></a>建库质控</h1><p>使用Agilent 2100 Bioanalyzer，以下将简介其原理和结果如何解读</p>
<p><img src="https://i.imgur.com/f80qQqm.jpg" alt=""></p>
<p><img src="https://i.imgur.com/p8BGXgl.jpg" alt=""></p>
<p>横坐标为片段长度，纵坐标为FU：arbitrary fluorescent unit</p>
<p>左边的峰为ladder，右边的峰为marker, ladder孔和样品孔中的marker起到对其和丁范围的校准作用。中间为样品峰。面积表示浓度。</p>
<h1 id="质控"><a href="#质控" class="headerlink" title="质控"></a>质控</h1><p>（1）人类的Per sequence GC content峰值在48左右，否则就是有污染或者建库不均匀</p>
<p>（2）Per base N content越低越好（未识别的碱基，一般为0）</p>
<p>（3）Illumina 下机测序长度是一定的，如果reads小于定长，就会测到Adapter，使用cutadapt去接头</p>
<p>（4）一般流程只保留paired-reads用于下一步比对</p>
<p>（去除低质量reads过程中，可能导致原来paired的reads长度不一致，当长度小于阈值时，整条reads将被去除，所以只剩下另一条reads，一般为了接下来定量分析的方便，另一条reads不用于比对）</p>
<p>结果分为绿色的”PASS”，黄色的”WARN”和红色的”FAIL”，其中，红色部分是我们质控的关键，以下将对红色的”FAIL”部分进行解释及用相应软件进行相对应的质控。</p>
<p><img src="https://i.imgur.com/knNm3I5.jpg" alt=""></p>
<h2 id="1-去除低质量的reads"><a href="#1-去除低质量的reads" class="headerlink" title="1. 去除低质量的reads"></a>1. 去除低质量的reads</h2><p><img src="https://i.imgur.com/Pjm5pW6.jpg" alt=""></p>
<p>横轴代表位置，纵轴quality。红色水平线表示中位数，黄色柱子是25%-75%区间，触须是10%-90%区间，蓝线是平均数。</p>
<p>若任一位置的下四分位数低于10或中位数低于25，报”WARN”；若任一位置的下四分位数低于5或中位数低于20，报”FAIL”.</p>
<h2 id="2-检查每个tile的质量"><a href="#2-检查每个tile的质量" class="headerlink" title="2. 检查每个tile的质量"></a>2. 检查每个tile的质量</h2><p>Illumina flowcells被分成一个个的tiles。为了检查低质量是否与flowcell的某些区域相关联，FASTQC对每个tile计算reads在所有位置的平均质量分数。</p>
<p><img src="https://i.imgur.com/uasS1me.jpg" alt=""></p>
<p>图中y轴表示tile的编号，x轴表示reads中的位置。</p>
<p>在此图中看到警告或失败的原因可能是短暂的问题，例如通过flowcell的气泡，或者可能是更持久的问题，例如在flowcell中出现的斑点或碎片，或者在tile中高密度的聚集。在这个模块中，最常见的警告原因是flowcell 被 overloaded。</p>
<p>建议忽略那些轻微影响一小部分tile,仅为1或2个cycles的warnings 或者 failures，并且只追求更大的影响，这些影响在分数中表现出很高的偏差，或者持续数个cycles。</p>
<h2 id="3-Adapter-Content"><a href="#3-Adapter-Content" class="headerlink" title="3. Adapter Content"></a>3. Adapter Content</h2><p>对于R1：</p>
<p><img src="https://i.imgur.com/GP3ZyEM.jpg" alt=""></p>
<p>对于R2</p>
<p><img src="https://i.imgur.com/Wlr5oMX.jpg" alt=""></p>
<p>所以需要去接头</p>
<p>Per base sequence content 图的Failures 一般是由于文库污染造成的。如果一条特定的reads占了文库中的很大比例，那么这条reads将扭曲Per base sequence content图（在每个位置的碱基百分比将这条reads严重影响）</p>
<p>你可以使用Overrepresented sequences模块检查序列的污染情况，其列出了所有组成超过0.1%的序列，并列出其最佳匹配。上图中发现一个污染，被鉴定为Illumina的接头序列。</p>
<p><strong>不去除接头污染将影响比对过程中的比对百分率</strong></p>
<p>常用trimming tools的功能：</p>
<p><img src="https://i.imgur.com/IaxvSSe.jpg" alt=""></p>
<p>使用软件：trim_galore ,该软件通过调用FastQC进行质检，调用cutadapt去接头，同时还能去除低质量的reads。附加功能还有去除RRBS(for directional, non-directional (or paired-end) sequencing)测序文件的甲基化偏好位点。</p>
<p>其中去除低质量reads时最重要的两个参数是最小Phred score（1-30）和最小序列长度，不同文章对此观点不同，一般推荐Phred score 20 (90%置信区间)和最小50%-70%的序列长度。</p>
<p><a href="http://www.bioinformatics.babraham.ac.uk/projects/trim_galore/" target="_blank" rel="external">Trim Galore!官网</a>， Trim Galore is now also available from<a href="https://github.com/FelixKrueger/TrimGalore" target="_blank" rel="external"> GitHub</a>，具体参数使用参考<a href="https://github.com/FelixKrueger/TrimGalore/blob/master/Docs/Trim_Galore_User_Guide.md" target="_blank" rel="external">User Guide</a>。</p>
<p>对于RRBS samples, 首先进行quality trimming，从3’端剪切掉低质量的reads；然后调用cutadapt程序从3’端去除接头，如果具体序列没有提供，其将使用标准的Illumina配对接头的前13bp （’AGATCGGAAGAGC’）序列来去除接头。给了控制去接头过程的严格程度，需要指定与接头序列最小的overlap数目，或者默认为1（即使与接头序列只有一个bp的overlap也会被剪切掉）。</p>
<pre><code>agapter1=GATCGGAAGAGCACACGTCTGAACTCCAGTCACCGATGTATCTCGTATGC
adapter2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT

time $trim_galore \
--quality 20 \
--stringency 5 \
--dont_gzip \
--fastqc \
--retain_unpaired \
-r1 31 -r2 31 \
--length 30 \
--output_dir $trim \
--paired \
--phred33 \
--adapter ${adapter1} \
--adapter2 ${adapter2} \
$sample_r1 $sample_r2
</code></pre><p><strong>注：如果No overrepresented sequences，但Adapter Content未黄色警告，可以对于adapter和adapter2两个参数都可以用 –illumina 代替，表示 first 13bp of the Illumina universal adapter AGATCGGAAGAGC</strong></p>
<p>使用参考：<a href="http://overviewdifferentialexpression.blogspot.com/2014/02/quality-control-using-trim-galore.html" target="_blank" rel="external">Quality Control using Trim Galore: How to run trim galore?</a></p>
<p>如果使用Trimmomatic可以参考以下命令：</p>
<pre><code>time java -Xmx${mythread}g -jar $Trimmomatic \
PE -phred33 \
-threads $mythread \
$sample_r1 $sample_r2 \
$trim/${sample}_paired.r1.fq.gz $trim/${sample}_unpaired.r1.fq.gz $trim/${sample}_paired.r2.fq.gz $trim/${sample}_unpaired.r2.fq.gz \
ILLUMINACLIP: $Trimmomatic/adapters/TruSeq3-PE-2.fa:2:30:10 \
LEADING:5 TRAILING:5 SLIDINGWINDOW:4:5 MINLEN:25 \
2&gt; $trim/Trimmed.log
</code></pre><p><strong>在Trimmomatic安装目录下有个adapter目录，其中TruSeq2适用于旧款测序仪的adapter序列的去除，而TruSeq3适用于Miseq,Hiseq等新款测序仪adapter序列的去除</strong></p>
<h2 id="做完质控后，可以使用Multiqc出报告，方便比较前后变化，特别是对于一批样本同时分析，强烈推荐"><a href="#做完质控后，可以使用Multiqc出报告，方便比较前后变化，特别是对于一批样本同时分析，强烈推荐" class="headerlink" title="做完质控后，可以使用Multiqc出报告，方便比较前后变化，特别是对于一批样本同时分析，强烈推荐"></a>做完质控后，可以使用Multiqc出报告，方便比较前后变化，特别是对于一批样本同时分析，强烈推荐</h2><p>MultiQC: summarize analysis results for multiple tools and samples in a single report</p>
<p><a href="https://github.com/ewels/MultiQC" target="_blank" rel="external">ewels/MultiQC</a></p>
<p><a href="http://www.multiqc.info/docs/#coding-with-multiqc" target="_blank" rel="external">Using MultiQC manual</a></p>
<h1 id="去除核糖体rRNA"><a href="#去除核糖体rRNA" class="headerlink" title="去除核糖体rRNA"></a>去除核糖体rRNA</h1><p>对于总RNA建库测序的RNA-seq实验设计，rRNA将占总数据量的95%左右，如果不去除，将严重影响比对率及下游分析。</p>
<p><a href="http://bioinfo.lifl.fr/sortmerna/sortmerna.php" target="_blank" rel="external">SortMeRNA官网</a>；<a href="http://bioinfo.lifl.fr/RNA/sortmerna/code/SortMeRNA-user-manual-v2.1.pdf" target="_blank" rel="external">SortMeRNA User Manual v2.1.pdf</a></p>
<h2 id="建索引"><a href="#建索引" class="headerlink" title="建索引"></a>建索引</h2><pre><code>sortmerna_REF=/home/wangdong/miniconda3/sortmerna_db/rRNA_databases
sortmerna_index=/home/wangdong/miniconda3/sortmerna_db/index

indexdb_rna --ref $sortmerna_REF/silva-arc-16s-id95.fasta,$sortmerna_index/silva-arc-16s-id95
indexdb_rna --ref $sortmerna_REF/silva-arc-23s-id98.fasta,$sortmerna_index/silva-arc-23s-id98
indexdb_rna --ref $sortmerna_REF/silva-bac-16s-id90.fasta,$sortmerna_index/silva-bac-16s-id95
indexdb_rna --ref $sortmerna_REF/silva-bac-23s-id98.fasta,$sortmerna_index/silva-bac-23s-id98
indexdb_rna --ref $sortmerna_REF/silva-euk-18s-id95.fasta,$sortmerna_index/silva-euk-18s-id95
indexdb_rna --ref $sortmerna_REF/silva-euk-28s-id98.fasta,$sortmerna_index/silva-euk-28s-id98
indexdb_rna --ref $sortmerna_REF/rfam-5.8s-database-id98.fasta,$sortmerna_index/rfam-5.8s-db
indexdb_rna --ref $sortmerna_REF/rfam-5s-database-id98.fasta,$sortmerna_index/rfam-5s-db
</code></pre><h2 id="去除rRNA"><a href="#去除rRNA" class="headerlink" title="去除rRNA"></a>去除rRNA</h2><p><strong>SortMeRNA只接受一个reads输入文件，对于paired-end reads需要使用merge-paired-reads.sh脚本合并之后用于分析。</strong></p>
<p><img src="https://i.imgur.com/vE4ODha.jpg" alt=""></p>
<p><code>which merge-paired-reads.sh</code> ${trim}/${sample}_paired_r1.fq ${trim}/${sample}_paired_r2.fq ${remove_rrna}/${sample}_paired_merge.fq</p>
<p>SortMeRNA去除rRNA后，对于paired-end reads的过滤时，如果一条reads比对上rRNA，而另一条reads没有比对上rRNA，但又想保证输出到fastq文件的都是paired-end reads，则需要考虑以下两个参数：</p>
<ol>
<li>–paired-in will put both reads into the file specified by –aligned</li>
<li>–paired-out will put both reads into the file specified by –other</li>
</ol>
<p>第一个参数–paired-in表示所有在–other file中的reads都为non-rRNA;第二个参数–paired-out表示只有rRNA reads被输出到–aligned file。如果两个参数都不设置，则会导致输出结果的reads不配对，不利于后续分析。</p>
<pre><code>time $sortmerna \
--ref $sortmerna_REF/silva-arc-16s-id95.fasta,$sortmerna_index/silva-arc-16s-id95:\
$sortmerna_REF/silva-arc-23s-id98.fasta,$sortmerna_index/silva-arc-23s-id98:\
$sortmerna_REF/silva-bac-16s-id90.fasta,$sortmerna_index/silva-bac-16s-id95:\
$sortmerna_REF/silva-bac-23s-id98.fasta,$sortmerna_index/silva-bac-23s-id98:\
$sortmerna_REF/silva-euk-18s-id95.fasta,$sortmerna_index/silva-euk-18s-id95:\
$sortmerna_REF/silva-euk-28s-id98.fasta,$sortmerna_index/silva-euk-28s-id98:\
$sortmerna_REF/rfam-5.8s-database-id98.fasta,$sortmerna_index/rfam-5.8s-db:\
$sortmerna_REF/rfam-5s-database-id98.fasta,$sortmerna_index/rfam-5s-db \
--reads ${remove_rrna}/${sample}_paired_merge.fq \
--aligned $remove_rrna/${sample}_paired_aligned_rRNA \
--other $remove_rrna/${sample}_paired_filtered_non_rRNA \
--fastx \
--sam --num_alignments 1 \
--paired_in \
--log \
-a 5 -v
</code></pre><p>接着将$remove_rrna/${sample}_paired_filtered_non_rRNA.fq文件拆分为forward reads和reserve reads两个文件，用于下游的paried-reads的比对</p>
<pre><code>`which unmerge-paired-reads.sh` $remove_rrna/${sample}_paired_filtered_non_rRNA.fq \
$remove_rrna/${sample}_non_rrna_paired_r1.fq $remove_rrna/${sample}_non_rrna_paired_r2.fq
</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>参考：</p>
<p>（1） <a href="http://blog.sciencenet.cn/blog-303373-724110.html" target="_blank" rel="external">fastqc解释</a></p>
<p>（2） <a href="https://wiki.bits.vib.be/index.php/Quality_control_of_NGS_data" target="_blank" rel="external">Quality control of NGS data（推荐）</a></p>
<p>（3）<a href="https://sequencing.qcfail.com/page/2/" target="_blank" rel="external">qcfail.com：Articles about common next-generation sequencing problems（强烈推荐）</a></p>
<p>（4）<a href="https://github.com/twbattaglia/RNAseq-workflow" target="_blank" rel="external">twbattaglia/RNAseq-workflow（推荐）</a></p>
<p>（5）<a href="https://www.bits.vib.be/training/328" target="_blank" rel="external">RNA-Seq analysis for differential expression in GenePattern</a> <a href="http://data.bits.vib.be/pub/trainingen/GenePattern/genepattern.pdf" target="_blank" rel="external">Slides（推荐）</a></p>
<p>（6）<a href="https://woaielf.github.io/2016/11/16/RNA-seq/" target="_blank" rel="external">RNA-seq分析流程思维导图</a></p>
<p>（7）<a href="http://www.bio-info-trainee.com/2275.html" target="_blank" rel="external">一个RNA-seq的反思</a></p>
<p>（8）<a href="https://mp.weixin.qq.com/s/lq3X3U03ozdkZGfcGNzNMg" target="_blank" rel="external">从零开始完整学习全基因组测序数据分析：第3节 数据质控</a></p>
<p>（9）<a href="https://www.jianshu.com/p/48eb5f00dd1c" target="_blank" rel="external"> 数据过滤软件合集</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;RNA-seq质控：去除低质量reads，adapter以及rRNA&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>GATK变异检测概述</title>
    <link href="https:///AnJingwd.github.io/2017/12/26/GATK%E5%8F%98%E5%BC%82%E6%A3%80%E6%B5%8B%E6%A6%82%E8%BF%B0/"/>
    <id>https:///AnJingwd.github.io/2017/12/26/GATK变异检测概述/</id>
    <published>2017-12-26T12:58:54.000Z</published>
    <updated>2018-03-11T00:49:20.278Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">变异检测概述</blockquote>

<a id="more"></a>
<h1 id="突变发现背景介绍"><a href="#突变发现背景介绍" class="headerlink" title="突变发现背景介绍"></a>突变发现背景介绍</h1><p>个体相对于参考基因组的两种突变</p>
<ul>
<li>Germline    (inherited)    </li>
<li>Somatic    (cancer)    </li>
</ul>
<h2 id="不同的突变类型"><a href="#不同的突变类型" class="headerlink" title="不同的突变类型"></a>不同的突变类型</h2><p><img src="https://i.imgur.com/W3L0QGg.jpg" alt=""></p>
<h2 id="实验策略"><a href="#实验策略" class="headerlink" title="实验策略"></a>实验策略</h2><ol>
<li>全基因组测序</li>
<li>全外显子测序，或者设计目标基因的panel进行目标区域捕获测序</li>
</ol>
<p><img src="https://i.imgur.com/9fKpXfy.jpg" alt=""></p>
<p>HTS    machine    processes a    flowcell containing    lanes;each    lane cons)tutes    a read group (RG) (unless multiplexed)</p>
<h2 id="Raw-sequence的质控"><a href="#Raw-sequence的质控" class="headerlink" title="Raw sequence的质控"></a>Raw sequence的质控</h2><p>目的：将ASCII code转换为Phred-scale Q    scores，考察测序质量（错误率）</p>
<p><img src="https://i.imgur.com/v0ZLr2G.jpg" alt=""></p>
<p><strong>所以phred score一般选择20即可</strong></p>
<p><img src="https://i.imgur.com/iFODOKU.jpg" alt=""></p>
<h1 id="胚系突变snp-amp-indel分析流程"><a href="#胚系突变snp-amp-indel分析流程" class="headerlink" title="胚系突变snp&amp;indel分析流程"></a>胚系突变snp&amp;indel分析流程</h1><ul>
<li>Map to reference</li>
<li>Sort, Index</li>
<li>Mark Duplicates &amp; Sort (Picard)</li>
<li>Indels Realigment</li>
<li>Base Quality Score Recalibration</li>
<li>Variant Calling (HaplotypeCaller)</li>
<li>Variant Filtration (Hard Filter, see <a href="http://gatkforums.broadinstitute.org/gatk/discussion/2806/howto-apply-hard-filters-to-a-call-set" target="_blank" rel="external">GATK Best Practices</a>)</li>
<li>Annotation</li>
</ul>
<p><img src="https://i.imgur.com/cIZbbh2.jpg" alt=""></p>
<p>pipline:<a href="https://github.com/joergen7/variant-call-gatk" target="_blank" rel="external">variant-call-gatk</a></p>
<p>文献：<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4243306/" target="_blank" rel="external">From FastQ data to high confidence variant calls: the Genome Analysis Toolkit best practices pipeline</a></p>
<h2 id="（1）Map"><a href="#（1）Map" class="headerlink" title="（1）Map"></a>（1）Map</h2><ul>
<li>BWA    for    DNA    </li>
<li>STAR    for    RNAseq</li>
</ul>
<p>Sequence/Binary    Alignment    Map    (SAM/BAM)    </p>
<p><img src="https://i.imgur.com/r3ayrha.jpg" alt=""></p>
<h3 id="细节："><a href="#细节：" class="headerlink" title="细节："></a>细节：</h3><p>All BAM/CRAM files must satisfy the following requirements:</p>
<ul>
<li>It must be aligned to one of the references described here.</li>
<li>It must be <strong>sorted in coordinate order</strong> (not by queryname and not “unsorted”).</li>
<li>It must list the read groups with sample names in the header.</li>
<li>Every read must belong to a <strong>read group</strong>.</li>
<li>The BAM file must pass Picard ValidateSamFile validation.</li>
</ul>
<p>具体参考：<a href="https://gatkforums.broadinstitute.org/gatk/discussion/1317/collected-faqs-about-bam-files" target="_blank" rel="external">Collected FAQs about input files for sequence read data (BAM/CRAM)</a></p>
<ul>
<li>Add read group 对于多样本检测变异，比如mutect是必须的，否则当场一个样品处理</li>
<li>You only need to run FixMateInformation if you are getting errors with mate information from Picard’s ValidateSamFile， <a href="https://gatkforums.broadinstitute.org/gatk/discussion/6047/necessary-to-run-fixmateinformation" target="_blank" rel="external">具体参考</a></li>
</ul>
<h2 id="（2）Mark-duplicates"><a href="#（2）Mark-duplicates" class="headerlink" title="（2）Mark    duplicates"></a>（2）Mark    duplicates</h2><p>测序原理是随机打断，那么理论上出现两条完全相同的read的概率是非常低的，而且建库时PCR扩增存在偏向性，因此标出完全相同的read。这一步是为了减少duplication artifacts,从而正确评估alleles。duplicates的状态通过SAM flag来标记，但并没有去除（绝大多数的GATK tools默认忽 duplicates）</p>
<p>duplicates来源：（1）PCR duplicates ; (2) Optical duplicates</p>
<p>以下两种情况不能 mark duplicates:</p>
<p>Amplicon    sequencing</p>
<ul>
<li>all    reads    start    at    same    posi7on    by    design    </li>
<li>UMIAwareMarkDuplicatesWithMateCigar</li>
</ul>
<p>RNAseq    allele-specific    expression    analysis    </p>
<ul>
<li>(ASEReadCounter    can    disable    DuplicateFilter)    </li>
</ul>
<p>Duplicates    =    non-independent    measurements of    a sequenc fragment</p>
<p><img src="https://i.imgur.com/oWRVjhD.jpg" alt=""></p>
<h2 id="（3）Local-realignment"><a href="#（3）Local-realignment" class="headerlink" title="（3）Local realignment"></a>（3）Local realignment</h2><p>对于indel区域进行局部的重新比对，为了纠正比对错误。</p>
<p><img src="https://i.imgur.com/N5kPt0j.jpg" alt=""></p>
<p>Mappers对于在reads末端的indel较难检出，因为错配的罚分为-1，而open gap的罚分为-3。咋局部的indel realignment后能减少假阳性的SNPs数量。</p>
<p>具体过程：</p>
<p>（1）通过RealignerTargetCreator，根据1000    Genomes    Project, dbSNP等已知位点的VCF文件获取已知indels的位置区间，输出Target    intervals    </p>
<p><img src="https://i.imgur.com/Bzem6S3.png" alt=""></p>
<p>（2）通过IndelRealigner进行realignment，输出Realigned BAM</p>
<p>通过–targetIntervals realigner.intervals指定indelrealignment的区间</p>
<p><img src="https://i.imgur.com/murEihF.jpg" alt=""></p>
<p>realignment algorithm 的工作原理：</p>
<p><img src="https://i.imgur.com/Zry1hvH.jpg" alt=""></p>
<h2 id="（4）Base-Recalibration-简称BQSR"><a href="#（4）Base-Recalibration-简称BQSR" class="headerlink" title="（4）Base    Recalibration (简称BQSR)"></a>（4）Base    Recalibration (简称BQSR)</h2><p>纠正机器产生的错误，主要针对测序一产生的碱基质量分数的系统错误，BQSR纠正碱基质量分数（不是碱基本身）</p>
<p><img src="https://i.imgur.com/w7BsDj9.jpg" alt=""></p>
<p>Base Recalibra2on steps/tools</p>
<ul>
<li>Model    the    error    modes    and    compute    adjustments—–》BaseRecalibrator</li>
<li>Apply    recalibra2on adjustments    + write    to    file —–》PrintReads</li>
<li>Make    before/after plots  ——-》AnalyzeCovariates （可选）</li>
</ul>
<p><img src="https://i.imgur.com/lsEMXQk.jpg" alt=""></p>
<p>BaseRecalibrator (1)</p>
<pre><code>java –jar GenomeAnalysisTK.jar \
–T BaseRecalibrator \
–R human.fasta \
–I realigned.bam \
–knownSites dbsnp137.vcf \
–knownSites gold.standard.indels.vcf \
–o recal.table

java –jar GenomeAnalysisTK.jar –T PrintReads \
–R human.fasta \
–I realigned.bam \
–BQSR recal.table \
–o recal.bam
</code></pre><p>BaseRecalibrator (2)(可选)</p>
<p><img src="https://i.imgur.com/ulVOTdY.jpg" alt=""></p>
<pre><code>ava –jar GenomeAnalysisTK.jar –T BaseRecalibrator \
–R human.fasta \
–I realigned.bam \
–knownSites dbsnp137.vcf \
–knownSites gold.standard.indels.vcf \
–BQSR recal.table \
–o after_recal.table

java –jar GenomeAnalysisTK.jar –T AnalyzeCovariates \
–R human.fasta \
–before recal.table \
–after after_recal.table \
–plots recal_plots.pdf
</code></pre><h2 id="（5）Variant-Calling"><a href="#（5）Variant-Calling" class="headerlink" title="（5）Variant Calling"></a>（5）Variant Calling</h2><p>根据变异来源和实验设计不同，选择不同的检测变异方案：</p>
<p><img src="https://i.imgur.com/FkTZcp5.jpg" alt=""></p>
<p>胚系突变检测是最容易的，对于肿瘤体细胞突变主要受肿瘤异质性和正常组织污染的影响，而拷贝数变异本质是计算reads覆盖的丰度</p>
<p>单个基因组是孤立的，通常并不能得出什么变异是致病性变异。一般要求家系或者群体数据，可以发现稀有变异，de novo变异，以及种族背景信息。</p>
<p><img src="https://i.imgur.com/CyxQF14.jpg" alt=""></p>
<p><strong>对于多样本或者家系的突变比较分析，可以使用HaplotypeCaller 的GVCF模式，主要目的GVCF文件输出所有的记录位点，无论其是否是变异。其目的是输出每个样本的每个位点，以便接下来的多样本联合比较分析。</strong></p>
<p><strong>但做多样本的联合分析必须注意，Similar    technical    generation是至关重要的，包括technology,    capture,    read    length,    depth</strong></p>
<p>具体参考：</p>
<ol>
<li><a href="https://gatkforums.broadinstitute.org/gatk/discussion/3893/calling-variants-on-cohorts-of-samples-using-the-haplotypecaller-in-gvcf-mode" target="_blank" rel="external">Calling variants on cohorts of samples using the HaplotypeCaller in GVCF mode</a></li>
<li><a href="https://software.broadinstitute.org/gatk/documentation/article?id=11004" target="_blank" rel="external">GVCF - Genomic Variant Call Format</a></li>
</ol>
<p><img src="https://i.imgur.com/BV54Ah7.jpg" alt=""></p>
<p><img src="https://i.imgur.com/lKHfD2r.jpg" alt=""></p>
<p><img src="https://i.imgur.com/vLF563q.jpg" alt=""></p>
<p><strong>GenotypeGVCFs (i) also has an -allSites    mode and (ii) by default pre-filters    low    QUAL (&lt;30) records</strong></p>
<h3 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h3><h4 id="变异输出模式选择，输出模式总共有3种"><a href="#变异输出模式选择，输出模式总共有3种" class="headerlink" title="变异输出模式选择，输出模式总共有3种"></a>变异输出模式选择，输出模式总共有3种</h4><p>–output_mode / -out_mode (OUTPUT_MODE with default value EMIT_VARIANTS_ONLY)</p>
<ul>
<li>EMIT_VARIANTS_ONLY 只输出variants位点(SNPs和INDELs)</li>
<li>EMIT_ALL_CONFIDENT_SITES 除了variants位点以外与reference一致的可靠位点也输出</li>
<li>EMIT_ALL_SITES 只要是能call的到的位点都输出(应该是除了没覆盖到的位点，其余位点都输出)，这个模式下会得到最多的结果</li>
</ul>
<h4 id="指定区间或者位点（使用-L参数）"><a href="#指定区间或者位点（使用-L参数）" class="headerlink" title="指定区间或者位点（使用-L参数）"></a>指定区间或者位点（使用-L参数）</h4><p>具体可参考：<a href="https://software.broadinstitute.org/gatk/documentation/article.php?id=1319" target="_blank" rel="external">Collected FAQs about interval lists</a></p>
<ul>
<li>对于外显子测序，可以使用.bed文件指定call变异的区间，包含三列（<chr> <start> <end>），以tab键分隔，不需要列名，chr1-chr20,chrX,chrY，并且需要根据坐标排序</end></start></chr></li>
<li><strong>也可以使用vcf文件指定位点call 变异，这对于几个样本的变异位点之间比较很有用</strong></li>
</ul>
<h4 id="Optimizing-and-tuning-the-pipeline"><a href="#Optimizing-and-tuning-the-pipeline" class="headerlink" title="# Optimizing and tuning the pipeline"></a># Optimizing and tuning the pipeline</h4><p>Manage the java heap memory</p>
<p>You can control this by capping the maximum the heap memory can reach using the -Xmx{n} switch. For example, to cap at 8Gb add -Xmx8Gb</p>
<h2 id="（6）Variant-Filtering"><a href="#（6）Variant-Filtering" class="headerlink" title="（6）Variant    Filtering"></a>（6）Variant    Filtering</h2><p>前面提到Base    Recalibration只是纠正碱基质量分数（不是碱基本身），在此Variant Filtering 便是基于Quality    Score    Recalibration的变异过滤。</p>
<p>对于Raw callsets的过滤必须平衡敏感度和准确度</p>
<ul>
<li>Mutation calling算法设计上是宽容的</li>
<li>原始的高敏感度的callests包含大量的假阳性</li>
</ul>
<p>两种过滤方法：</p>
<ul>
<li><p>（1）Hard-filters    using    binary    thresholds    </p>
<ul>
<li>Applicable    to    all    BUT    requires    exper4se    to    define    appropriately    </li>
</ul>
</li>
<li><p>（2）Variant    “recalibration”    using    machine    learning</p>
<ul>
<li>More    powerful    BUT    requires    well-curated    known    resources</li>
</ul>
</li>
</ul>
<p>但是Hard-filtering    is    a    very    blunt    instrument,接下来主要讲述基于variant recalibration的过滤。</p>
<p><strong>基本思想：训练已知的高置信度的位点来确定其他位点正确与否的可能性</strong></p>
<ul>
<li>Assume    annota4ons    tend    to    form    Gaussian    clusters    </li>
<li>Build    a    “Gaussian    mixture    model”    from<br>annotations    of    known    variants    in    our    dataset    </li>
<li>Score    all    variants    by    where    their    annotations    lie<br>relative    to    these    clusters    </li>
<li>Filter    base    on    sensiOvity    to    truth    set    </li>
</ul>
<p><img src="https://i.imgur.com/swA19TJ.jpg" alt=""></p>
<p>那么如何设置VQSLOD阈值呢？即设定X%    of    the    sites in    the    truth<br>set?    </p>
<p><img src="https://i.imgur.com/P8oeuDk.jpg" alt=""></p>
<p><img src="https://i.imgur.com/UKTedbs.png" alt=""></p>
<h3 id="Step-1-VariantRecalibrator"><a href="#Step-1-VariantRecalibrator" class="headerlink" title="Step 1:    VariantRecalibrator"></a>Step 1:    VariantRecalibrator</h3><p>（1）VariantRecalibrator    builds    the    Gaussian    mixture    model    </p>
<ul>
<li>Uses    the    variants    in    the    input    callset    that    overlap    the    training    data    </li>
<li>Uses    the    annotations    in    our    callset,    not    the    resource    callset</li>
</ul>
<p><img src="https://i.imgur.com/LouIHI6.jpg" alt=""></p>
<p><img src="https://i.imgur.com/tCv4gpU.jpg" alt=""></p>
<pre><code>java –jar GenomeAnalysisTK.jar –T VariantRecalibrator \
–R human.fasta \
–input raw.SNPs.vcf \
–resource: {see next slide} \
–an DP –an QD –an FS –an MQRankSum {…} \
–mode SNP \
–recalFile raw.SNPs.recal \
–tranchesFile raw.SNPs.tranches \
–rscriptFile recal.plots.R
</code></pre><p>输出：recal    file,    tranches,    plots</p>
<ul>
<li>Recalibration    plots    show    aspects    of    the    model</li>
<li>Tranche    plots    show    estimated    TP    vs    FP    tradeoff<br>(Default    target    Ti/Tv    is    for    WGS    and    must    be    adapted    for    exomes)</li>
<li>Tranches    :    slices    of    sensitivity    threshold    values</li>
</ul>
<h3 id="Step-2-ApplyRecalibration"><a href="#Step-2-ApplyRecalibration" class="headerlink" title="Step 2: ApplyRecalibration"></a>Step 2: ApplyRecalibration</h3><p>ApplyRecalibration    applies    the    filtering    threshold</p>
<ul>
<li>Executes    the    desired    sensitivity    /    specificity    tradeoff<br>by    applying    filters    to    the    input    callset    (no    new    calculations)    </li>
<li><p>Creates    a    new,    filtered,    analysis-worthy    VCF    file.    </p>
<p>  java –jar GenomeAnalysisTK.jar –T ApplyRecalibration \<br>  –R human.fasta \<br>  –input raw.vcf \<br>  –mode SNP \<br>  –recalFile raw.SNPs.recal \<br>  –tranchesFile raw.SNPs.tranches \<br>  –o recal.SNPs.vcf \<br>  –ts_filter_level 99.0</p>
</li>
</ul>
<p>输出变异每个突变将被注释上VQSLOD score</p>
<h3 id="对于外显子数据跑VQSR的一些小建议"><a href="#对于外显子数据跑VQSR的一些小建议" class="headerlink" title="对于外显子数据跑VQSR的一些小建议"></a>对于外显子数据跑VQSR的一些小建议</h3><ul>
<li>Smaller    number    of    variants    per    sample    compared    to    WGS<br>  -&gt;    typically    insufficient    to    build    a    robust    recalibraOon    model        <pre><code>if    running    on    only    a    few    samples    
</code></pre></li>
<li>Analyze    samples    jointly    in    cohorts    of    at    least    <strong>30    samples</strong></li>
<li>If    necessary,    add    exomes    from    1000G    Project    or    comparable</li>
</ul>
<p><img src="https://i.imgur.com/EoGdjYO.jpg" alt=""></p>
<p><strong>什么时候不推荐使用VQSR进行过滤呢？</strong></p>
<ol>
<li>Non-human    organisms    where    known    resources    are    unavailable    or<br>insufficiently    curated    </li>
<li>RNAseq    data    à    see    RNAseq-specific    filtering</li>
<li>Cohort    is    too    small(&lt;30)    and    no    other    samples    are    available    for<br>“padding”    the    cohort    </li>
</ol>
<p>—–&gt;  Use    manual    filtering    recommendations    instead</p>
<p>具体参考：<a href="https://software.broadinstitute.org/gatk/documentation/article.php?id=39" target="_blank" rel="external">Variant Quality Score Recalibration (VQSR)</a></p>
<p><a href="https://software.broadinstitute.org/gatk/documentation/tooldocs/3.8-0/org_broadinstitute_gatk_tools_walkers_variantrecalibration_VariantRecalibrator.php" target="_blank" rel="external">VariantRecalibrator</a></p>
<h3 id="（7）-Genotype-Refinement"><a href="#（7）-Genotype-Refinement" class="headerlink" title="（7） Genotype Refinement"></a>（7） Genotype Refinement</h3><p>Using    additional    data    to    improve    genotype    calls    and    likelihoods</p>
<h4 id="基因型校正的重要性："><a href="#基因型校正的重要性：" class="headerlink" title="基因型校正的重要性："></a>基因型校正的重要性：</h4><ol>
<li><p>临床遗传医生需要给病人提供基因型</p>
<ul>
<li>是否病人具有LOF mutation的两个拷贝</li>
<li>患病孩子的父母是否可能生出患该病更严重的孩子</li>
</ul>
</li>
<li><p>群体遗传学家需要基因型数据用于关联研究</p>
<ul>
<li>一个allele的多少拷贝能影响表型</li>
</ul>
</li>
</ol>
<h4 id="用于基因型校正的数据："><a href="#用于基因型校正的数据：" class="headerlink" title="用于基因型校正的数据："></a>用于基因型校正的数据：</h4><ol>
<li>使用高质量的数据（例如1000G）作为先验者</li>
<li>使用家系数据（若可以得到）</li>
<li>计算后验者的基因型可能性</li>
</ol>
<p><img src="https://i.imgur.com/PuPNxd8.jpg" alt=""></p>
<p>基本方法：Bayes’s    Rule</p>
<p><img src="https://i.imgur.com/3Op72W9.jpg" alt=""></p>
<h4 id="基因型校正的工作流程"><a href="#基因型校正的工作流程" class="headerlink" title="基因型校正的工作流程"></a>基因型校正的工作流程</h4><p><img src="https://i.imgur.com/tQP2gCd.jpg" alt=""></p>
<p><img src="https://i.imgur.com/kSzUwtQ.jpg" alt=""></p>
<p>CalculateGenotypePosteriors：</p>
<pre><code>java -jar GenomeAnalysisTK.jar \
-T CalculateGenotypePosteriors \
-R reference.fasta \
-V input.vcf \
-ped family.ped \
-supporting population.vcf \
-o output.vcf
</code></pre><p>Filter    low    confidence    GQs:</p>
<pre><code>java -jar GenomeAnalysisTK.jar \
-T VariantFiltration \
-R reference.fasta \
-V input.vcf \
--filterExpression “GQ&lt;20” \
--filterName “lowGQ” \
-o output.vcf
</code></pre><p>Recommended    threshold is GQ=20    –  GQ 20     is Phred-scaled    99%    confidence</p>
<p>VariantAnnotator:</p>
<pre><code>java -jar GenomeAnalysisTK.jar \
-T VariantAnnotator \
-R reference.fasta \
-V input.vcf \
-A PossibleDeNovo \
-o output.vcf
</code></pre><p><img src="https://i.imgur.com/4gy1NSD.jpg" alt=""></p>
<p>De Novo mutations的特点：</p>
<p><img src="https://i.imgur.com/MjvZPu0.jpg" alt=""></p>
<p>具体参考：</p>
<p>（1）<a href="https://software.broadinstitute.org/gatk/documentation/article.php?id=4723" target="_blank" rel="external">Genotype Refinement workflow</a></p>
<p>（2）<a href="https://software.broadinstitute.org/gatk/documentation/article.php?id=4727" target="_blank" rel="external">(howto) Run the genotype refinement workflow</a></p>
<p>（3）<a href="https://software.broadinstitute.org/gatk/documentation/article.php?id=4726" target="_blank" rel="external">Genotype Refinement workflow: mathematical details</a></p>
<h3 id="（8）-Variant-Evaluation"><a href="#（8）-Variant-Evaluation" class="headerlink" title="（8） Variant Evaluation"></a>（8） Variant Evaluation</h3><p>基本思想：真实变异是具有代表性的，并且是可比较的</p>
<p>变异代表性的影响因素：</p>
<ul>
<li>种群（Ethnicity）:Older     popula+ons    tend    to    display    more    heterogeneity</li>
</ul>
<p>可以作为真实variant sets的数据来源：</p>
<ul>
<li>Sanger sequencing</li>
<li>GeneChip/Microarrays</li>
</ul>
<p>Commonly used truth    sets</p>
<p><img src="https://i.imgur.com/WIRa8Pq.jpg" alt=""></p>
<h4 id="Recommended-metrics-for-callset-evalua-on"><a href="#Recommended-metrics-for-callset-evalua-on" class="headerlink" title="Recommended metrics for    callset    evalua+on"></a>Recommended metrics for    callset    evalua+on</h4><p><img src="https://i.imgur.com/p9i0C4X.jpg" alt=""></p>
<ol>
<li>Indels    &amp;    SNPs的数量，对于单个样本，WGS大约能检测到4.4M个;WES大约能检测到41k个。</li>
<li>如果变异是随机的，那么期望的TiTv Ratio应该为0.5，对于人类WGS测序，TiTv Ratio （Transitions/Transversions）大约为2.0-2.1；对于WES测序，TiTv Ratio大约为3.0-3.3,低的TiTv Ratio暗示可能存在高的假阳性。</li>
<li>Indel Ration表示insertions和deletions的比值，Common的情况Indel Ratio为1； Rare情况下为0.2-0.5。</li>
<li>Genotype    Concordance指标则认为最准确的truth set 是对相同的样本进行genotyping chip，将自己的结果与truth相比较，没有匹配的则认为是假阳性的结果。</li>
</ol>
<p><img src="https://i.imgur.com/oDZl1f7.jpg" alt=""></p>
<p><img src="https://i.imgur.com/p69fkwu.jpg" alt=""></p>
<p>具体参考：<a href="https://software.broadinstitute.org/gatk/documentation/article.php?id=6308" target="_blank" rel="external">Evaluating the quality of a variant callset</a></p>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>生物信息中，一旦涉及到 fastq 数据的处理，通常都要消耗大量内存、CPU 和时间。所以，在正式运行任务之前，建议先从整体数据中抽取一部分小数据进行测试。如何从 fastq 文件中随机抽取数据。使用的工具是 seqtk。</p>
<p>安装：conda install seqtk</p>
<p>使用：</p>
<p>Usage:   seqtk sample [-2] [-s seed=11] <in.fq> <frac>|<number></number></frac></in.fq></p>
<p>Options: -s INT       RNG seed [11]<br>         -2           2-pass mode: twice as slow but with much reduced memory</p>
<p>[]中的是可选参数，&lt;&gt; 中的是必需参数。<br>[-2] 内存较小的服务器上运行时，设置此参数。<br>[-s] 随机数的种子。如果是 Pair-end 数据，需要保证 read1 和 read2 的种子一致，才能抽到相同的raeds。默认是 11。<br>[in.fq] 输入文件</p>
<p><frac|number>可以输入要抽取的比例或 reads 条数。</frac|number></p>
<p>seqtk sample -s100 read1.fastq.gz 10000 | gzip - &gt; sub1.fastq.gz<br>seqtk sample -s100 read2.fastq.gz 10000 | gzip - &gt; sub2.fastq.gz</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://mp.weixin.qq.com/s/awdjoXRYobrQAbXmAp3C0g" target="_blank" rel="external">从零开始完整学习全基因组测序数据分析：第4节 构建WGS主流程</a></p>
<p>（2）<a href="http://www.cureffi.org/2012/09/19/exome-sequencing-pipeline-using-gatk/" target="_blank" rel="external">Exome sequencing pipeline using GATK</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;变异检测概述&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>GATK3.8分析环境搭建</title>
    <link href="https:///AnJingwd.github.io/2017/12/26/GATK3.8%E5%88%86%E6%9E%90%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https:///AnJingwd.github.io/2017/12/26/GATK3.8分析环境搭建/</id>
    <published>2017-12-26T10:15:59.000Z</published>
    <updated>2018-04-01T10:10:29.537Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">GATK3.8相关软件及文件准备</blockquote><br><a id="more"></a></p>
<h1 id="GATK官网相关栏目"><a href="#GATK官网相关栏目" class="headerlink" title="GATK官网相关栏目"></a>GATK官网相关栏目</h1><ul>
<li><a href="https://software.broadinstitute.org/gatk/documentation/tooldocs" target="_blank" rel="external">Tool Documentation</a> （包含每个工具的使用说明）</li>
<li><a href="https://software.broadinstitute.org/gatk/documentation/tooldocs" target="_blank" rel="external">Tutorials</a> (包含具体参数和细节)</li>
<li><a href="https://software.broadinstitute.org/gatk/best-practices/" target="_blank" rel="external">GATK Best Practices</a> （包含两个主流的分析流程）</li>
</ul>
<p><strong>全外显子测序call Germline SNP &amp; Indel流程图</strong></p>
<p><img src="https://i.imgur.com/jvbLuTm.jpg" alt=""></p>
<p><strong>体细胞拷贝数变异分析流程!</strong></p>
<p><a href="https://i.imgur.com/844zfg1.jpg" target="_blank" rel="external"></a></p>
<p><strong>使用RNA-seq数据call变异</strong></p>
<p><a href="https://software.broadinstitute.org/gatk/documentation/article.php?id=3891" target="_blank" rel="external">Calling variants in RNAseq</a></p>
<p><img src="https://i.imgur.com/GEF1W45.jpg" alt=""></p>
<ul>
<li><a href="https://gatkforums.broadinstitute.org/gatk" target="_blank" rel="external">Forum</a> （提问和搜索报错解决很有用）</li>
</ul>
<p><img src="https://i.imgur.com/PADtsMb.jpg" alt=""></p>
<ul>
<li>Blog (包含历年的workshop材料，学习用得上)</li>
</ul>
<p><a href="https://drive.google.com/drive/folders/0B7akc6CTmxIHNGpibUFTNzVRazg?usp=sharing" target="_blank" rel="external">Presentation slides and tutorial materials - Pretoria 2017（需要翻墙才能下载）</a></p>
<h1 id="GATK3-8下载"><a href="#GATK3-8下载" class="headerlink" title="GATK3.8下载"></a>GATK3.8下载</h1><p>GATK=GenomeAnalysisToolkit，最新稳定版为<a href="https://software.broadinstitute.org/gatk/download/" target="_blank" rel="external">GATK3.8</a> （<strong>需要注册！</strong>）</p>
<p>&emsp;&emsp;电脑软件在投放市场前，需要有人测试一下，看看是不是有问题，在开发该软件的公司内部的由该公司内部人员测试的称为：alfa测试。alfa测试主要看有没有功能缺失或系统错误，<strong>alfa测试完后一般不会有大问题了，然后把软件拿给用户测试，称为：beta测试，主要是看用户对软件外观，使用方便等的反映。</strong> 如果beta1版用户反映有问题，拿到公司修改，改完后发布beta2版，还有不满意的地方，再改，再发布beta3版，直到用户满意，或正式版发布为止。</p>
<p><a href="https://software.broadinstitute.org/gatk/download/beta" target="_blank" rel="external">GATK4.Beta.5</a>即为测试版</p>
<pre><code>#解压：
tar -jxvf GenomeAnalysisTK-3.8-0.tar.bz2
</code></pre><h1 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h1><p>（1）java版本要求大于1.8.x</p>
<pre><code>java -version
</code></pre><p>（2）测试</p>
<pre><code>java -jar /path/to/GenomeAnalysisTK.jar -h
</code></pre><p>（3）设置别名</p>
<pre><code>alias gatk=&quot;/home/wangdong/softwares/GATK3.8/GenomeAnalysisTK.jar&quot;
</code></pre><p>（4）下载java1.7版本，解压即可（MuTect1.1.7需要）</p>
<p><a href="http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html" target="_blank" rel="external">Java SE 7 Archive Downloads</a></p>
<p><img src="https://i.imgur.com/3T122nP.png" alt=""></p>
<p>（5）mutect下载安装</p>
<ul>
<li><a href="https://github.com/broadinstitute/mutect" target="_blank" rel="external">github上mutect源码 broadinstitute/mutect(不必下载)</a></li>
<li><a href="https://software.broadinstitute.org/gatk/download/mutect" target="_blank" rel="external">GATK官网提供的编译好的MuTect1.1.7</a></li>
<li><a href="http://archive.broadinstitute.org/cancer/cga/mutect_run" target="_blank" rel="external">How do I run MuTect?（参数详解及使用例子）</a></li>
</ul>
<p>（6） 其他软件及环境配置</p>
<p>Software packages</p>
<ul>
<li>BWA</li>
<li>SAMtools</li>
<li>Picard</li>
<li>IGV</li>
<li>RStudio IDE and R libraries ggplot2 and gsalib</li>
</ul>
<p>参考：<a href="https://gatkforums.broadinstitute.org/gatk/discussion/2899/howto-install-all-software-packages-required-to-follow-the-gatk-best-practices" target="_blank" rel="external">(howto) Install all software packages required to follow the GATK Best Practices.</a></p>
<h1 id="Reference-sequence和annotation下载"><a href="#Reference-sequence和annotation下载" class="headerlink" title="Reference sequence和annotation下载"></a>Reference sequence和annotation下载</h1><p><strong>（请务必使用GATK resource bundle提供的参考基因组相关文件非常重要！）</strong></p>
<p>GATK resource bundle介绍：<br><a href="http://gatkforums.broadinstitute.org/discussion/1213/whats-in-the-resource-bundle-and-how-can-i-get-it" target="_blank" rel="external">http://gatkforums.broadinstitute.org/discussion/1213/whats-in-the-resource-bundle-and-how-can-i-get-it</a></p>
<p>GATK resource bundle FTP地址：<br><a href="http://gatkforums.broadinstitute.org/discussion/1215/how-can-i-access-the-gsa-public-ftp-server" target="_blank" rel="external">http://gatkforums.broadinstitute.org/discussion/1215/how-can-i-access-the-gsa-public-ftp-server</a></p>
<p>（1）使用Xftp5等FTP server登陆</p>
<pre><code>location: ftp.broadinstitute.org/bundle
username: gsapubftp-anonymous
password:
</code></pre><p>（2）使用浏览器登陆</p>
<pre><code>ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/
</code></pre><h2 id="Reference-sequence"><a href="#Reference-sequence" class="headerlink" title="Reference sequence"></a>Reference sequence</h2><ul>
<li>ucsc.hg19.dict.gz</li>
<li>ucsc.hg19.fasta.fai.gz</li>
<li>ucsc.hg19.fasta.gz</li>
</ul>
<p><a href="https://software.broadinstitute.org/gatk/documentation/article?id=1601" target="_blank" rel="external">How can I prepare a FASTA file to use as reference?</a></p>
<p> picard CreateSequenceDictionary R= hg19.fa O= hg19.dict</p>
<h2 id="annotation"><a href="#annotation" class="headerlink" title="annotation"></a>annotation</h2><ul>
<li>1000G_omni2.5.hg19.sites.vcf.idx</li>
<li>1000G_omni2.5.hg19.sites.vcf.idx</li>
<li>1000G_phase1.indels.hg19.sites.vcf</li>
<li>1000G_phase1.indels.hg19.sites.vcf.idx</li>
<li>hg19/1000G_phase1.snps.high_confidence.hg19.sites.vcf</li>
<li>hg19/1000G_phase1.snps.high_confidence.hg19.sites.vcf.idx</li>
<li>dbsnp_138.hg19.vcf</li>
<li>dbsnp_138.hg19.vcf.idx</li>
<li>hapmap_3.3.hg19.sites.vcf</li>
<li>hapmap_3.3.hg19.sites.vcf.idx</li>
<li>Mills_and_1000G_gold_standard.indels.hg19.sites.vcf</li>
<li>Mills_and_1000G_gold_standard.indels.hg19.sites.vcf.idx</li>
</ul>
<ol>
<li><p>dbSNP 用于去除部分候选突变，其在其他人中已经被观察到的，最有可能是胚系突变。因为提交给dbSNP数据库的突变验证水平很低，所以我们不能确定标记为胚系突变或者体细胞突变的标签是否可信。</p>
</li>
<li><p>相比之下，COSMIC是一个经过更高验证的资源，所以它基本上被用作白名单来“拯救”候选突变，否则这些候选突变将会因为在正常和/或dbSNP中而被去除。 我们期望在dbSNP中被标记为somatic的任何东西都将在COSMIC中，所以我们可以依靠COSMIC来重新回收这些位点。</p>
</li>
<li><p>当前最好的已知indels集合将被用于局部重新比对（local realignment）（请注意，我们不再使用dbSNP）; 使用这两个文件：</p>
<ul>
<li>1000G_phase1.indels.b37.vcf (currently from the 1000 Genomes Phase I indel calls)</li>
<li>Mills_and_1000G_gold_standard.indels.b37.sites.vcf</li>
</ul>
</li>
<li><p>If you run any GATK tool on a vcf that doesn’t have an index, it will automatically generate one for you, so knock yourself out。 <a href="https://gatkforums.broadinstitute.org/gatk/discussion/5426/generate-an-idx-file-for-a-vcf" target="_blank" rel="external">参考：generate an idx file for a vcf 
</a></p>
</li>
</ol>
<h2 id="GATK-Prepare-Reference-Files"><a href="#GATK-Prepare-Reference-Files" class="headerlink" title="GATK: Prepare Reference Files"></a>GATK: Prepare Reference Files</h2><p>参考： <a href="https://gatkforums.broadinstitute.org/gatk/discussion/2798/howto-prepare-a-reference-for-use-with-bwa-and-gatk" target="_blank" rel="external">(howto) Prepare a reference for use with BWA and GATK</a></p>
<p>Prerequisites</p>
<ul>
<li>Installed BWA</li>
<li>Installed SAMTools</li>
<li>Installed Picard</li>
</ul>
<p>Steps</p>
<ul>
<li><p>Generate the BWA index</p>
<p>  bwa index -a bwtsw ucsc.hg19.fasta &emsp;&emsp;#-a bwtsw指定索引算法</p>
</li>
<li><p>Generate the Fasta file index</p>
<p>  samtools faidx ucsc.hg19.fasta &emsp;&emsp;#将生成ucsc.hg19.fasta.fai 文件</p>
</li>
<li><p>Generate the sequence dictionary（也可直接用已下载的ucsc.hg19.dict文件）</p>
<p>  java -jar picard.jar CreateSequenceDictionary \ </p>
<p>  REFERENCE=reference.fa \ </p>
<p>  OUTPUT=reference.dict </p>
</li>
</ul>
<p>（更详细的可参考：<a href="http://people.duke.edu/~ccc14/duke-hts-2017/Statistics/08032017/GATK-reference.html" target="_blank" rel="external">链接</a>）</p>
<h2 id="Cosmic-gz文件下载"><a href="#Cosmic-gz文件下载" class="headerlink" title="Cosmic*.gz文件下载"></a>Cosmic*.gz文件下载</h2><p><a href="http://cancer.sanger.ac.uk/cosmic/download" target="_blank" rel="external">COSMIC</a>需要注册</p>
<p>下载</p>
<ul>
<li>CosmicCodingMuts.vcf</li>
<li>CosmicNonCodingVariants.vcf</li>
</ul>
<h2 id="Cosmic-hg19-vcf文件生成"><a href="#Cosmic-hg19-vcf文件生成" class="headerlink" title="Cosmic.hg19.vcf文件生成"></a>Cosmic.hg19.vcf文件生成</h2><p><a href="https://gatkforums.broadinstitute.org/gatk/discussion/2226/cosmic-and-dbsnp-files-for-mutect" target="_blank" rel="external">COSMIC and dbSNP files for MuTect</a></p>
<p>sortByRef.pl was part of <a href="https://github.com/amplab/smash" target="_blank" rel="external">https://github.com/amplab/smash</a></p>
<pre><code>gunzip Cosmic*.gz
grep &quot;^#&quot; CosmicCodingMuts.vcf &gt; VCF_Header
grep -v &quot;^#&quot; CosmicCodingMuts.vcf &gt; Coding.clean
grep -v &quot;^#&quot; CosmicNonCodingVariants.vcf &gt; NonCoding.clean
cat Coding.clean NonCoding.clean | sort -gk 2,2 | awk &apos;{print &quot;chr&quot;$0}&apos; | perl sortByRef.pl --k 1 - hg19UCSC.fa.fai &gt; Cosmic.hg19
cat VCF_Header Cosmic.hg19 &gt; Cosmic.hg19.vcf
</code></pre><h2 id="GATK输入文件要求"><a href="#GATK输入文件要求" class="headerlink" title="GATK输入文件要求"></a>GATK输入文件要求</h2><p><a href="https://software.broadinstitute.org/gatk/documentation/article.php?id=1204" target="_blank" rel="external">参考：What input files does the GATK accept / require?</a></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://www.plob.org/article/7070.html" target="_blank" rel="external">GATK使用（推荐）</a></p>
<p>（2）<a href="https://software.broadinstitute.org/gatk/documentation/topic?name=problems" target="_blank" rel="external">使用GATK过程常见报错及解决</a></p>
<p>（3）<a href="http://blog.sina.com.cn/s/blog_587cc04e0101l4bs.html" target="_blank" rel="external">GATK使用 备忘录（推荐）</a></p>
<p>（4）<a href="https://www.bits.vib.be/training/286" target="_blank" rel="external">GATK Best practices for variant discovery （BITS Courses    TRAINING AT VIB）</a></p>
<p>（5）<a href="https://www.genedock.com/blog/2017/07/21/20170721_%E5%88%9D%E6%8E%A2GATK4_Beta/" target="_blank" rel="external">初探 GATK4 beta</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;GATK3.8相关软件及文件准备&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>Rmarkdown生成动态报告</title>
    <link href="https:///AnJingwd.github.io/2017/12/10/Rmarkdown%E7%94%9F%E6%88%90%E5%8A%A8%E6%80%81%E6%8A%A5%E5%91%8A/"/>
    <id>https:///AnJingwd.github.io/2017/12/10/Rmarkdown生成动态报告/</id>
    <published>2017-12-10T02:54:17.000Z</published>
    <updated>2017-12-10T14:43:46.327Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Rmarkdown生成动态报告</blockquote>

<a id="more"></a>
<p>&emsp;&emsp;RStudio可以当做 Markdown 编辑器来用（R Markdown），根据数据处理结果快速生成报告文档，这一功能主要通过 Package Knit 及相关组件完成。</p>
<p>&emsp;&emsp;R Markdown 的两大特别之处，一是通过 Pandoc 将 Markdown 转化成 LaTex，再由强大的 LaTex 转换成 HTML、PDF、Word，理论上来说借助 LaTex 可以生成学术论文、期刊杂志、数据报告等规范格式的文档；另一大特点是整合了 R 语言的环境，可以在 Markdown 语法中 code block 直接执行 R 语言代码并将结果插入文档。</p>
<p>R Markdown from Rstudio <a href="http://rmarkdown.rstudio.com/lesson-1.html" target="_blank" rel="external">帮助文档</a></p>
<p>一个小教程:</p>
<ul>
<li><p><a href="https://rosannavanhespenresearch.wordpress.com/2016/02/03/writing-your-thesis-with-r-markdown-1-getting-started/" target="_blank" rel="external">Writing your thesis with R Markdown (1) – Getting started</a></p>
</li>
<li><p><a href="https://rosannavanhespenresearch.wordpress.com/2016/02/17/writing-your-thesis-with-rmarkdown-2-making-a-chapter/" target="_blank" rel="external">Writing your thesis with R Markdown (2) – Text, citations and equations</a></p>
</li>
<li><p><a href="https://rosannavanhespenresearch.wordpress.com/2016/03/18/writing-your-thesis-with-r-markdown-3-figures-r-code-and-tables/" target="_blank" rel="external">Writing your thesis with R Markdown (3) – Figures, R code and tables</a></p>
</li>
<li><p><a href="https://rosannavanhespenresearch.wordpress.com/2016/03/29/writing-your-thesis-with-r-markdown-4-putting-the-thesis-together/" target="_blank" rel="external">Writing your thesis with R Markdown (4) – Putting the thesis together</a></p>
</li>
<li><p><a href="https://rosannavanhespenresearch.wordpress.com/2016/03/30/writing-your-thesis-with-r-markdown-5-the-thesis-layout/" target="_blank" rel="external">Writing your thesis with R Markdown (5) – The thesis layout</a></p>
</li>
</ul>
<h1 id="安装必要的包"><a href="#安装必要的包" class="headerlink" title="安装必要的包"></a>安装必要的包</h1><pre><code>install.packages(&quot;devtools&quot;) # 如果以前没有安装 devtools 包
devtools::install_github(&quot;rstudio/rmarkdown&quot;)  #安装github上最新版rmarkdown
library(rmarkdown)
</code></pre><h1 id="如何编辑"><a href="#如何编辑" class="headerlink" title="如何编辑"></a>如何编辑</h1><ol>
<li><p>添加的是普通的文字: 那就按照Markdown写吧，你看到过的功能R都支持。</p>
</li>
<li><p>添加的是代码: 那就放到代码区域里面去，和Markdown的代码标记不太一样，多了 {}。</p>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">code</div></pre></td></tr></table></figure>
</code></pre></li>
<li><p>然后在 {} 里告诉 R Studio 你希望显示什么:</p>
</li>
</ol>
<ul>
<li>echo控制R代码块是否可见,设置为FALSE表示隐藏R代码，但会运行代码块并输出结果到文档。如果你只是为了显示而不需要运行一个代码块，设置eval = FALSE即可。 </li>
<li>message参数用于设置是否显示控制台输出的信息，message = FALSE表示不显示。<ul>
<li>只想显示代码 {r,echo = FALSE, eval = FALSE}</li>
<li>只想显示结果 {r,echo = FALSE, eval = TRUE}</li>
<li>想要代码+编译结果 {r,echo = TRUE，eval = FALSE}</li>
</ul>
</li>
</ul>
<ol>
<li><p>如果是在文中添加代码，没有{}</p>
<pre><code>`r 2+ 2`
</code></pre></li>
<li><p>chunk options</p>
</li>
</ol>
<p><img src="https://i.imgur.com/SeQw9LV.jpg" alt=""></p>
<p>这个chunk放在最前面，声明以后的每一个chunk都不输出warnings和message</p>
<ol>
<li><p>在代码块执行完后，控制结果的输出形式。包括文本、图表和图形的输出。有四个取值（更多细节参考<a href="http://yihui.name/knitr/options/）：" target="_blank" rel="external">http://yihui.name/knitr/options/）：</a> 1.markup—标记显示 2.asis—文本显示 3.hold—末尾显示 4.hide—隐藏 </p>
</li>
<li><p>由graphics和ggplot2得到的图形对齐方式可通过fig.align = ‘left’/‘right’/‘center’分别设置成左对齐，右对齐，居中。下图设置图形居中（默认是左对齐）</p>
</li>
</ol>
<h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><pre><code>![Caption for the picture.](/path/to/image.png)
</code></pre><h1 id="输出-html-word-pdf"><a href="#输出-html-word-pdf" class="headerlink" title="输出(html ,word, pdf)"></a>输出(html ,word, pdf)</h1><p>从Rmd格式可以导出为三种格式，用Pandoc实现:Word, HTML, PDF（额外需要LaTex支持，并且对中文的支持需要额外的设定）</p>
<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>Windows</p>
<p>There is a package installer at pandoc’s<a href="https://github.com/jgm/pandoc/releases/latest" target="_blank" rel="external"> download page</a>. 选择msi installer或者zip file都可以。</p>
<p>For PDF output, you’ll also need to install LaTeX. We recommend <a href="http://miktex.org/" target="_blank" rel="external">MiKTeX</a>.</p>
<h2 id="R-Studio的全局配置-为了支持中文pdf输出"><a href="#R-Studio的全局配置-为了支持中文pdf输出" class="headerlink" title="R Studio的全局配置(为了支持中文pdf输出)"></a>R Studio的全局配置(为了支持中文pdf输出)</h2><ul>
<li>Tools – Global Options – Code—Saving， 设置Default text coding: UTF-8 coding</li>
<li>Tools – Global Options – Sweave，将Typeset LaTeX into PDF using:设置为 XeLaTeX</li>
</ul>
<p>需要注意的就是latex_engine:xelatex 了。即使设置了默认的编译器为xeLaTeX依旧要手动再声明一遍编译器</p>
<h2 id="设置-YAML"><a href="#设置-YAML" class="headerlink" title="设置 YAML"></a>设置 YAML</h2><p>完成对R Studio的全局配置后，对每个Rmd文件（R markdown）在最开头条线之间进行设置才是更重要的。这个部分叫做YAML <a href="https://en.wikipedia.org/wiki/YAML" target="_blank" rel="external">wiki</a></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">author: <span class="string">"wd"</span></div><div class="line">date: <span class="string">"2017.12.10"</span></div><div class="line">output: pdf_document</div><div class="line">title: <span class="string">"MRstudy"</span></div><div class="line">outputs:</div><div class="line">  pdf_document:</div><div class="line">    includes:</div><div class="line">      in_header: header.tex</div><div class="line">    keep_tex: yes</div><div class="line">    latex_engine: xelatex</div><div class="line">---</div></pre></td></tr></table></figure>
<p>步骤:</p>
<ul>
<li>在YMAL里面设置 output: pdf_document，或者word_document, html_document。</li>
<li>设定好了之后三种导出的方法都一样，<strong>点击代码窗口上面的蓝色毛线团标记（选择输出html或者word或者pdf）。</strong>（knit英文是编织的意思，所以就是把代码织成文本吧）</li>
</ul>
<p><strong>注意正确的缩进和冒号</strong></p>
<ul>
<li>以上意思是，输出为html，word和pdf。html和word为默认设置。pdf设置包括，in_header，keep_tex和latex_engine。</li>
<li>如果一个设置还没到具体的内容，它紧接的是冒号，换行后需要缩进两个空格在开始。</li>
<li>如果已经指向明确的内容，结束没有冒号，换行之后不需要缩进。</li>
</ul>
<p><strong>header.tex需要和你的Rmd文档放到一个路径，</strong> 其中内容是：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">\usepackage&#123;xeCJK&#125;</div><div class="line">\setCJKmainfont&#123;楷体&#125;  % 字体可以更换</div><div class="line">\setmainfont&#123;Georgia&#125; % 設定英文字型</div><div class="line">\setromanfont&#123;Georgia&#125; % 字型</div><div class="line">\setmonofont&#123;Courier New&#125;</div></pre></td></tr></table></figure>
<p>更多详细配置可以参考<a href="http://rmarkdown.rstudio.com/" target="_blank" rel="external">官方文档</a></p>
<h1 id="编译前在viewer窗口预览文档"><a href="#编译前在viewer窗口预览文档" class="headerlink" title="编译前在viewer窗口预览文档"></a>编译前在viewer窗口预览文档</h1><p>使用方法：</p>
<ol>
<li><p>安装 Xaringan</p>
<p> install.packages(“devtools”)<br> if (!requireNamespace(“xaringan”))<br> devtools::install_github(“yihui/xaringan”)</p>
</li>
<li>R markdown不需额外设置。</li>
<li>编译的时候找到 Addin，点击Infinite Moon Reader</li>
</ol>
<p><img src="https://i.imgur.com/MfkEUSg.jpg" alt=""></p>
<h1 id="rmarkdown转化中文字符为PDF的设置"><a href="#rmarkdown转化中文字符为PDF的设置" class="headerlink" title="rmarkdown转化中文字符为PDF的设置"></a>rmarkdown转化中文字符为PDF的设置</h1><p>rmarkdown对于输出含中文的html和word文档，在YAML设置html_document: default或者word_document: default即可，但对于输出含有中文的pdf文件需要单独设置YAML。如下：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">output:</div><div class="line">  pdf_document:</div><div class="line">    keep_tex: yes</div><div class="line">    latex_engine: xelatex</div><div class="line">    includes:</div><div class="line">      in_header: header.tex</div></pre></td></tr></table></figure>
<h1 id="中文模板-详细说明"><a href="#中文模板-详细说明" class="headerlink" title="中文模板 详细说明"></a>中文模板 <a href="https://github.com/rstudio/rticles/pull/16" target="_blank" rel="external">详细说明</a></h1><p>安装rticles包，调用中文模板<br>    install.packages(“rticles”)</p>
<p>安装成功之后，我们可以新建一个Rmarkdown文件。点击New-&gt;file-&gt;R markdown,其中有了一个From Template</p>
<p><img src="https://i.imgur.com/qHiN24R.jpg" alt=""></p>
<p>使用ctrl + shift + k的快捷键，稍等片刻会出现中文PDF</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://www.xueqing.tv/cms/article/96" target="_blank" rel="external">利用R-Markdown和Knitr创建动态报告（第一部分）</a></p>
<p>（2）<a href="http://www.xueqing.tv/cms/article/101" target="_blank" rel="external">利用R-Markdown和Knitr创建动态报告（第二部分）</a></p>
<p>（3）<a href="https://www.cnblogs.com/Xeonilian/p/7142379.html" target="_blank" rel="external">R Markdown 设置和使用</a></p>
<p>（4）<a href="http://www.cnblogs.com/Xeonilian/p/7608290.html" target="_blank" rel="external">R Markdown + Infinite Moon Reader + 编辑实时更新</a></p>
<p>（5）<a href="http://blog.rainy.im/2015/05/16/rmarkdown-in-rstudio/" target="_blank" rel="external">RStudio 中的 R Markdown（推荐）</a></p>
<p>（6）<a href="http://blog.csdn.net/xmuecor/article/details/41956525" target="_blank" rel="external">Rmarkdown输出PDF的中文支持问题解决</a></p>
<p>（7）<a href="http://www.jianshu.com/p/0bfda49f1a52" target="_blank" rel="external">rmarkdown转化中文字符为PDF的设置</a></p>
<p>（8）<a href="http://www.jianshu.com/p/3a1d95f9965a" target="_blank" rel="external">Rmarkdown中文实现（推荐）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Rmarkdown生成动态报告&lt;/blockquote&gt;
    
    </summary>
    
      <category term="R" scheme="https:///AnJingwd.github.io/categories/R/"/>
    
    
      <category term="R" scheme="https:///AnJingwd.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>创建宏去除从pdf复制到word的回车换行</title>
    <link href="https:///AnJingwd.github.io/2017/12/03/%E5%88%9B%E5%BB%BA%E5%AE%8F%E5%8E%BB%E9%99%A4%E4%BB%8Epdf%E5%A4%8D%E5%88%B6%E5%88%B0word%E7%9A%84%E5%9B%9E%E8%BD%A6%E6%8D%A2%E8%A1%8C/"/>
    <id>https:///AnJingwd.github.io/2017/12/03/创建宏去除从pdf复制到word的回车换行/</id>
    <published>2017-12-03T10:12:38.000Z</published>
    <updated>2017-12-03T10:41:41.736Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;从PDF或网页中复制一段文字再粘贴到WORD中，会出现很多多余的空格和回车，一个一个去删除费时费力费心。在word创建宏，并设置按钮即可。</p>
<blockquote class="blockquote-center">创建宏去除从pdf复制到word的回车换行</blockquote>

<a id="more"></a>
<h1 id="如何创建宏及设置按钮"><a href="#如何创建宏及设置按钮" class="headerlink" title="如何创建宏及设置按钮"></a>如何创建宏及设置按钮</h1><h2 id="Steps-to-Record-a-Macro-in-Word"><a href="#Steps-to-Record-a-Macro-in-Word" class="headerlink" title="Steps to Record a Macro in Word"></a>Steps to Record a Macro in Word</h2><ol>
<li>Firstly, open your Word.</li>
<li>And make sure you have added “Developer” tab on the Ribbon first. For detailed instructions to add “Developer”, please read the article: How to Insert Background Music into Your Word Document</li>
<li>Once “Developer” tab is available, click it.</li>
<li>Then click “Record Macro” in “Code” group.</li>
</ol>
<p><img src="https://i.imgur.com/jBnJRul.jpg" alt=""></p>
<ol>
<li>Now a “Record Macro” dialog box will pop up. First, type the macro name, such as “copytext” here.</li>
<li>Then in “Assign macro to” part, choose either “Button” or “Keyboard”. Here we will go “Button”.</li>
<li><p>Next, click “OK”.<br><img src="https://i.imgur.com/W4PtR1j.jpg" alt=""></p>
</li>
<li><p>And now you will see the “Word Options” window. Click “Customize Ribbon”.</p>
</li>
<li>Then find a location for the macro on the right side. Here we will click “New Group” to set a new one for the macro.</li>
<li>Noe continue to choose “Macros” from the drop-down list of “Choose commands from”.</li>
<li>Next click the macro you just create.</li>
<li>Then click “Add” in the middle of the window.</li>
<li>Now the macro will be placed in the new group. Just right click the macro</li>
<li>And choose “Rename” option.<br><img src="https://i.imgur.com/wxgOLUM.jpg" alt=""></li>
<li>In “Rename” dialog box, choose a symbol for your macro.</li>
<li>Then type the display name.</li>
<li>Click “OK”.</li>
</ol>
<p><img src="https://i.imgur.com/9LQzOKA.jpg" alt=""></p>
<ol>
<li>Now go back to “Word Options” window, and click “OK” there. The macro starts recording from now.</li>
</ol>
<p><img src="https://i.imgur.com/bTy2Okj.jpg" alt=""></p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">Sub 粘贴并替换回车()</div><div class="line">   </div><div class="line">    Dim Flag As Integer</div><div class="line">   </div><div class="line">    <span class="string">'粘贴并选中</span></div><div class="line"><span class="string">    startpos = Selection.Start</span></div><div class="line"><span class="string">    '</span>Selection.Paste  <span class="string">'普通粘贴</span></div><div class="line"><span class="string">    Selection.PasteAndFormat (wdFormatPlainText)  '</span>粘贴为文本</div><div class="line">    Selection.Start = startpos</div><div class="line"></div><div class="line">   </div><div class="line">    <span class="string">'先将多个回车并为一个</span></div><div class="line"><span class="string">    With Selection.Find</span></div><div class="line"><span class="string">        .Text = "^13&#123;2,&#125;"</span></div><div class="line"><span class="string">        .Replacement.Text = "^p"</span></div><div class="line"><span class="string">        .MatchWildcards = True '</span>使用通配符</div><div class="line">        .Wrap = wdFindStop <span class="string">'把 .Wrap = wdFindAsk 改成 .Wrap = wdFindStop对应于“是否搜索其余部分”中的“否”</span></div><div class="line"><span class="string">        .Execute Replace:=wdReplaceAll</span></div><div class="line"><span class="string">    End With</span></div><div class="line"><span class="string">   </span></div><div class="line"><span class="string">    '</span>主要针对最后是两个回车的特殊情况这种特殊情况下，替换后少选择一位字符，影响后续操作</div><div class="line">    If Selection.Text Like <span class="string">"*[!。\?？\!！”：；]"</span> &amp; Chr(13) Then</div><div class="line">        Flag = 1</div><div class="line">    End If</div><div class="line">    <span class="string">'再将前面不是句号的回车删除</span></div><div class="line"><span class="string">    With Selection.Find</span></div><div class="line"><span class="string">        .Text = "([!.。\?？\!！”：；])^13"</span></div><div class="line"><span class="string">        .Replacement.Text = "\1"</span></div><div class="line"><span class="string">        .MatchWildcards = True '</span>使用通配符</div><div class="line">        .Wrap = wdFindStop <span class="string">'把 .Wrap = wdFindAsk 改成 .Wrap = wdFindStop对应于“是否搜索其余部分”中的“否”</span></div><div class="line"><span class="string">        .Execute Replace:=wdReplaceAll</span></div><div class="line"><span class="string">    End With</span></div><div class="line"><span class="string">   </span></div><div class="line"><span class="string">    If Flag Then</span></div><div class="line"><span class="string">        Selection.MoveLeft unit:=wdCharacter, Count:=-1, Extend:=wdExtend '</span>取消选定最后一个回车符</div><div class="line">    End If</div><div class="line">   </div><div class="line">    <span class="string">'清除替换的内容</span></div><div class="line"><span class="string">    Selection.Find.Replacement.Text = ""</span></div><div class="line"><span class="string">End Sub</span></div></pre></td></tr></table></figure>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>代码主要从参考1修改而来，主要修改：</p>
<ol>
<li>源代码第一个With Selection.Find部分导致空格删除，使得中文可以，但英文全部空格被删除，所以需要注释=掉或者删除掉</li>
<li>第三个With Selection.Find部分需要加一个.号，主要针对英文</li>
</ol>
<p><img src="https://i.imgur.com/Z2LfJ65.png" alt=""></p>
<p><img src="https://i.imgur.com/mGL1UNA.png" alt=""></p>
<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="https://i.imgur.com/9GTjAFf.jpg" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://blog.sina.com.cn/s/blog_51817ae50102w8id.html" target="_blank" rel="external">[源码]文本从PDF等粘贴到WORD中，智能删除多余的空格和回车</a></p>
<p>（2）<a href="https://www.datanumen.com/blogs/how-to-remove-the-formatting-of-pasted-texts-with-macro-and-vba-in-your-word/" target="_blank" rel="external">How to Remove the Formatting of Pasted Texts with Macro and VBA in Your Word</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;从PDF或网页中复制一段文字再粘贴到WORD中，会出现很多多余的空格和回车，一个一个去删除费时费力费心。在word创建宏，并设置按钮即可。&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;创建宏去除从pdf复制到word的回车换行&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术" scheme="https:///AnJingwd.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="https:///AnJingwd.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>文献查询与引用技巧</title>
    <link href="https:///AnJingwd.github.io/2017/11/25/%E6%96%87%E7%8C%AE%E6%9F%A5%E8%AF%A2%E4%B8%8E%E5%BC%95%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https:///AnJingwd.github.io/2017/11/25/文献查询与引用技巧/</id>
    <published>2017-11-25T11:24:52.000Z</published>
    <updated>2017-12-15T10:27:28.174Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">文献查询与引用技巧</blockquote>

<a id="more"></a>
<h1 id="只查询review"><a href="#只查询review" class="headerlink" title="只查询review"></a>只查询review</h1><p><img src="https://i.imgur.com/ugJKXz7.jpg" alt=""></p>
<p><img src="https://i.imgur.com/E9XOueN.jpg" alt=""></p>
<h1 id="sci-hub最新地址（20171215）"><a href="#sci-hub最新地址（20171215）" class="headerlink" title="sci-hub最新地址（20171215）"></a>sci-hub最新地址（20171215）</h1><ol>
<li><a href="https://scihub22266qpcxt.onion.link/" target="_blank" rel="external">https://scihub22266qpcxt.onion.link/</a></li>
<li><a href="http://sci-hub.tw/" target="_blank" rel="external">http://sci-hub.tw/</a> 或者 www.sci-hub.tw</li>
<li><a href="http://sci-hub.hk/" target="_blank" rel="external">http://sci-hub.hk/</a> 或者 www.sci-hub.hk</li>
<li>80.82.77.83</li>
<li>80.82.77.84</li>
</ol>
<h1 id="实验protocol或者数据分析protocol"><a href="#实验protocol或者数据分析protocol" class="headerlink" title="实验protocol或者数据分析protocol"></a>实验protocol或者<strong>数据分析protocol</strong></h1><p><a href="https://www.nature.com/search/advanced" target="_blank" rel="external">Nature Protocols</a>​ 或者 <a href="https://link.springer.com/" target="_blank" rel="external">springer protocol </a></p>
<p><img src="https://i.imgur.com/uvbWpnD.jpg" alt=""></p>
<h1 id="文献引用的下载"><a href="#文献引用的下载" class="headerlink" title="文献引用的下载"></a>文献引用的下载</h1><ul>
<li>方法一：<a href="http://jingyan.baidu.com/article/7f766daf970aef4101e1d002.html" target="_blank" rel="external">从中国知网</a></li>
<li>方法二：<a href="http://jingyan.baidu.com/article/f79b7cb378992f9144023ea2.html" target="_blank" rel="external">从百度学术</a></li>
<li>方法三：<a href="https://www.howsci.com/endnote-import-pubmed.html" target="_blank" rel="external">从Pubmed</a></li>
<li>方法四：<a href="https://apps.webofknowledge.com/UA_GeneralSearch_input.do?product=UA&amp;search_mode=GeneralSearch&amp;SID=5EmIvuZs9xgC4RP8XzA&amp;preferencesSaved=" target="_blank" rel="external">从web of science</a> &emsp;&emsp;<a href="http://jingyan.baidu.com/article/e75aca85150856142edac635.html" target="_blank" rel="external">方法</a></li>
</ul>
<p>快速下载一篇文献后的引文导入EndNote：<a href="http://blog.sina.com.cn/s/blog_1398ef3510102wtwi.html" target="_blank" rel="external">方法</a></p>
<p>剩下依然找不到，或者是电子文献的类型的只有手动在EndNote中生成了：<a href="http://jingyan.baidu.com/article/fec4bce2752613f2618d8b29.html" target="_blank" rel="external">方法</a></p>
<p>web of science文献检索技巧：</p>
<p>首先根据一个关键词检索，然后在搜索到的结果中精炼</p>
<p><img src="https://i.imgur.com/A0apSWt.jpg" alt=""></p>
<h1 id="文献引用的生成"><a href="#文献引用的生成" class="headerlink" title="文献引用的生成"></a>文献引用的生成</h1><p>对于EndNote自带，或者官网有的Style可以直接下载使用</p>
<p>（1）<a href="http://jingyan.baidu.com/article/456c463b53754d0a58314427.html" target="_blank" rel="external">Endnote期刊格式的下载和使用</a></p>
<p>（2）<a href="http://mp.weixin.qq.com/s?__biz=MjM5ODcyMzk0Mg==&amp;mid=2651045955&amp;idx=1&amp;sn=c9b303938094d2f45ccd372c92c266ea&amp;scene=21#wechat_redirect" target="_blank" rel="external">Endnote文献引用格式全解之常规引用格式获取方法</a></p>
<p>   &emsp;&emsp;<a href="http://endnote.com/downloads" target="_blank" rel="external">EndNote官网</a></p>
<h1 id="修改文献引用格式"><a href="#修改文献引用格式" class="headerlink" title="修改文献引用格式"></a>修改文献引用格式</h1><p>&emsp;&emsp;硕士论文，博士论文没有完全对应的那种style，虽然EndnoteX7中已经有与GB/T7714-2005对应的两种参考文献输出格式：Chinese Std GBT7714(author-year).ens和Chinese Std GBT7714(numeric).ens，分别对应著者－出版年制和顺序编码制。但是这两个自带的style都不能完全满足国家标准的要求，还有就是不同学校的具体要求不一样，所以，需要自己在此基础上自定义。</p>
<ol>
<li>顺序编码制</li>
</ol>
<p>&emsp;&emsp;顺序编码制是指作者在论文中所引用的文献按它们在文中出现的先后顺序，用阿拉伯数字加方括号连续编码，视具体情况把序号作为上角或作为语句的组成部分进行标注，并在文后参考文献表中，各条文献按在论文中出现的文献序号顺序依次排列。</p>
<ol>
<li>著者-出版年制</li>
</ol>
<p>&emsp;&emsp;著者-出版年制”是指正文中各篇文献的标注内容由著者姓氏与出版年构成，并置于圆括号“（）”内；参考文献表按文种集中后按著者字顺和出版年排列的引用文献标注方法。</p>
<p>网上教程比较多，就不一一列举了，汇总一些问题的可行的解决方法还是可以的，已亲测可行哦！！</p>
<p>问题一：endnote 出入文献怎样让英文参考文献在前,中文在后？<a href="https://www.zhihu.com/question/54447786" target="_blank" rel="external">方法</a></p>
<p>问题二：EndNote中英文混排时etal和等的3种解决方法? <a href="https://www.howsci.com/endnote-eng-cn-refer-etal.html" target="_blank" rel="external">方法</a> &emsp;&emsp;<a href="http://jingyan.baidu.com/article/8065f87f804c5c233124989e.html" target="_blank" rel="external">方法</a></p>
<h2 id="细节问题："><a href="#细节问题：" class="headerlink" title="细节问题："></a>细节问题：</h2><p>问题一：编号后的间隙有点大，不符合标准。默认的为2个字符，但是毕设手册要求的应该是1个字符? <a href="http://yjbys.com/jiuyezhidao/fanwen/qitafanwen/1364745.html" target="_blank" rel="external">方法</a></p>
<p>问题二：EndNoteX7一段文字如何引用多个连续文献[2-7]？<a href="http://www.cappchem.com/Article2014/1179.html" target="_blank" rel="external">方法</a></p>
<p>问题三：在endnoteX5中怎么用分号而不是逗号把多个citation分开？<a href="https://zhidao.baidu.com/question/444890445.html" target="_blank" rel="external">方法</a></p>
<p>问题四：搜狗输入法中文实心点怎么打?<a href="https://zhidao.baidu.com/question/333654623.html" target="_blank" rel="external">方法</a></p>
<p>问题五：Endnote中参考文献期刊名称的全称与缩写转换?<a href="http://jingyan.baidu.com/article/fdbd4277c428cbb89e3f4827.html" target="_blank" rel="external">方法</a></p>
<h2 id="综合性推荐"><a href="#综合性推荐" class="headerlink" title="综合性推荐"></a>综合性推荐</h2><p>（1） <a href="http://blog.sina.com.cn/s/blog_770ffb870101lzoe.html" target="_blank" rel="external">Endnote中英文混排之完美解决（转）</a></p>
<p>（2）<a href="http://blog.csdn.net/zhengmingtoh/article/details/7383109" target="_blank" rel="external">在endnote中制作GB/T7714《文后参考文献著录规则》的输出格式</a></p>
<p>（3）<a href="http://wenku.baidu.com/view/ae6f23960508763230121235.html" target="_blank" rel="external">endnoteX7全新教程</a></p>
<h2 id="范例"><a href="#范例" class="headerlink" title="范例"></a>范例</h2><p>在EndNote中创建同济大学研究生学位论文参考文献格式! <a href="http://blog.sina.com.cn/s/blog_489d7be80102vktp.html" target="_blank" rel="external">网址</a></p>
<p>徐源_毕业论文参考文献输出标准格式.ens文件下载! <a href="http://vdisk.weibo.com/s/BGPusUMycYWAk" target="_blank" rel="external">网址</a></p>
<p>另科研动力主页有许多关于EndNote的资料，基本可以解决文献应用的你遇到的所有问题：<a href="https://www.howsci.com/" target="_blank" rel="external">网址</a></p>
<h1 id="快速导入一篇文章引用的参考文献至EndNoted再次引用"><a href="#快速导入一篇文章引用的参考文献至EndNoted再次引用" class="headerlink" title="快速导入一篇文章引用的参考文献至EndNoted再次引用"></a>快速导入一篇文章引用的参考文献至EndNoted再次引用</h1><p>&emsp;&emsp;在使用Endnote过程中遇到这样一个情况，如果发现一篇很好的文章，其后参考文献都很好，是某一方向或领域的经典，如何将这些文章一次性导入自己的Endnote中呢？最初用笨笨的方法，那就是一条条的往里输，等几十篇文章输完，快则一两个小时，慢的话一个上午甚至一天才能搞定。网上有使用<a href="http://www.scopus.com/home.url" target="_blank" rel="external">scopus数据库</a>的，并且有<a href="http://www.docin.com/p-531060060.html" target="_blank" rel="external">教程</a>,但是scopus是需要登陆的，折腾了好久，在网上也没找到能用的账号。于是乎想想免费通用的办法罗。首先想到的是PubMed，确实可以，但是以下方法只对PubMed收录的免费的文献适用，对于全文版权在其他出版商的文献则无能为力了。</p>
<p><img src="https://i.imgur.com/QdNvc4z.jpg" alt=""></p>
<p><img src="https://i.imgur.com/TLeFEAt.jpg" alt=""></p>
<p><img src="https://i.imgur.com/PQA1cfG.jpg" alt=""></p>
<p><img src="https://i.imgur.com/zkjh53W.jpg" alt=""></p>
<p>所以想到了Web of Science，这个方法更加通用可行！！已亲测，只需7步，快速导入一篇文章引用的参考文献至EndNoted。</p>
<p><img src="https://i.imgur.com/YBcPEBG.jpg" alt=""></p>
<p><img src="https://i.imgur.com/nBnnvme.jpg" alt=""></p>
<p><img src="https://i.imgur.com/Ty02l9W.jpg" alt=""></p>
<p><img src="https://i.imgur.com/bv7jwIP.jpg" alt=""></p>
<p><img src="https://i.imgur.com/VjWmIok.jpg" alt=""></p>
<p><img src="https://i.imgur.com/h4cANxZ.jpg" alt=""></p>
<p><img src="https://i.imgur.com/o8bviUS.jpg" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;文献查询与引用技巧&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术" scheme="https:///AnJingwd.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="https:///AnJingwd.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
