<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安静-不安静的博客</title>
  
  <link href="https:///AnJingwd.github.io/atom.xml" rel="self"/>
  
  <link href="https:///AnJingwd.github.io/"/>
  <updated>2018-01-28T11:12:51.469Z</updated>
  <id>https:///AnJingwd.github.io/</id>
  
  <author>
    <name>AJ&#39;s blog</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>qPCR结果分析及非参数检验</title>
    <link href="https:///AnJingwd.github.io/2018/01/28/qPCR%E7%BB%93%E6%9E%9C%E5%88%86%E6%9E%90%E5%8F%8A%E9%9D%9E%E5%8F%82%E6%95%B0%E6%A3%80%E9%AA%8C/"/>
    <id>https:///AnJingwd.github.io/2018/01/28/qPCR结果分析及非参数检验/</id>
    <published>2018-01-28T02:33:14.000Z</published>
    <updated>2018-01-28T11:12:51.469Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">qPCR结果分析及非参数检验</blockquote>

<a id="more"></a>
<h1 id="相对表达量计算"><a href="#相对表达量计算" class="headerlink" title="相对表达量计算"></a>相对表达量计算</h1><p>一：⊿Ct如何计算，公式推导</p>
<p>(1)    一般，我们都假设扩增效率为1，也就是每个循环增加一倍。</p>
<p><img src="https://i.imgur.com/DyztX9Q.jpg" alt=""></p>
<p>(2)    当产物量达到同一水平的时候，但Ct值不同，其原因就在于期初的模板量的差距，而当检测样本和内参基因的产物量相同的时候，找出他们模板量的比值差的话，就需要做一下除法，也就是下面这样： </p>
<p><img src="https://i.imgur.com/v10u3n5.jpg" alt=""></p>
<p>二：具体例子（⊿⊿Ct计算）</p>
<p><img src="https://i.imgur.com/3Wd6BKb.png" alt=""></p>
<p>一般在进行qPCR实验时，都会设计独立三次重复试验，每次作3个复孔，然后根据下列公式先分别计算试验组和对照组的ΔCt值</p>
<ul>
<li>ΔCt试验=Ct目的基因-Ct内参基因</li>
<li>ΔCt对照=Ct目的基因-Ct内参基因</li>
</ul>
<p>注：Ct目的基因和Ct内参基因是三个复孔Ct值求得的均值</p>
<p>ΔΔCt=ΔCt试验-ΔCt对照，相对表达量=2^(-⊿⊿Ct)</p>
<p>&emsp;&emsp;相对表达量是指目的基因在试验组中的表达是目的基因在对照组表达的多少倍。在P&lt;0.05的情况下，如果2-ΔΔCt小于1说明目的基因在试验组中表达下调，大于1说明目的基因在试验组中表达上调。否则表达无差异。</p>
<h1 id="组间差异非参数检验"><a href="#组间差异非参数检验" class="headerlink" title="组间差异非参数检验"></a>组间差异非参数检验</h1><p>原始数据处理（EXCEL）：</p>
<p><img src="https://i.imgur.com/4Lgn5iR.png" alt=""></p>
<p>&emsp;&emsp;如果数据无法满足t检验或ANOVA的参数假设，可以转而使用非参数方法。<strong>若两组数据独立，</strong> 可以使用Wilcoxon秩和检验（更广为人知的名字是Mann-Whitney U检验）来评估观测是否是从相同的概率分布中抽得的（即，在一个总体中获得更高得分的概率是否比另<br>一个总体要大）。调用格式为：</p>
<pre><code>wilcox.test(y ~ x, data)
</code></pre><p>其中的y是数值型变量，而x是一个二分变量。</p>
<p>Wilcoxon符号秩检验是<strong>非独立样本</strong>t检验的一种非参数替代方法。它适用于两组成对数据和无法保证正态性假设的情境。调用格式与Mann-Whitney U检验完全相同，不过还可以添加参数paired=TRUE。</p>
<h2 id="绘制箱图"><a href="#绘制箱图" class="headerlink" title="绘制箱图"></a>绘制箱图</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#qPCR_barplot.R</span></div><div class="line">setwd(<span class="string">"F:/R working directory/qPCR"</span>)</div><div class="line">qPCR&lt;-read.csv(<span class="string">"miRNA_qPCR_plot.csv"</span>,header=<span class="literal">TRUE</span>,check.names = <span class="literal">FALSE</span>)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line">p&lt;-ggplot(data=qPCR, aes(x=miRNA,y=value))+geom_boxplot(aes(fill=sample))</div><div class="line"></div><div class="line">p + facet_wrap(~ miRNA, scales=<span class="string">"free"</span>)</div></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://www.360doc.com/content/17/0706/21/44614528_669420186.shtml" target="_blank" rel="external">如何分析你凌乱不堪的qPCR数据（推荐）</a></p>
<p>（2）<a href="http://www.dxy.cn/bbs/topic/25725392" target="_blank" rel="external">分享自己关于qPCR（RT-PCR）数据相对定量的分析方法与经验！</a></p>
<p>（3）<a href="http://www.dxy.cn/bbs/thread/29554700#29554700" target="_blank" rel="external">△△CT数据处理</a></p>
<p>（4）<a href="http://www.dxy.cn/bbs/thread/26343222#26343222" target="_blank" rel="external">相对荧光定量数据处理</a></p>
<p>（5）<a href="http://www.jianshu.com/p/b7274afff14f?from=timeline" target="_blank" rel="external">R语言可视化学习笔记之添加p-value和显著性标记（推荐）</a></p>
<p>（6）<a href="https://github.com/const-ae/ggsignif" target="_blank" rel="external">添加线条来连接比较的两组，这一功能已由包ggsignif实现（推荐）</a></p>
<p>（7）<a href="https://www.tanboyu.com/r-for-nonparametric-tests.html" target="_blank" rel="external">非参检验R语言实现</a></p>
<p>（8）<a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=4&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwjVxeX1x_DXAhXMxrwKHVvOAnwQFgg4MAM&amp;url=http%3A%2F%2Fblog.csdn.net%2Ftimothyzh%2Farticle%2Fdetails%2F7657470&amp;usg=AOvVaw3SpJzBCWcgBwfbkJn65CFP" target="_blank" rel="external">Wilcoxon-Mann-Whitney秩和检验/rank sum test（或test U）</a></p>
<p>（9）<a href="https://wenku.baidu.com/view/d09fcc7033687e21ae45a902.html" target="_blank" rel="external">荧光定量PCR应用指南{推荐}</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;qPCR结果分析及非参数检验&lt;/blockquote&gt;
    
    </summary>
    
      <category term="实验" scheme="https:///AnJingwd.github.io/categories/%E5%AE%9E%E9%AA%8C/"/>
    
    
      <category term="实验" scheme="https:///AnJingwd.github.io/tags/%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>IGV批量查看变异</title>
    <link href="https:///AnJingwd.github.io/2018/01/26/IGV%E6%89%B9%E9%87%8F%E6%9F%A5%E7%9C%8B%E5%8F%98%E5%BC%82/"/>
    <id>https:///AnJingwd.github.io/2018/01/26/IGV批量查看变异/</id>
    <published>2018-01-26T03:21:34.000Z</published>
    <updated>2018-01-28T09:15:06.332Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">IGV批量查看变异并过滤</blockquote>

<a id="more"></a>
<h1 id="IGV可视化准备"><a href="#IGV可视化准备" class="headerlink" title="IGV可视化准备"></a>IGV可视化准备</h1><p><a href="http://www.nature.com/nbt/journal/v29/n1/full/nbt.1754.html" target="_blank" rel="external">Nature biotechnology文献</a>：Integrative Genomics Viewer</p>
<p><a href="http://software.broadinstitute.org/software/igv/download" target="_blank" rel="external">Downloads IGV </a>; &emsp;<a href="http://software.broadinstitute.org/software/igv/igvtools" target="_blank" rel="external">igvtools</a>为一些数据可视化预处理程序</p>
<p>IGV可视化数据准备</p>
<ul>
<li>不是什么数据都可以拿IGV看的，参考基因组必须为FASTA格式；</li>
<li>IGV只是负责将比对结果可视化，并没有比对过程，所以不能直接载入reads；</li>
<li>需要将待比对的reads与前面指定的参考基因组用bwa进行比对；</li>
<li>比对后的sam文件也不能直接载入，<strong>要转bam；bam排序；bam建索引（可以一步完成）</strong>；</li>
</ul>
<p><strong>需要两个文件.bam文件和.bam.bai文件</strong></p>
<h1 id="IGV批量查看变异"><a href="#IGV批量查看变异" class="headerlink" title="IGV批量查看变异"></a>IGV批量查看变异</h1><h2 id="生成批量查看-bat文件"><a href="#生成批量查看-bat文件" class="headerlink" title="生成批量查看.bat文件"></a>生成批量查看.bat文件</h2><p>IGV批量运行的.bat文件命令参数及例子：<a href="http://software.broadinstitute.org/software/igv/PortCommands" target="_blank" rel="external">Controlling IGV through a Port</a> ,&emsp;&emsp; <a href="http://software.broadinstitute.org/software/igv/batch" target="_blank" rel="external">a batch file example</a> &emsp;&emsp; <a href="https://github.com/stevekm/IGV-snapshot-automator" target="_blank" rel="external">IGV-snapshot-automator项目</a></p>
<p>使用命令：<br>    java -Xmx1024M -jar ~/bin/igv-2.3.52/igv.jar -b IGV_screenshot.bat</p>
<h1 id="NVC-Viewer使用"><a href="#NVC-Viewer使用" class="headerlink" title="NVC Viewer使用"></a>NVC Viewer使用</h1><p>&emsp;&emsp;VNC (Virtual Network Console)是虚拟网络控制台的缩写。它 是一款优秀的远程控制工具软件，由著名的 AT&amp;T 的欧洲研究实验室开发的。VNC 是在基于 UNIX 和 Linux 操作系统的免费的开源软件。VNC基本上是由两部分组成：一部分是客户端的应用程序(vncviewer)；另外一部分是服务器端的应用程序(vncserver)。<a href="https://www.realvnc.com/en/connect/download/viewer/" target="_blank" rel="external">Download VNC Viewer </a></p>
<p>工作流程：</p>
<ol>
<li>服务器端启动VNC Server，使用命令vncserver,之后输入密码并确认，之后获得数字1，表示vncserver创建的第一个vnc viewer用户；</li>
<li>在win7的客户端创建连接即可</li>
</ol>
<p><img src="https://i.imgur.com/qnCN4Vt.jpg" alt=""></p>
<p>之后点击igv.sh运行igv,在Tools的Run Batch Script，导入.bat文件即可！</p>
<h1 id="变异的过滤"><a href="#变异的过滤" class="headerlink" title="变异的过滤"></a>变异的过滤</h1><p>&emsp;&emsp;在对Func.refGene，ExonicFunc.refGene，1000g2015aug_eas等进行hard filter后，一般全外显子测序找到的突变依然还有一两百个，接下来需要通过直观的可视化，验证SNP/SNV calls和结构重排，进一步去除假阳性的结果。<a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/IGV-Tutorial" target="_blank" rel="external">IGV Tutorial（推荐）</a></p>
<h2 id="查看技巧"><a href="#查看技巧" class="headerlink" title="查看技巧"></a>查看技巧</h2><ol>
<li>File—&gt;Load from Server可以加载许多tracks</li>
</ol>
<p><img src="https://i.imgur.com/Okk9sPp.jpg" alt=""></p>
<ol>
<li>在reads区右键可以选择不同的查看方式</li>
</ol>
<p><img src="https://i.imgur.com/SeQvjJ9.jpg" alt=""></p>
<h2 id="过滤标准"><a href="#过滤标准" class="headerlink" title="过滤标准"></a>过滤标准</h2><ol>
<li>高质量的SNVs和SNPs要求在所有的reas中High base qualities，并且不能在reads的末端；</li>
<li>Good mapping quality of reads, no strand bias, allele frequency consistent with heterozygous mutation</li>
</ol>
<h3 id="Important-metrics-for-evaluating-the-validity-of-SNVs"><a href="#Important-metrics-for-evaluating-the-validity-of-SNVs" class="headerlink" title="Important    metrics    for    evaluating    the    validity of    SNVs:"></a>Important    metrics    for    evaluating    the    validity of    SNVs:</h3><ul>
<li>Coverage    </li>
<li>Amount  of     support    </li>
<li>Strand     bias    /    PCR    artifacts    </li>
<li>Mapping    qualities    </li>
<li>Base    qualities    </li>
</ul>
<ol>
<li>通过Coverage track查看比对情况，没有比对上参考基因组的碱基将在Coverage track和data panel以不同颜色高亮显示；</li>
</ol>
<p><img src="https://i.imgur.com/5dNcVPB.jpg" alt=""></p>
<ol>
<li>低质量的碱基calls是半透明的（faint,semi-transparent）</li>
</ol>
<p><img src="https://i.imgur.com/OYSyAsZ.png" alt=""></p>
<h3 id="区分SNP突变和错配："><a href="#区分SNP突变和错配：" class="headerlink" title="区分SNP突变和错配："></a>区分SNP突变和错配：</h3><ol>
<li>SNP突变如果是杂合，会在Coverage track处显示红蓝box,当鼠标悬停在上面时显示allele counts 和frequencies。可以在此处右键，选择sort alignments by &gt; base查看，以此根据碱基的透明度确定SNP碱基call的质量；</li>
</ol>
<p><img src="https://i.imgur.com/A5XUxR9.jpg" alt=""></p>
<ol>
<li>而错配的情况在在Coverage track处是没有红蓝box的。通过在此处右键，选择shade base by quality使得用半透明颜色表示的低质量碱基全部高亮显示，方便查看；接着选择Sort alignments by &gt; read strand，然后Color alignments by &gt; read strand，以此确定是否存在stand bias。</li>
</ol>
<p><img src="https://i.imgur.com/vgCysAl.png" alt=""></p>
<p><img src="https://i.imgur.com/Cu5w71N.png" alt=""></p>
<p><img src="https://i.imgur.com/HlMwp7F.png" alt=""></p>
<h3 id="Important-metrics-for-evaluating-SVs"><a href="#Important-metrics-for-evaluating-SVs" class="headerlink" title="Important    metrics    for    evaluating    SVs:"></a>Important    metrics    for    evaluating    SVs:</h3><ul>
<li>Coverage    </li>
<li>Insert    size    </li>
<li>Read    pair orientation</li>
</ul>
<p>具体使用可查看：<a href="https://github.com/griffithlab/rnaseq_tutorial/wiki/LectureFiles/cshl/2016/IGV_Tutorial_Long_BroadInstitute.pdf" target="_blank" rel="external">IGV Lecture - Long, from Broad Institute    </a>，<strong>也包括了查看RNA-seq比对情况的操作</strong></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://www.cnblogs.com/leezx/p/5603481.html" target="_blank" rel="external">可视化工具之 IGV 使用方法</a></p>
<p>（2）<a href="https://gist.github.com/dfjenkins3/5c6dc1e55e78fa17b931" target="_blank" rel="external">IGV_Batch_Screenshots.md</a></p>
<p>（3）<a href="http://blog.csdn.net/Bingorl/article/details/78289280?locationNum=8&amp;fps=1" target="_blank" rel="external">如何使用VNC Viewer连接远程CentOS服务器</a></p>
<p>（4）<a href="https://www.biostars.org/p/5563/" target="_blank" rel="external">Quick Visual Inspection Of Mapping Images For A List Of Regions</a></p>
<p>（5）<a href="https://github.com/igvteam/igv/issues/160" target="_blank" rel="external">Unable to adjust image height via batch script </a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;IGV批量查看变异并过滤&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>设计miRNA的qPCR引物</title>
    <link href="https:///AnJingwd.github.io/2018/01/24/%E8%AE%BE%E8%AE%A1miRNA%E7%9A%84qPCR%E5%BC%95%E7%89%A9/"/>
    <id>https:///AnJingwd.github.io/2018/01/24/设计miRNA的qPCR引物/</id>
    <published>2018-01-24T02:01:15.000Z</published>
    <updated>2018-01-25T01:04:07.551Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">在线设计miRNA的qPCR引物</blockquote>

<a id="more"></a>
<h1 id="miRNA简介"><a href="#miRNA简介" class="headerlink" title="miRNA简介"></a>miRNA简介</h1><p>&emsp;&emsp;microRNAs(miRNAs)是指长度在20-24nt的非编码RNAs,其可通过影响转录的mRNAs的转录和稳定性，参与细胞组织的转录后基因表达调控。miRNAs由RNA聚合酶II转录为带帽子和多聚腺苷酸的初级转录物（pri-miRNA）的一部分（有的编码蛋白，有的是非编码的）。初级转录物被Drosha核糖核酸酶III切割产生大约70nt的茎环前体miRNA(pre-miRNA)，其被细胞质Dicer 核糖核酸酶裂解产生成熟的miRNA和反义miRNA star(miRNA*)。成熟的miRNA包含在RNA诱导的沉默复合物（RISC)中。通过不完全的碱基配对，其能够识别靶标mRNA的3’端，并通常导致的结果是翻译被抑制或者靶标mRNA的去稳定化。RefSeq代表预测的microRNA的茎环结构。</p>
<p>miRNA主要公共数据库<a href="http://www.mirbase.org/" target="_blank" rel="external">miRBase</a>中已经有1W多条来自不同物种的miRNA序列</p>
<p><img src="https://i.imgur.com/qfASLJU.jpg" alt=""></p>
<h1 id="miRNA检测引物设计"><a href="#miRNA检测引物设计" class="headerlink" title="miRNA检测引物设计"></a>miRNA检测引物设计</h1><p>引物有两种类型，一个是poly加尾，一个是加茎环结构。PCR荧光定量又分为探针法和染料法：</p>
<ol>
<li>Poly方法的话，引物设计简单，但是引起非特异性扩增的可能性大。</li>
<li>探针法特异性更高，但是价格高，不适合大批量的实验。</li>
</ol>
<h2 id="加Poly方法"><a href="#加Poly方法" class="headerlink" title="加Poly方法"></a>加Poly方法</h2><p>miRNA qRT-PCR Detection Kit中已提供有miRNA检测的Reverse 通用引物：“Universal adaptor PCR Primer”，Forward 检测引物需客户参考miRNA序列自行设计。因为miRNA序列长度一般都在18～24nt之间，所以其检测的Forward 检测引物一般都直接选用其miRNA序列或为增加其检测的特异性而特殊设计的序列：如有的miRNA GC含量偏高或引物易形成引物二聚体，其引物可为miRNA 3’端去除几个碱基后整理的序列。</p>
<p>miRNA qPCR Forward Primer 设计举例（以小鼠mmu-miR-125b-5p为例）：<br>在miRNA Database中查找检测的miRNA序列，如下图所示：<a href="http://www.mirbase.org/cgi-bin/mature.pl?mature_acc=MIMAT0000136" target="_blank" rel="external">miRNA Database</a></p>
<p><img src="https://i.imgur.com/a8j33ex.jpg" alt=""></p>
<p><strong>如果不确定5p或者3p哪一个有功能，要么都设计，要么参考Previous IDs并查阅文献</strong></p>
<p>则其Forward 检测引物可为：</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Sequences</th>
</tr>
</thead>
<tbody>
<tr>
<td>miRNA 成熟序列</td>
<td>ucccugagacccuaacuuguga</td>
</tr>
<tr>
<td>上游引物序列</td>
<td>tccctgagaccctaacttgtga （Tm：58.8）</td>
</tr>
</tbody>
</table>
<p>通用序列是：5′-GCTGTCAACGATACGCTACGTAACG-3′，也就是下游引物序列，内参一般使用U6基因：</p>
<ul>
<li>U6-Control-F 5＇ -CTCGCTTCGGCAGCACA-3＇</li>
<li>U6-Control-R 5＇ -AACGCTTCACGAATTTGCGT-3＇</li>
</ul>
<p><strong>最后，需要检测下引物对的几个参数</strong></p>
<p>NCBI 的<a href="https://www.ncbi.nlm.nih.gov/tools/primer-blast/" target="_blank" rel="external">Primer-BLAST</a>工具</p>
<p>在Primer Parameters 中分别输入上下游引物，在Primer Pair Specificity Checking Parameters 的Database 中选择相应模板类型（这里我选择Refseq mRNA)，将Organism 的物种改成Mus (taxid:10088)，即小鼠。然后点击左下角的Get Primers就可以得到比对结果。</p>
<ul>
<li>结果中主要看看是否有目的基因以外的基因出现，如果其它的基因也可以扩增出来，那说明引物特异性不好，可将引物返回我们再重新设计</li>
<li>如果出现的非目的条带和目的条带大小相差较大，可忽略不计，因为PCR扩增程序中延伸时间的限制，这种非目的条带扩增不出来。</li>
<li>另外，有些非目的条带和引物之间有四五个碱基不能互补配对，一般是扩增不出来的，尤其是这种不能互补的碱基在引物的3’端时，扩增不出的可能性更大。</li>
</ul>
<p><img src="https://i.imgur.com/c9BYFJe.jpg" alt=""></p>
<ol>
<li>Tm 融链温度 这个最关键，主要还是看这个，内参基因U6的Tm值为60，所以设计的上游引物也尽量在这个温度左右。通用引物做一些优化后为GCTGTCAACGATACGCTACCTA(去掉右端的剩下22个碱基，保持与大多成熟miRNA长度一致，然后将右端第三位的G改为C，降低通用引物的Self complementarity)。</li>
</ol>
<p><img src="https://i.imgur.com/Q6Fm06U.png" alt=""></p>
<p><strong>设计过程中，通过对上游引物5’端加1-3个GC碱基或者对上游引物3’端去除几个碱基使上游引物Tm值也在60左右即可！！！</strong></p>
<ol>
<li>GC%值 这个标准的话是45-50左右，但是主要还是服从于调整Tm值。</li>
<li>Self complementarity 贴吧里说的是越低越好，我有一条引物的值为9，打算让生工重新设计，但是生工的MM说了，miRNA他的要求跟别的普通的要求不一样，好吧</li>
<li><strong>最重要的特异性扩增问题：miRNA是不用检测特异性的，可以直接使用的。</strong></li>
</ol>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://wenku.baidu.com/view/882b5c2b2f60ddccda38a087.html" target="_blank" rel="external">miRNA命名规范</a></p>
<p>（2）<a href="http://www.dxy.cn/bbs/topic/17332608" target="_blank" rel="external">miRNA用荧光定量PCR检测的流程以及汇总 [推荐]</a></p>
<p>（3）<a href="https://jingyan.baidu.com/article/b0b63dbf19baf74a483070c8.html" target="_blank" rel="external">如何在pubmed中设计QPCR引物？</a></p>
<p>（4）<a href="http://www.dxy.cn/bbs/thread/30911259#30911259" target="_blank" rel="external">MiRNA 引物设计与合成总结</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;在线设计miRNA的qPCR引物&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>批量生成与提交shell脚本</title>
    <link href="https:///AnJingwd.github.io/2018/01/21/%E6%89%B9%E9%87%8F%E7%94%9F%E6%88%90%E4%B8%8E%E6%8F%90%E4%BA%A4shell%E8%84%9A%E6%9C%AC/"/>
    <id>https:///AnJingwd.github.io/2018/01/21/批量生成与提交shell脚本/</id>
    <published>2018-01-21T02:15:40.000Z</published>
    <updated>2018-01-21T05:23:53.678Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">批量生成与提交shell脚本</blockquote>

<a id="more"></a>
<p>同一分析流程的shell脚本，通过替换样本参数，批量生成每个样本单独的piplines，从而实现批量提交，批量运行，在样本多的时候适用。</p>
<h1 id="批量生成shell脚本"><a href="#批量生成shell脚本" class="headerlink" title="批量生成shell脚本"></a>批量生成shell脚本</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#creat_multi_piplines.py</span></div><div class="line"></div><div class="line">  <span class="number">1</span> <span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line">  <span class="number">2</span> <span class="comment">#!/home/wangdong/python/python27/bin/python2.7</span></div><div class="line">  <span class="number">3</span> </div><div class="line">  <span class="number">4</span> <span class="keyword">import</span> argparse,os,re,sys</div><div class="line">  <span class="number">5</span> </div><div class="line">  <span class="number">6</span> <span class="comment">#import parameters</span></div><div class="line">  <span class="number">7</span> parser = argparse.ArgumentParser(description=<span class="string">'manual to this script'</span>)</div><div class="line">  <span class="number">8</span> parser.add_argument(<span class="string">'--pipline_file'</span>, type=str, default=<span class="keyword">None</span>)</div><div class="line">  <span class="number">9</span> parser.add_argument(<span class="string">'--info_file'</span>, type=str, default=<span class="keyword">None</span>)</div><div class="line"> <span class="number">10</span> parser.add_argument(<span class="string">'--result_dir'</span>, type=str, default=<span class="keyword">None</span>)</div><div class="line"> <span class="number">11</span> args = parser.parse_args()</div><div class="line"> <span class="number">12</span> </div><div class="line"> <span class="number">13</span> </div><div class="line"> <span class="number">14</span> <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(args.result_dir):</div><div class="line"> <span class="number">15</span> &gt;---os.mkdir(args.result_dir)</div><div class="line"> <span class="number">16</span> </div><div class="line"> <span class="number">17</span> sample_pair = &#123;&#125;</div><div class="line"> <span class="number">18</span> <span class="keyword">with</span> open(args.info_file) <span class="keyword">as</span> f1:</div><div class="line"> <span class="number">19</span> &gt;---<span class="keyword">for</span> line <span class="keyword">in</span> f1:</div><div class="line"> 20 &gt;---&gt;---line = line.strip()</div><div class="line"> 21 &gt;---&gt;---mylist = line.split('\t')</div><div class="line"> 22 &gt;---&gt;---sample_pair[mylist[1]] = [mylist[0],mylist[2]]</div><div class="line"> <span class="number">23</span> </div><div class="line"> <span class="number">24</span> </div><div class="line"> <span class="number">25</span> <span class="keyword">for</span> key <span class="keyword">in</span> sample_pair:</div><div class="line"> <span class="number">26</span> &gt;---new_pip_file_name = <span class="string">"&#123;&#125;.sh"</span>.format(key)</div><div class="line"> <span class="number">27</span> &gt;---result_file = open(os.path.join(args.result_dir,new_pip_file_name),<span class="string">'w'</span>)</div><div class="line"> <span class="number">28</span> &gt;---<span class="keyword">with</span> open(args.pipline_file,<span class="string">'r'</span>) <span class="keyword">as</span> f2:</div><div class="line"> 29 &gt;---&gt;---for line in f2:</div><div class="line"> 30 &gt;---&gt;---&gt;---line = re.sub("MY_SAMPLE_ID_2017", str(sample_pair[key][0]), str(line))</div><div class="line"> 31 &gt;---&gt;---&gt;---line = re.sub("MY_SAMPLE_ID_2018", str(sample_pair[key][1]), str(line))</div><div class="line"> 32 &gt;---&gt;---&gt;---line = re.sub("MY_LIBRARY_ID", str(key), str(line))</div><div class="line"> 33 &gt;---&gt;---&gt;---result_file.write(line)</div><div class="line"> <span class="number">34</span> &gt;---result_file.close()</div><div class="line"> <span class="number">35</span> &gt;---chmod_commond = <span class="string">"chmod +x &#123;&#125;"</span>.format(os.path.join(args.result_dir, new_pip_file_name))</div><div class="line"> <span class="number">36</span> &gt;---os.system(chmod_commond)</div><div class="line"> <span class="number">37</span> </div><div class="line"> <span class="number">38</span> </div><div class="line"> <span class="number">39</span> </div><div class="line"> <span class="number">40</span> <span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"> <span class="number">41</span> &gt;---print(<span class="string">'well done!'</span>)</div></pre></td></tr></table></figure>
<h1 id="批量提交shell脚本"><a href="#批量提交shell脚本" class="headerlink" title="批量提交shell脚本"></a>批量提交shell脚本</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#submit_multi_work.sh</span></div><div class="line"></div><div class="line">  1 <span class="comment">####################</span></div><div class="line">  2 <span class="comment">###function###</span></div><div class="line">  3 <span class="comment">#submit_multi_work</span></div><div class="line">  4 <span class="comment">####data####</span></div><div class="line">  5 <span class="comment">#20180121</span></div><div class="line">  6 <span class="comment">####use#####</span></div><div class="line">  7 <span class="built_in">echo</span> <span class="string">"usage: ./submit_multi_work.sh tasks_list.txt "</span></div><div class="line">  8                                              </div><div class="line">  9 <span class="comment">####################           </span></div><div class="line"> 10 <span class="comment">#!/bin/bash                       </span></div><div class="line"> 11 <span class="built_in">set</span> -u                           </div><div class="line"> 12 <span class="built_in">set</span> -e    </div><div class="line"> 13 <span class="built_in">set</span> -o pipefail</div><div class="line"> 14           </div><div class="line"> 15 <span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">""</span> ] ; <span class="keyword">then</span></div><div class="line"> 16 &gt;---<span class="built_in">echo</span> <span class="string">"Bad command. No tasklist file been appointed. Right format: <span class="variable">$0</span> tasks_list.txt"</span></div><div class="line"> 17 &gt;---<span class="built_in">exit</span> 1</div><div class="line"> 18 <span class="keyword">fi</span></div><div class="line"> 19 tasks_num=`cat <span class="variable">$1</span>|wc -l`</div><div class="line"> 20 <span class="built_in">echo</span> <span class="string">"total tasks founded:<span class="variable">$tasks_num</span>"</span></div><div class="line"> 21 <span class="built_in">echo</span> <span class="string">"Now begin running....."</span></div><div class="line"> 22 mix_tasks=6  <span class="comment">#set mix tasks to assign</span></div><div class="line"> 23 cat <span class="variable">$1</span>|<span class="keyword">while</span> <span class="built_in">read</span> line</div><div class="line"> 24 <span class="keyword">do</span></div><div class="line"> 25 &gt;---tasks=`ps -u wangdong |grep -w <span class="string">'sh'</span> | wc -l`</div><div class="line"> 26 &gt;---<span class="keyword">while</span> [ <span class="variable">$tasks</span> -gt <span class="variable">$mix_tasks</span> ]</div><div class="line"> 27 &gt;---&gt;---<span class="keyword">do</span></div><div class="line"> 28 &gt;---&gt;---sleep 20</div><div class="line"> 29 &gt;---&gt;---&gt;---<span class="built_in">echo</span> <span class="string">"task is running"</span></div><div class="line"> 30 &gt;---&gt;---&gt;---tasks=`ps -u wangdong |grep -w <span class="string">'sh'</span> | wc -l`</div><div class="line"> 31 &gt;---&gt;---<span class="keyword">done</span></div><div class="line"> 32 &gt;---<span class="variable">$line</span>  <span class="comment"># run the COMMOND in tasklist</span></div><div class="line"> 33 &gt;---<span class="built_in">echo</span> <span class="string">"running <span class="variable">$line</span>"</span>~~</div><div class="line"> 34 &gt;---sleep 5</div><div class="line"> 35 <span class="keyword">done</span>~~</div><div class="line"> 36 <span class="built_in">echo</span> <span class="string">"end."</span>~</div><div class="line"></div><div class="line"><span class="comment">#tasks_list.txt</span></div><div class="line"></div><div class="line">  1 nohup /home/wangdong/projects/project4/piplines/oi_capture_process_sh/oi_1.sh &gt; oi_1.logfile 2&gt;&amp;1 &amp;</div><div class="line">  2 nohup /home/wangdong/projects/project4/piplines/oi_capture_process_sh/oi_2.sh &gt; oi_2.logfile 2&gt;&amp;1 &amp;</div><div class="line">  3 nohup /home/wangdong/projects/project4/piplines/oi_capture_process_sh/oi_3.sh &gt; oi_3.logfile 2&gt;&amp;1 &amp;</div><div class="line"></div><div class="line"><span class="comment">#run the submit_multi_work.sh</span></div><div class="line"></div><div class="line">    ./submit_multi_work.sh tasks_list.txt &gt; batchRun.log &amp;</div><div class="line"></div><div class="line"><span class="comment">#simple commond </span></div><div class="line"></div><div class="line">    cat task_list.txt |<span class="keyword">while</span> <span class="built_in">read</span> line;<span class="keyword">do</span> <span class="variable">$line</span>;<span class="keyword">done</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;批量生成与提交shell脚本&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术" scheme="https:///AnJingwd.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="https:///AnJingwd.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>ANNOVAR进行突变注释</title>
    <link href="https:///AnJingwd.github.io/2018/01/20/ANNOVAR%E8%BF%9B%E8%A1%8C%E7%AA%81%E5%8F%98%E6%B3%A8%E9%87%8A/"/>
    <id>https:///AnJingwd.github.io/2018/01/20/ANNOVAR进行突变注释/</id>
    <published>2018-01-20T13:50:21.000Z</published>
    <updated>2018-01-21T01:53:20.743Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">ANNOVAR进行突变注释</blockquote>

<a id="more"></a>
<h1 id="ANNOVAR简介"><a href="#ANNOVAR简介" class="headerlink" title="ANNOVAR简介"></a>ANNOVAR简介</h1><p><a href="http://annovar.openbioinformatics.org/en/latest/" target="_blank" rel="external">ANNOVAR Documentation</a>  &emsp;&emsp; ANNOVAR其网页版<a href="http://wannovar.wglab.org/" target="_blank" rel="external">wANNOVAR</a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4718734/bin/NIHMS751006-supplement-Supplementary_Text_and_Figures.pdf" target="_blank" rel="external">Comparison between ANNOVAR and other command line tools for variant annotation</a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4718734/bin/NIHMS751006-supplement-Supplementary_Text_and_Figures.pdf" target="_blank" rel="external">Comparison between ANNOVAR and other command line tools for variant annotation</a></p>
<p>&emsp;&emsp;例如对于人的外显子组测序，可以获得4百万个SNVs(单核苷酸突变)和50万个indels(insertion or deletions)突变。对于基因间区的突变，我们对其侧翼基因感兴趣，并想知道两者之间距离；对于外显子区域的变异，我们关系其对于氨基酸的改变。</p>
<p>&emsp;&emsp;ANNOVAR是一个perl编写的命令行工具，能对<strong>根据hg18,hg19,hg38不同版本基因组call 出来的遗传变异</strong>进行功能注释。允许多种输入文件格式，包括最常被使用的VCF格式，只需要给出chromosome, start position, end position, reference nucleotide and observed nucleotides这6个字段。输出文件也有多种格式，包括注释过的VCF文件、用tab或者逗号分隔的text文件。</p>
<p>&emsp;&emsp;ANNOVAR支持三种不同形式的注释： gene-based, region-based 和filter-based. 这三种注释分别针对于每一个variant的不同方面：</p>
<p><img src="https://i.imgur.com/UGMNkMZ.jpg" alt=""></p>
<ul>
<li>基于基因的注释（gene-based annotation）：SNPs或者CNV变异是否造成编码蛋白氨基酸的改变或者影响；</li>
<li>基于区域的注释（region-based annotation）揭示variant 与不同基因组特定区域的关系，例如：它是否与以下区域有overlap: conserved genomic elements，cytogenetic bands, microRNA target sites和Encyclopedia of DNA Elements (ENCODE)-annotated regions等</li>
<li>基于过滤的注释（ filter-based annotation ）则给出这个variant的一系列信息，例如是否该变异在dbSNP数据库报道过，该变异在1000genome项目，外显子组项目中的频率等，以及不同的计算机算法对变异注释的结果（SIFT/PolyPhen/LRT/MutationTaster/MutationAssessor/FATHMM/MetaSVM/MetaLR scores）等</li>
</ul>
<h1 id="下载（无需安转，但需要安装perl环境）"><a href="#下载（无需安转，但需要安装perl环境）" class="headerlink" title="下载（无需安转，但需要安装perl环境）"></a>下载（无需安转，但需要安装perl环境）</h1><p>最新版官网：<a href="http://annovar.openbioinformatics.org/en/latest/" target="_blank" rel="external">网址</a></p>
<pre><code>untargz annovar.latest.tar.gz
echo &apos;export PATH=/home/wangdong/softwares/annovar/annovar_latest&apos;&gt;&gt;~/.bashrc
</code></pre><p>使用ANNOVAR进行突变注释时，gene definition files(例如GTF文件) 和transcript FASTA files（FASTA文件）版本需要同步对应，否则可能会出现mis-annotated variants (such as annotating SNVs as<br>indels)</p>
<h1 id="常用注释数据库下载"><a href="#常用注释数据库下载" class="headerlink" title="常用注释数据库下载"></a>常用注释数据库下载</h1><ol>
<li><p>注释文件在ANNOVER分For gene-based annotation和For filter-based annotation以列表的形式详细介绍，<a href="http://annovar.openbioinformatics.org/en/latest/user-guide/download/" target="_blank" rel="external">链接</a></p>
<p> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 refGene humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 1000g2015aug humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 exac03 humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 clinvar_20170905 humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 avsnp150 humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 cosmic70 humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 icgc21 humandb/<br> perl annotate_variation.pl –downdb –webfrom annovar –buildver hg19 nci60 humandb/</p>
</li>
</ol>
<p>这里下载的是几个通常用到的数据库的最新版：</p>
<table>
<thead>
<tr>
<th>Build</th>
<th>Table  Name</th>
<th>Explanation</th>
<th>Date</th>
</tr>
</thead>
<tbody>
<tr>
<td>hg19</td>
<td>refGene</td>
<td>FASTA sequences for all annotated transcripts in RefSeq Gene</td>
<td>20170601</td>
</tr>
<tr>
<td>hg19</td>
<td>1000g2015aug (6 data sets)</td>
<td>The 1000G team fixed a bug in chrX frequency calculation. Based on 201508 collection v5b (based on 201305 alignment)</td>
<td>20150824</td>
</tr>
<tr>
<td>hg19</td>
<td>exac03</td>
<td>ExAC 65000 exome allele frequency data for ALL, AFR (African), AMR (Admixed American), EAS (East Asian), FIN (Finnish), NFE (Non-finnish European), OTH (other), SAS (South Asian)). version 0.3. Left normalization done.</td>
<td>20151129</td>
</tr>
<tr>
<td>hg19</td>
<td>clinvar_20170905</td>
<td>Clinvar version 20170905 with separate columns (CLINSIG CLNDBN CLNACC CLNDSDB CLNDSDBID)</td>
<td>20171003</td>
</tr>
<tr>
<td>hg19</td>
<td>avsnp150</td>
<td>dbSNP150 with allelic splitting and left-normalization</td>
<td>20170929</td>
</tr>
<tr>
<td>hg19</td>
<td>cosmic70</td>
<td>COSMIC database version 70</td>
<td>20140911</td>
</tr>
<tr>
<td>hg19</td>
<td>icgc21</td>
<td>International Cancer Genome Consortium version 21</td>
<td>20160622</td>
</tr>
<tr>
<td>hg19</td>
<td>nci60</td>
<td>NCI-60 human tumor cell line panel exome sequencing allele frequency data</td>
<td>20130724</td>
</tr>
</tbody>
</table>
<ul>
<li>‘1000g2015aug’(version  August 2015), 是2015年版，包含6个 data sets，提供千人基因组项目的替换等位基因频率等信息。</li>
<li>‘exac03’(version 0.3),是0.3版外显子Exome Aggregation Consortium中报道过的variants。</li>
<li>‘clinvar_20140929’ for the variants reported in the ClinVar database (version 20140929)，ClinVar数据库整合了十多个不同类型数据库、通过标准的命名法来描述疾病，同时支持科研人员将数据下载到本地中，开展更为个性化的研究。<strong>ClinVar数据库的目的在于整合这些分散的数据、将变异、临床表型、实证数据以及功能注解与分析等四个方面的信息，通过专家评审，逐步形成一个标准的、可信的、稳定的遗传变异-临床表型相关的数据库。</strong></li>
</ul>
<ol>
<li>基于保守基因组元件注释数据文件，每一个在ANNOVAR说明文档都有详细介绍，<a href="http://annovar.openbioinformatics.org/en/latest/user-guide/region/#overview" target="_blank" rel="external">链接地址</a>，这里我们也只下载常用的即可。</li>
</ol>
<pre><code>perl annotate_variation.pl --downdb --buildver hg19 cytoBand humandb/ 
perl annotate_variation.pl -build hg19 -downdb gwasCatalog humandb/
</code></pre><ul>
<li>‘cytoBand’ 是每个细胞间band（cytogenetic band）的染色体坐标信息 ,</li>
</ul>
<p>注意：</p>
<p>1、第一个命令中不包含 ‘–webfrom annovar’ 选项, 因此是从the UCSC Genome Browser annotation database下载文件的； </p>
<p>2、 ‘–buildver hg19’ 选项是针对hg19这一版的基因组的；</p>
<p>3、运行上面命令后，在 ‘humandb/’ 目录下会多几个以 ‘hg19’为前缀的文件。 </p>
<h1 id="变异注释"><a href="#变异注释" class="headerlink" title="变异注释"></a>变异注释</h1><h2 id="ANNOVER-input-file"><a href="#ANNOVER-input-file" class="headerlink" title="ANNOVER input file"></a>ANNOVER input file</h2><p>ANNOVER的输入文件要求VCF 4.0及以上，这一要求对于绝大多数call 变异的软件，如GATK何SAMtools都是满足的。<a href="http://vcftools.sourceforge.net/specs.html" target="_blank" rel="external">VCF (Variant Call Format) specifications （包括 VCF4.0，4.1，4.2，以及BCF v2.1）
</a></p>
<h2 id="对于ANNOVAR新手，最方便使用table-annovar-pl程序"><a href="#对于ANNOVAR新手，最方便使用table-annovar-pl程序" class="headerlink" title="对于ANNOVAR新手，最方便使用table_annovar.pl程序"></a>对于ANNOVAR新手，最方便使用table_annovar.pl程序</h2><pre><code>table_annovar.pl example/ex1.avinput humandb/ -buildver hg19 -out myanno -remove -protocol refGene,cytoBand,exac03,avsnp147,dbnsfp30a -operation gx,r,f,f,f -nastring . -csvout -polish -xref example/gene_xref.txt
</code></pre><h3 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h3><ul>
<li>-buildver hg19 ANNOVAR默认注释是根据hg18的，所以这里需要指定hg19。</li>
<li>-out myanno 输出注释结果文件myanno.hg19_multianno.txt</li>
<li>-operation g表示gene-based；-operation gx 表示 gene-based with cross-reference annotation (from -xref argument)；-operation r 表示region-based； -operation f 表示 filter-based。如果不提供xref文件就只能指定-operation g。</li>
<li>-csvout使用逗号输出，如果喜欢使用tab键输出，则只需要去除 -csvout</li>
</ul>
<h2 id="annotate-variation-pl是-ANNOVAR的核心程序"><a href="#annotate-variation-pl是-ANNOVAR的核心程序" class="headerlink" title="annotate_variation.pl是 ANNOVAR的核心程序"></a>annotate_variation.pl是 ANNOVAR的核心程序</h2><p>使用例子：</p>
<pre><code>annotate_variation.pl -geneanno -dbtyep refGene -out ex1 -buildver hg19 example/ex1.avinput humandb/
annotate_variation.pl -regionanno -dbtype cytoBand -buildver hg19 example/ex1.avinput humandb/ 
annotate_variation.pl -filter -dbtype exac03 -buildver hg19 example/ex1.avinput humandb/
</code></pre><h3 id="参数解释及技术问题"><a href="#参数解释及技术问题" class="headerlink" title="参数解释及技术问题"></a>参数解释及技术问题</h3><ul>
<li><p>–geneanno -dbtype refGene是默认的，可以省略</p>
</li>
<li><p><strong>ncRNA above refers to RNA without coding annotation. It does not mean that this is a RNA that will never be translated.</strong> For example, BC039000 is regarded as ncRNA by ANNOVAR when using UCSC Known Gene annotation, but it is regarded as a protein-coding gene by ANNOVAR when using ENSEMBL annotation</p>
</li>
<li>By default, the gene name is printed in the second column in the variant_function file. Sometimes, a user may want to see <strong>transcript name instead. The –transcript_function argument can be used to specify this behavior</strong>. Note that it is very likely that multiple transcript names will be printed in the output separated by comma, as each gene name typically corresponds to several transcript names</li>
</ul>
<h1 id="注释结果解释"><a href="#注释结果解释" class="headerlink" title="注释结果解释"></a>注释结果解释</h1><h2 id="表头含义"><a href="#表头含义" class="headerlink" title="表头含义"></a>表头含义</h2><p><img src="https://i.imgur.com/mjzONDT.jpg" alt=""></p>
<p><img src="https://i.imgur.com/rISPcMC.jpg" alt=""></p>
<h2 id="各列内容及含义"><a href="#各列内容及含义" class="headerlink" title="各列内容及含义"></a>各列内容及含义</h2><ul>
<li>Func.refGene, Gene.refGene, GeneDetail.refGene, ExonicFunc.refGene, AAChange.refGene列包含变异对基因结构的影响。其中如果Func.refGene给出注释显示该变异位于exonic/intronic/ncRNA，那么Gene.refGene列给出相应的基因名（如果是多个基因，中间用逗号分割）；如果不是，则给出该变异侧翼两个基因及与其距离。</li>
<li>ExAC* 等列表示在外显子组项目（Exome Aggregation Consortium）数据集中所有样本，包括亚人种中的等位基因频率。</li>
<li>avsnp138 列该变异在dbSNP（version 138）数据集中的SNP 的ID号</li>
<li>其他列包含使用多个变异功能预测软件得到的预测分数，包括SIFT scores, PolyPhen2 HDIV scores, PolyPhen2 HVAR scores, LRT scores, MutationTaster scores, MutationAssessor score, FATHMM scores, GERP++ scores, CADD scores, DANN scores, PhyloP scores and SiPhy scores等。</li>
</ul>
<h2 id="Func-refGene列具体含义"><a href="#Func-refGene列具体含义" class="headerlink" title="Func.refGene列具体含义"></a>Func.refGene列具体含义</h2><table>
<thead>
<tr>
<th>Value</th>
<th>Default precedence</th>
<th>Explanation</th>
<th>Sequence Ontology</th>
</tr>
</thead>
<tbody>
<tr>
<td>exonic</td>
<td>1</td>
<td>variant overlaps a coding</td>
<td>exon_variant (SO:0001791)</td>
</tr>
<tr>
<td>splicing</td>
<td>1</td>
<td>variant is within 2-bp of a splicing junction (use -splicing_threshold to change this)</td>
<td>splicing_variant (SO:0001568)</td>
</tr>
<tr>
<td>ncRNA</td>
<td>2</td>
<td>variant overlaps a transcript without coding annotation in the gene definition (see Notes below for more explanation)</td>
<td>non_coding_transcript_variant (SO:0001619)</td>
</tr>
<tr>
<td>UTR5</td>
<td>3</td>
<td>variant overlaps a 5’ untranslated region</td>
<td>5_prime_UTR_variant (SO:0001623)</td>
</tr>
<tr>
<td>UTR3</td>
<td>3</td>
<td>variant overlaps a 3’ untranslated region</td>
<td>3_prime_UTR_variant (SO:0001624)</td>
</tr>
<tr>
<td>intronic</td>
<td>4</td>
<td>variant overlaps an intron</td>
<td>intron_variant (SO:0001627)</td>
</tr>
<tr>
<td>upstream</td>
<td>5</td>
<td><strong>variant overlaps 1-kb region upstream of transcription start site</strong></td>
<td>upstream_gene_variant (SO:0001631)</td>
</tr>
<tr>
<td>downstream</td>
<td>5</td>
<td><strong>variant overlaps 1-kb region downtream of transcription end site (use -neargene to change this)</strong></td>
<td>downstream_gene_variant (SO:0001632)</td>
</tr>
<tr>
<td>intergenic</td>
<td>6</td>
<td>variant is in intergenic region</td>
<td>intergenic_variant (SO:0001628)</td>
</tr>
</tbody>
</table>
<p><strong>The precedence defined above is used to decide what function to print out when a variant fit multiple functional categories</strong></p>
<h2 id="ExonicFunc-refGene列具体含义"><a href="#ExonicFunc-refGene列具体含义" class="headerlink" title="ExonicFunc.refGene列具体含义"></a>ExonicFunc.refGene列具体含义</h2><table>
<thead>
<tr>
<th>Value</th>
<th>Default precedence</th>
<th>Explanation</th>
<th>Sequence Ontology</th>
</tr>
</thead>
<tbody>
<tr>
<td>frameshift insertion</td>
<td>1</td>
<td>an insertion of one or more nucleotides that cause frameshift changes in protein coding sequence</td>
<td>frameshift_elongation (SO:0001909)</td>
</tr>
<tr>
<td>frameshift deletion</td>
<td>2</td>
<td>a deletion of one or more nucleotides that cause frameshift changes in protein coding sequence</td>
<td>frameshift_truncation (SO:0001910)</td>
</tr>
<tr>
<td>frameshift block substitution</td>
<td>3</td>
<td>a block substitution of one or more nucleotides that cause frameshift changes in protein coding sequence</td>
<td>frameshift_variant (SO:0001589)</td>
</tr>
<tr>
<td>stopgain</td>
<td>4</td>
<td>a nonsynonymous SNV, frameshift insertion/deletion, nonframeshift insertion/deletion or block substitution that lead to the immediate creation of stop codon at the variant site. For frameshift mutations, the creation of stop codon downstream of the variant will not be counted as “stopgain”!</td>
<td>stop_gained (SO:0001587)</td>
</tr>
<tr>
<td>stoploss</td>
<td>5</td>
<td>a nonsynonymous SNV, frameshift insertion/deletion, nonframeshift insertion/deletion or block substitution that lead to the immediate elimination of stop codon at the variant site</td>
<td>stop_lost (SO:0001578)</td>
</tr>
<tr>
<td>nonframeshift insertion</td>
<td>6</td>
<td>an insertion of 3 or multiples of 3 nucleotides that do not cause frameshift changes in protein coding sequence</td>
<td>inframe_insertion (SO:0001821)</td>
</tr>
<tr>
<td>nonframeshift deletion</td>
<td>7</td>
<td>a deletion of 3 or mutliples of 3 nucleotides that do not cause frameshift changes in protein coding sequence</td>
<td>inframe_deletion (SO:0001822)</td>
</tr>
<tr>
<td>nonframeshift block substitution</td>
<td>8</td>
<td>a block substitution of one or more nucleotides that do not cause frameshift changes in protein</td>
<td>coding sequence    inframe_variant (SO:0001650)</td>
</tr>
<tr>
<td>nonsynonymous SNV</td>
<td>9</td>
<td>a single nucleotide change that cause an amino acid change</td>
<td>missense_variant (SO:0001583)</td>
</tr>
<tr>
<td>synonymous SNV</td>
<td>10</td>
<td>a single nucleotide change that does not cause an amino acid change</td>
<td>synonymous_variant (SO:0001819)</td>
</tr>
<tr>
<td>unknown</td>
<td>11</td>
<td>unknown function (due to various errors in the gene structure definition in the database file)</td>
<td>sequence_variant (SO:0001060)</td>
</tr>
</tbody>
</table>
<h2 id="A-unified-annotation-format"><a href="#A-unified-annotation-format" class="headerlink" title="A unified annotation format"></a>A unified annotation format</h2><p>不同的注释软件对突变注释的表示方式不统一，不利于交流，为此，多个注释软件的作者协定了一份统一的注释格式，<a href="http://snpeff.sourceforge.net/VCFannotationformat_v1.0.pdf" target="_blank" rel="external">文档链接</a></p>
<h1 id="突变有害性注释结果选择建议（ANNOVER作者）"><a href="#突变有害性注释结果选择建议（ANNOVER作者）" class="headerlink" title="突变有害性注释结果选择建议（ANNOVER作者）"></a>突变有害性注释结果选择建议（ANNOVER作者）</h1><ul>
<li>一般而言，建议使用one popular prediction score (such as SIFT) 和 one meta-score (such as metaSVM)预测来判断突变是否是有害的</li>
<li>对于 noncoding variants的有害性预测推荐使用one popular prediction score (such as PhyloP) 和 one meta-score (such as CADD)</li>
</ul>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://www.ncbi.nlm.nih.gov/pubmed/26379229" target="_blank" rel="external">Genomic variant annotation and prioritization with ANNOVAR and wANNOVAR</a></p>
<p>（2）<a href="http://blog.sina.com.cn/s/blog_670445240101j0pa.html" target="_blank" rel="external">每日一生信–基于保守性和规则性的预测方法SIFT和PolyPhen</a></p>
<p>（3）<a href="http://blog.csdn.net/g863402758/article/details/75304391" target="_blank" rel="external">annovar对人类基因组和非人类基因组variants注释流程</a></p>
<p>（4）<a href="http://ishare.iask.sina.com.cn/f/63732396.html" target="_blank" rel="external">ANNOVAR注释上机（推荐）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;ANNOVAR进行突变注释&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>RNA-seq质控</title>
    <link href="https:///AnJingwd.github.io/2018/01/10/RNA-seq%E8%B4%A8%E6%8E%A7/"/>
    <id>https:///AnJingwd.github.io/2018/01/10/RNA-seq质控/</id>
    <published>2018-01-10T13:39:44.000Z</published>
    <updated>2018-01-15T13:37:25.766Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">RNA-seq质控：去除低质量reads，adapter以及rRNA</blockquote>

<a id="more"></a>
<h1 id="pipline"><a href="#pipline" class="headerlink" title="pipline"></a>pipline</h1><p>比较值得关注的RNA-seq分析中的重要的步骤包括：实验设计，质控，read比对，表达定量，可视化，差异表达，识别可变剪切，功能注释，融合基因检测，eQTL定位等</p>
<h1 id="建库质控"><a href="#建库质控" class="headerlink" title="建库质控"></a>建库质控</h1><p>使用Agilent 2100 Bioanalyzer，以下将简介其原理和结果如何解读</p>
<p><img src="https://i.imgur.com/f80qQqm.jpg" alt=""></p>
<p><img src="https://i.imgur.com/p8BGXgl.jpg" alt=""></p>
<p>横坐标为片段长度，纵坐标为FU：arbitrary fluorescent unit</p>
<p>左边的峰为ladder，右边的峰为marker, ladder孔和样品孔中的marker起到对其和丁范围的校准作用。中间为样品峰。面积表示浓度。</p>
<h1 id="质控"><a href="#质控" class="headerlink" title="质控"></a>质控</h1><p>（1）人类的Per sequence GC content峰值在48左右，否则就是有污染或者建库不均匀</p>
<p>（2）Per base N content越低越好（未识别的碱基，一般为0）</p>
<p>（3）Illumina 下机测序长度是一定的，如果reads小于定长，就会测到Adapter，使用cutadapt去接头</p>
<p>（4）一般流程只保留paired-reads用于下一步比对</p>
<p>（去除低质量reads过程中，可能导致原来paired的reads长度不一致，当长度小于阈值时，整条reads将被去除，所以只剩下另一条reads，一般为了接下来定量分析的方便，另一条reads不用于比对）</p>
<p>结果分为绿色的”PASS”，黄色的”WARN”和红色的”FAIL”，其中，红色部分是我们质控的关键，以下将对红色的”FAIL”部分进行解释及用相应软件进行相对应的质控。</p>
<p><img src="https://i.imgur.com/knNm3I5.jpg" alt=""></p>
<h2 id="1-去除低质量的reads"><a href="#1-去除低质量的reads" class="headerlink" title="1. 去除低质量的reads"></a>1. 去除低质量的reads</h2><p><img src="https://i.imgur.com/Pjm5pW6.jpg" alt=""></p>
<p>横轴代表位置，纵轴quality。红色水平线表示中位数，黄色柱子是25%-75%区间，触须是10%-90%区间，蓝线是平均数。</p>
<p>若任一位置的下四分位数低于10或中位数低于25，报”WARN”；若任一位置的下四分位数低于5或中位数低于20，报”FAIL”.</p>
<h2 id="2-检查每个tile的质量"><a href="#2-检查每个tile的质量" class="headerlink" title="2. 检查每个tile的质量"></a>2. 检查每个tile的质量</h2><p>Illumina flowcells被分成一个个的tiles。为了检查低质量是否与flowcell的某些区域相关联，FASTQC对每个tile计算reads在所有位置的平均质量分数。</p>
<p><img src="https://i.imgur.com/uasS1me.jpg" alt=""></p>
<p>图中y轴表示tile的编号，x轴表示reads中的位置。</p>
<p>在此图中看到警告或失败的原因可能是短暂的问题，例如通过flowcell的气泡，或者可能是更持久的问题，例如在flowcell中出现的斑点或碎片，或者在tile中高密度的聚集。在这个模块中，最常见的警告原因是flowcell 被 overloaded。</p>
<p>建议忽略那些轻微影响一小部分tile,仅为1或2个cycles的warnings 或者 failures，并且只追求更大的影响，这些影响在分数中表现出很高的偏差，或者持续数个cycles。</p>
<h2 id="3-Adapter-Content"><a href="#3-Adapter-Content" class="headerlink" title="3. Adapter Content"></a>3. Adapter Content</h2><p>对于R1：</p>
<p><img src="https://i.imgur.com/GP3ZyEM.jpg" alt=""></p>
<p>对于R2</p>
<p><img src="https://i.imgur.com/Wlr5oMX.jpg" alt=""></p>
<p>所以需要去接头</p>
<p>Per base sequence content 图的Failures 一般是由于文库污染造成的。如果一条特定的reads占了文库中的很大比例，那么这条reads将扭曲Per base sequence content图（在每个位置的碱基百分比将这条reads严重影响）</p>
<p>你可以使用Overrepresented sequences模块检查序列的污染情况，其列出了所有组成超过0.1%的序列，并列出其最佳匹配。上图中发现一个污染，被鉴定为Illumina的接头序列。</p>
<p><strong>不去除接头污染将影响比对过程中的比对百分率</strong></p>
<p>常用trimming tools的功能：</p>
<p><img src="https://i.imgur.com/IaxvSSe.jpg" alt=""></p>
<p>使用软件：trim_galore ,该软件通过调用FastQC进行质检，调用cutadapt去接头，同时还能去除低质量的reads。附加功能还有去除RRBS(for directional, non-directional (or paired-end) sequencing)测序文件的甲基化偏好位点。</p>
<p>其中去除低质量reads时最重要的两个参数是最小Phred score（1-30）和最小序列长度，不同文章对此观点不同，一般推荐Phred score 20 (90%置信区间)和最小50%-70%的序列长度。</p>
<p><a href="http://www.bioinformatics.babraham.ac.uk/projects/trim_galore/" target="_blank" rel="external">Trim Galore!官网</a>， Trim Galore is now also available from<a href="https://github.com/FelixKrueger/TrimGalore" target="_blank" rel="external"> GitHub</a>，具体参数使用参考<a href="https://github.com/FelixKrueger/TrimGalore/blob/master/Docs/Trim_Galore_User_Guide.md" target="_blank" rel="external">User Guide</a>。</p>
<p>对于RRBS samples, 首先进行quality trimming，从3’端剪切掉低质量的reads；然后调用cutadapt程序从3’端去除接头，如果具体序列没有提供，其将使用标准的Illumina配对接头的前13bp （’AGATCGGAAGAGC’）序列来去除接头。给了控制去接头过程的严格程度，需要指定与接头序列最小的overlap数目，或者默认为1（即使与接头序列只有一个bp的overlap也会被剪切掉）。</p>
<pre><code>agapter1=GATCGGAAGAGCACACGTCTGAACTCCAGTCACCGATGTATCTCGTATGC
adapter2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT

time $trim_galore \
--quality 20 \
--stringency 5 \
--dont_gzip \
--fastqc \
--retain_unpaired \
-r1 31 -r2 31 \
--length 30 \
--output_dir $trim \
--paired \
--phred33 \
--adapter ${adapter1} \
--adapter2 ${adapter2} \
$sample_r1 $sample_r2
</code></pre><p><strong>注：如果No overrepresented sequences，但Adapter Content未黄色警告，可以对于adapter和adapter2两个参数都可以用 –illumina 代替，表示 first 13bp of the Illumina universal adapter AGATCGGAAGAGC</strong></p>
<p>使用参考：<a href="http://overviewdifferentialexpression.blogspot.com/2014/02/quality-control-using-trim-galore.html" target="_blank" rel="external">Quality Control using Trim Galore: How to run trim galore?</a></p>
<h1 id="去除核糖体rRNA"><a href="#去除核糖体rRNA" class="headerlink" title="去除核糖体rRNA"></a>去除核糖体rRNA</h1><p>对于总RNA建库测序的RNA-seq实验设计，rRNA将占总数据量的95%左右，如果不去除，将严重影响比对率及下游分析。</p>
<p><a href="http://bioinfo.lifl.fr/sortmerna/sortmerna.php" target="_blank" rel="external">SortMeRNA官网</a>；<a href="http://bioinfo.lifl.fr/RNA/sortmerna/code/SortMeRNA-user-manual-v2.1.pdf" target="_blank" rel="external">SortMeRNA User Manual v2.1.pdf</a></p>
<h2 id="建索引"><a href="#建索引" class="headerlink" title="建索引"></a>建索引</h2><pre><code>sortmerna_REF=/home/wangdong/miniconda3/sortmerna_db/rRNA_databases
sortmerna_index=/home/wangdong/miniconda3/sortmerna_db/index

indexdb_rna --ref $sortmerna_REF/silva-arc-16s-id95.fasta,$sortmerna_index/silva-arc-16s-id95
indexdb_rna --ref $sortmerna_REF/silva-arc-23s-id98.fasta,$sortmerna_index/silva-arc-23s-id98
indexdb_rna --ref $sortmerna_REF/silva-bac-16s-id90.fasta,$sortmerna_index/silva-bac-16s-id95
indexdb_rna --ref $sortmerna_REF/silva-bac-23s-id98.fasta,$sortmerna_index/silva-bac-23s-id98
indexdb_rna --ref $sortmerna_REF/silva-euk-18s-id95.fasta,$sortmerna_index/silva-euk-18s-id95
indexdb_rna --ref $sortmerna_REF/silva-euk-28s-id98.fasta,$sortmerna_index/silva-euk-28s-id98
indexdb_rna --ref $sortmerna_REF/rfam-5.8s-database-id98.fasta,$sortmerna_index/rfam-5.8s-db
indexdb_rna --ref $sortmerna_REF/rfam-5s-database-id98.fasta,$sortmerna_index/rfam-5s-db
</code></pre><h2 id="去除rRNA"><a href="#去除rRNA" class="headerlink" title="去除rRNA"></a>去除rRNA</h2><p><strong>SortMeRNA只接受一个reads输入文件，对于paired-end reads需要使用merge-paired-reads.sh脚本合并之后用于分析。</strong></p>
<p><img src="https://i.imgur.com/vE4ODha.jpg" alt=""></p>
<p><code>which merge-paired-reads.sh</code> ${trim}/${sample}_paired_r1.fq ${trim}/${sample}_paired_r2.fq ${remove_rrna}/${sample}_paired_merge.fq</p>
<p>SortMeRNA去除rRNA后，对于paired-end reads的过滤时，如果一条reads比对上rRNA，而另一条reads没有比对上rRNA，但又想保证输出到fastq文件的都是paired-end reads，则需要考虑以下两个参数：</p>
<ol>
<li>–paired-in will put both reads into the file specified by –aligned</li>
<li>–paired-out will put both reads into the file specified by –other</li>
</ol>
<p>第一个参数–paired-in表示所有在–other file中的reads都为non-rRNA;第二个参数–paired-out表示只有rRNA reads被输出到–aligned file。如果两个参数都不设置，则会导致输出结果的reads不配对，不利于后续分析。</p>
<pre><code>time $sortmerna \
--ref $sortmerna_REF/silva-arc-16s-id95.fasta,$sortmerna_index/silva-arc-16s-id95:\
$sortmerna_REF/silva-arc-23s-id98.fasta,$sortmerna_index/silva-arc-23s-id98:\
$sortmerna_REF/silva-bac-16s-id90.fasta,$sortmerna_index/silva-bac-16s-id95:\
$sortmerna_REF/silva-bac-23s-id98.fasta,$sortmerna_index/silva-bac-23s-id98:\
$sortmerna_REF/silva-euk-18s-id95.fasta,$sortmerna_index/silva-euk-18s-id95:\
$sortmerna_REF/silva-euk-28s-id98.fasta,$sortmerna_index/silva-euk-28s-id98:\
$sortmerna_REF/rfam-5.8s-database-id98.fasta,$sortmerna_index/rfam-5.8s-db:\
$sortmerna_REF/rfam-5s-database-id98.fasta,$sortmerna_index/rfam-5s-db \
--reads ${remove_rrna}/${sample}_paired_merge.fq \
--aligned $remove_rrna/${sample}_paired_aligned_rRNA \
--other $remove_rrna/${sample}_paired_filtered_non_rRNA \
--fastx \
--sam --num_alignments 1 \
--paired_in \
--log \
-a 5 -v
</code></pre><p>接着将$remove_rrna/${sample}_paired_filtered_non_rRNA.fq文件拆分为forward reads和reserve reads两个文件，用于下游的paried-reads的比对</p>
<pre><code>`which unmerge-paired-reads.sh` $remove_rrna/${sample}_paired_filtered_non_rRNA.fq \
$remove_rrna/${sample}_non_rrna_paired_r1.fq $remove_rrna/${sample}_non_rrna_paired_r2.fq
</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>参考：</p>
<p>（1） <a href="http://blog.sciencenet.cn/blog-303373-724110.html" target="_blank" rel="external">fastqc解释</a></p>
<p>（2） <a href="https://wiki.bits.vib.be/index.php/Quality_control_of_NGS_data" target="_blank" rel="external">Quality control of NGS data（推荐）</a></p>
<p>（3）<a href="https://sequencing.qcfail.com/page/2/" target="_blank" rel="external">qcfail.com：Articles about common next-generation sequencing problems（强烈推荐）</a></p>
<p>（4）<a href="https://github.com/twbattaglia/RNAseq-workflow" target="_blank" rel="external">twbattaglia/RNAseq-workflow（推荐）</a></p>
<p>（5）<a href="https://www.bits.vib.be/training/328" target="_blank" rel="external">RNA-Seq analysis for differential expression in GenePattern</a> <a href="http://data.bits.vib.be/pub/trainingen/GenePattern/genepattern.pdf" target="_blank" rel="external">Slides（推荐）</a></p>
<p>（6）<a href="https://woaielf.github.io/2016/11/16/RNA-seq/" target="_blank" rel="external">RNA-seq分析流程思维导图</a></p>
<p>（7）<a href="http://www.bio-info-trainee.com/2275.html" target="_blank" rel="external">一个RNA-seq的反思</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;RNA-seq质控：去除低质量reads，adapter以及rRNA&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>GATK3.8分析环境搭建（一）</title>
    <link href="https:///AnJingwd.github.io/2017/12/26/GATK3.8%E5%88%86%E6%9E%90%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https:///AnJingwd.github.io/2017/12/26/GATK3.8分析环境搭建（一）/</id>
    <published>2017-12-26T10:15:59.000Z</published>
    <updated>2018-01-08T12:40:05.743Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">GATK3.8相关软件及文件准备</blockquote><br><a id="more"></a></p>
<h1 id="GATK官网相关栏目"><a href="#GATK官网相关栏目" class="headerlink" title="GATK官网相关栏目"></a>GATK官网相关栏目</h1><ul>
<li><a href="https://software.broadinstitute.org/gatk/documentation/tooldocs" target="_blank" rel="external">Tool Documentation</a> （包含每个工具的使用说明）</li>
<li><a href="https://software.broadinstitute.org/gatk/documentation/tooldocs" target="_blank" rel="external">Tutorials</a> (包含具体参数和细节)</li>
<li><a href="https://software.broadinstitute.org/gatk/best-practices/" target="_blank" rel="external">GATK Best Practices</a> （包含两个主流的分析流程）</li>
</ul>
<p><strong>全外显子测序call Germline SNP &amp; Indel流程图</strong></p>
<p><img src="https://i.imgur.com/jvbLuTm.jpg" alt=""></p>
<p><strong>体细胞拷贝数变异分析流程!</strong></p>
<p><a href="https://i.imgur.com/844zfg1.jpg" target="_blank" rel="external"></a></p>
<p><strong>使用RNA-seq数据call变异</strong></p>
<p><a href="https://software.broadinstitute.org/gatk/documentation/article.php?id=3891" target="_blank" rel="external">Calling variants in RNAseq</a></p>
<p><img src="https://i.imgur.com/GEF1W45.jpg" alt=""></p>
<ul>
<li><a href="https://gatkforums.broadinstitute.org/gatk" target="_blank" rel="external">Forum</a> （提问和搜索报错解决很有用）</li>
</ul>
<p><img src="https://i.imgur.com/PADtsMb.jpg" alt=""></p>
<ul>
<li>Blog (包含历年的workshop材料，学习用得上)</li>
</ul>
<p><a href="https://drive.google.com/drive/folders/0B7akc6CTmxIHNGpibUFTNzVRazg?usp=sharing" target="_blank" rel="external">Presentation slides and tutorial materials - Pretoria 2017（需要翻墙才能下载）</a></p>
<h1 id="GATK3-8下载"><a href="#GATK3-8下载" class="headerlink" title="GATK3.8下载"></a>GATK3.8下载</h1><p>GATK=GenomeAnalysisToolkit，最新稳定版为<a href="https://software.broadinstitute.org/gatk/download/" target="_blank" rel="external">GATK3.8</a> （<strong>需要注册！</strong>）</p>
<p>&emsp;&emsp;电脑软件在投放市场前，需要有人测试一下，看看是不是有问题，在开发该软件的公司内部的由该公司内部人员测试的称为：alfa测试。alfa测试主要看有没有功能缺失或系统错误，<strong>alfa测试完后一般不会有大问题了，然后把软件拿给用户测试，称为：beta测试，主要是看用户对软件外观，使用方便等的反映。</strong> 如果beta1版用户反映有问题，拿到公司修改，改完后发布beta2版，还有不满意的地方，再改，再发布beta3版，直到用户满意，或正式版发布为止。</p>
<p><a href="https://software.broadinstitute.org/gatk/download/beta" target="_blank" rel="external">GATK4.Beta.5</a>即为测试版</p>
<pre><code>#解压：
tar -jxvf GenomeAnalysisTK-3.8-0.tar.bz2
</code></pre><h1 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h1><p>（1）java版本要求大于1.8.x</p>
<pre><code>java -version
</code></pre><p>（2）测试</p>
<pre><code>java -jar /path/to/GenomeAnalysisTK.jar -h
</code></pre><p>（3）设置别名</p>
<pre><code>alias gatk=&quot;/home/wangdong/softwares/GATK3.8/GenomeAnalysisTK.jar&quot;
</code></pre><p>（4）下载java1.7版本，解压即可（MuTect1.1.7需要）</p>
<p><a href="http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html" target="_blank" rel="external">Java SE 7 Archive Downloads</a></p>
<p><img src="https://i.imgur.com/3T122nP.png" alt=""></p>
<p>（5）mutect下载安装</p>
<ul>
<li><a href="https://github.com/broadinstitute/mutect" target="_blank" rel="external">github上mutect源码 broadinstitute/mutect(不必下载)</a></li>
<li><a href="https://software.broadinstitute.org/gatk/download/mutect" target="_blank" rel="external">GATK官网提供的编译好的MuTect1.1.7</a></li>
<li><a href="http://archive.broadinstitute.org/cancer/cga/mutect_run" target="_blank" rel="external">How do I run MuTect?（参数详解及使用例子）</a></li>
</ul>
<p>（6） 其他软件及环境配置</p>
<p>Software packages</p>
<ul>
<li>BWA</li>
<li>SAMtools</li>
<li>Picard</li>
<li>IGV</li>
<li>RStudio IDE and R libraries ggplot2 and gsalib</li>
</ul>
<p>参考：<a href="https://gatkforums.broadinstitute.org/gatk/discussion/2899/howto-install-all-software-packages-required-to-follow-the-gatk-best-practices" target="_blank" rel="external">(howto) Install all software packages required to follow the GATK Best Practices.</a></p>
<h1 id="Reference-sequence和annotation下载"><a href="#Reference-sequence和annotation下载" class="headerlink" title="Reference sequence和annotation下载"></a>Reference sequence和annotation下载</h1><p><strong>（请务必使用GATK resource bundle提供的参考基因组相关文件非常重要！）</strong></p>
<p>GATK resource bundle介绍：<br><a href="http://gatkforums.broadinstitute.org/discussion/1213/whats-in-the-resource-bundle-and-how-can-i-get-it" target="_blank" rel="external">http://gatkforums.broadinstitute.org/discussion/1213/whats-in-the-resource-bundle-and-how-can-i-get-it</a></p>
<p>GATK resource bundle FTP地址：<br><a href="http://gatkforums.broadinstitute.org/discussion/1215/how-can-i-access-the-gsa-public-ftp-server" target="_blank" rel="external">http://gatkforums.broadinstitute.org/discussion/1215/how-can-i-access-the-gsa-public-ftp-server</a></p>
<p>（1）使用Xftp5等FTP server登陆</p>
<pre><code>location: ftp.broadinstitute.org/bundle
username: gsapubftp-anonymous
password:
</code></pre><p>（2）使用浏览器登陆</p>
<pre><code>ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/
</code></pre><h2 id="Reference-sequence"><a href="#Reference-sequence" class="headerlink" title="Reference sequence"></a>Reference sequence</h2><ul>
<li>ucsc.hg19.dict.gz</li>
<li>ucsc.hg19.fasta.fai.gz</li>
<li>ucsc.hg19.fasta.gz</li>
</ul>
<h2 id="annotation"><a href="#annotation" class="headerlink" title="annotation"></a>annotation</h2><ul>
<li>1000G_omni2.5.hg19.sites.vcf.idx</li>
<li>1000G_omni2.5.hg19.sites.vcf.idx</li>
<li>1000G_phase1.indels.hg19.sites.vcf</li>
<li>1000G_phase1.indels.hg19.sites.vcf.idx</li>
<li>dbsnp_138.hg19.vcf</li>
<li>dbsnp_138.hg19.vcf.idx</li>
<li>hapmap_3.3.hg19.sites.vcf</li>
<li>hapmap_3.3.hg19.sites.vcf.idx</li>
<li>Mills_and_1000G_gold_standard.indels.hg19.sites.vcf</li>
<li>Mills_and_1000G_gold_standard.indels.hg19.sites.vcf.idx</li>
</ul>
<ol>
<li><p>dbSNP 用于去除部分候选突变，其在其他人中已经被观察到的，最有可能是胚系突变。因为提交给dbSNP数据库的突变验证水平很低，所以我们不能确定标记为胚系突变或者体细胞突变的标签是否可信。</p>
</li>
<li><p>相比之下，COSMIC是一个经过更高验证的资源，所以它基本上被用作白名单来“拯救”候选突变，否则这些候选突变将会因为在正常和/或dbSNP中而被去除。 我们期望在dbSNP中被标记为somatic的任何东西都将在COSMIC中，所以我们可以依靠COSMIC来重新回收这些位点。</p>
</li>
<li><p>当前最好的已知indels集合将被用于局部重新比对（local realignment）（请注意，我们不再使用dbSNP）; 使用这两个文件：</p>
<ul>
<li>1000G_phase1.indels.b37.vcf (currently from the 1000 Genomes Phase I indel calls)</li>
<li>Mills_and_1000G_gold_standard.indels.b37.sites.vcf</li>
</ul>
</li>
<li><p>If you run any GATK tool on a vcf that doesn’t have an index, it will automatically generate one for you, so knock yourself out。 <a href="https://gatkforums.broadinstitute.org/gatk/discussion/5426/generate-an-idx-file-for-a-vcf" target="_blank" rel="external">参考：generate an idx file for a vcf 
</a></p>
</li>
</ol>
<h2 id="GATK-Prepare-Reference-Files"><a href="#GATK-Prepare-Reference-Files" class="headerlink" title="GATK: Prepare Reference Files"></a>GATK: Prepare Reference Files</h2><p>参考： <a href="https://gatkforums.broadinstitute.org/gatk/discussion/2798/howto-prepare-a-reference-for-use-with-bwa-and-gatk" target="_blank" rel="external">(howto) Prepare a reference for use with BWA and GATK</a></p>
<p>Prerequisites</p>
<ul>
<li>Installed BWA</li>
<li>Installed SAMTools</li>
<li>Installed Picard</li>
</ul>
<p>Steps</p>
<ul>
<li><p>Generate the BWA index</p>
<p>  bwa index -a bwtsw ucsc.hg19.fasta &emsp;&emsp;#-a bwtsw指定索引算法</p>
</li>
<li><p>Generate the Fasta file index</p>
<p>  samtools faidx ucsc.hg19.fasta &emsp;&emsp;#将生成ucsc.hg19.fasta.fai 文件</p>
</li>
<li><p>Generate the sequence dictionary（也可直接用已下载的ucsc.hg19.dict文件）</p>
<p>  java -jar picard.jar CreateSequenceDictionary \ </p>
<p>  REFERENCE=reference.fa \ </p>
<p>  OUTPUT=reference.dict </p>
</li>
</ul>
<p>（更详细的可参考：<a href="http://people.duke.edu/~ccc14/duke-hts-2017/Statistics/08032017/GATK-reference.html" target="_blank" rel="external">链接</a>）</p>
<h2 id="Cosmic-gz文件下载"><a href="#Cosmic-gz文件下载" class="headerlink" title="Cosmic*.gz文件下载"></a>Cosmic*.gz文件下载</h2><p><a href="http://cancer.sanger.ac.uk/cosmic/download" target="_blank" rel="external">COSMIC</a>需要注册</p>
<p>下载</p>
<ul>
<li>CosmicCodingMuts.vcf</li>
<li>CosmicNonCodingVariants.vcf</li>
</ul>
<h2 id="Cosmic-hg19-vcf文件生成"><a href="#Cosmic-hg19-vcf文件生成" class="headerlink" title="Cosmic.hg19.vcf文件生成"></a>Cosmic.hg19.vcf文件生成</h2><p><a href="https://gatkforums.broadinstitute.org/gatk/discussion/2226/cosmic-and-dbsnp-files-for-mutect" target="_blank" rel="external">COSMIC and dbSNP files for MuTect</a></p>
<p>sortByRef.pl was part of <a href="https://github.com/amplab/smash" target="_blank" rel="external">https://github.com/amplab/smash</a></p>
<pre><code>gunzip Cosmic*.gz
grep &quot;^#&quot; CosmicCodingMuts.vcf &gt; VCF_Header
grep -v &quot;^#&quot; CosmicCodingMuts.vcf &gt; Coding.clean
grep -v &quot;^#&quot; CosmicNonCodingVariants.vcf &gt; NonCoding.clean
cat Coding.clean NonCoding.clean | sort -gk 2,2 | awk &apos;{print &quot;chr&quot;$0}&apos; | perl sortByRef.pl --k 1 - hg19UCSC.fa.fai &gt; Cosmic.hg19
cat VCF_Header Cosmic.hg19 &gt; Cosmic.hg19.vcf
</code></pre><h2 id="GATK输入文件要求"><a href="#GATK输入文件要求" class="headerlink" title="GATK输入文件要求"></a>GATK输入文件要求</h2><p><a href="https://software.broadinstitute.org/gatk/documentation/article.php?id=1204" target="_blank" rel="external">参考：What input files does the GATK accept / require?</a></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://www.plob.org/article/7070.html" target="_blank" rel="external">GATK使用（推荐）</a></p>
<p>（2）<a href="https://software.broadinstitute.org/gatk/documentation/topic?name=problems" target="_blank" rel="external">使用GATK过程常见报错及解决</a></p>
<p>（3）<a href="http://blog.sina.com.cn/s/blog_587cc04e0101l4bs.html" target="_blank" rel="external">GATK使用 备忘录（推荐）</a></p>
<p>（4）<a href="https://www.bits.vib.be/training/286" target="_blank" rel="external">GATK Best practices for variant discovery （BITS Courses    TRAINING AT VIB）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;GATK3.8相关软件及文件准备&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>Rmarkdown生成动态报告</title>
    <link href="https:///AnJingwd.github.io/2017/12/10/Rmarkdown%E7%94%9F%E6%88%90%E5%8A%A8%E6%80%81%E6%8A%A5%E5%91%8A/"/>
    <id>https:///AnJingwd.github.io/2017/12/10/Rmarkdown生成动态报告/</id>
    <published>2017-12-10T02:54:17.000Z</published>
    <updated>2017-12-10T14:43:46.327Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Rmarkdown生成动态报告</blockquote>

<a id="more"></a>
<p>&emsp;&emsp;RStudio可以当做 Markdown 编辑器来用（R Markdown），根据数据处理结果快速生成报告文档，这一功能主要通过 Package Knit 及相关组件完成。</p>
<p>&emsp;&emsp;R Markdown 的两大特别之处，一是通过 Pandoc 将 Markdown 转化成 LaTex，再由强大的 LaTex 转换成 HTML、PDF、Word，理论上来说借助 LaTex 可以生成学术论文、期刊杂志、数据报告等规范格式的文档；另一大特点是整合了 R 语言的环境，可以在 Markdown 语法中 code block 直接执行 R 语言代码并将结果插入文档。</p>
<p>R Markdown from Rstudio <a href="http://rmarkdown.rstudio.com/lesson-1.html" target="_blank" rel="external">帮助文档</a></p>
<p>一个小教程:</p>
<ul>
<li><p><a href="https://rosannavanhespenresearch.wordpress.com/2016/02/03/writing-your-thesis-with-r-markdown-1-getting-started/" target="_blank" rel="external">Writing your thesis with R Markdown (1) – Getting started</a></p>
</li>
<li><p><a href="https://rosannavanhespenresearch.wordpress.com/2016/02/17/writing-your-thesis-with-rmarkdown-2-making-a-chapter/" target="_blank" rel="external">Writing your thesis with R Markdown (2) – Text, citations and equations</a></p>
</li>
<li><p><a href="https://rosannavanhespenresearch.wordpress.com/2016/03/18/writing-your-thesis-with-r-markdown-3-figures-r-code-and-tables/" target="_blank" rel="external">Writing your thesis with R Markdown (3) – Figures, R code and tables</a></p>
</li>
<li><p><a href="https://rosannavanhespenresearch.wordpress.com/2016/03/29/writing-your-thesis-with-r-markdown-4-putting-the-thesis-together/" target="_blank" rel="external">Writing your thesis with R Markdown (4) – Putting the thesis together</a></p>
</li>
<li><p><a href="https://rosannavanhespenresearch.wordpress.com/2016/03/30/writing-your-thesis-with-r-markdown-5-the-thesis-layout/" target="_blank" rel="external">Writing your thesis with R Markdown (5) – The thesis layout</a></p>
</li>
</ul>
<h1 id="安装必要的包"><a href="#安装必要的包" class="headerlink" title="安装必要的包"></a>安装必要的包</h1><pre><code>install.packages(&quot;devtools&quot;) # 如果以前没有安装 devtools 包
devtools::install_github(&quot;rstudio/rmarkdown&quot;)  #安装github上最新版rmarkdown
library(rmarkdown)
</code></pre><h1 id="如何编辑"><a href="#如何编辑" class="headerlink" title="如何编辑"></a>如何编辑</h1><ol>
<li><p>添加的是普通的文字: 那就按照Markdown写吧，你看到过的功能R都支持。</p>
</li>
<li><p>添加的是代码: 那就放到代码区域里面去，和Markdown的代码标记不太一样，多了 {}。</p>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">code</div></pre></td></tr></table></figure>
</code></pre></li>
<li><p>然后在 {} 里告诉 R Studio 你希望显示什么:</p>
</li>
</ol>
<ul>
<li>echo控制R代码块是否可见,设置为FALSE表示隐藏R代码，但会运行代码块并输出结果到文档。如果你只是为了显示而不需要运行一个代码块，设置eval = FALSE即可。 </li>
<li>message参数用于设置是否显示控制台输出的信息，message = FALSE表示不显示。<ul>
<li>只想显示代码 {r,echo = FALSE, eval = FALSE}</li>
<li>只想显示结果 {r,echo = FALSE, eval = TRUE}</li>
<li>想要代码+编译结果 {r,echo = TRUE，eval = FALSE}</li>
</ul>
</li>
</ul>
<ol>
<li><p>如果是在文中添加代码，没有{}</p>
<pre><code>`r 2+ 2`
</code></pre></li>
<li><p>chunk options</p>
</li>
</ol>
<p><img src="https://i.imgur.com/SeQw9LV.jpg" alt=""></p>
<p>这个chunk放在最前面，声明以后的每一个chunk都不输出warnings和message</p>
<ol>
<li><p>在代码块执行完后，控制结果的输出形式。包括文本、图表和图形的输出。有四个取值（更多细节参考<a href="http://yihui.name/knitr/options/）：" target="_blank" rel="external">http://yihui.name/knitr/options/）：</a> 1.markup—标记显示 2.asis—文本显示 3.hold—末尾显示 4.hide—隐藏 </p>
</li>
<li><p>由graphics和ggplot2得到的图形对齐方式可通过fig.align = ‘left’/‘right’/‘center’分别设置成左对齐，右对齐，居中。下图设置图形居中（默认是左对齐）</p>
</li>
</ol>
<h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><pre><code>![Caption for the picture.](/path/to/image.png)
</code></pre><h1 id="输出-html-word-pdf"><a href="#输出-html-word-pdf" class="headerlink" title="输出(html ,word, pdf)"></a>输出(html ,word, pdf)</h1><p>从Rmd格式可以导出为三种格式，用Pandoc实现:Word, HTML, PDF（额外需要LaTex支持，并且对中文的支持需要额外的设定）</p>
<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>Windows</p>
<p>There is a package installer at pandoc’s<a href="https://github.com/jgm/pandoc/releases/latest" target="_blank" rel="external"> download page</a>. 选择msi installer或者zip file都可以。</p>
<p>For PDF output, you’ll also need to install LaTeX. We recommend <a href="http://miktex.org/" target="_blank" rel="external">MiKTeX</a>.</p>
<h2 id="R-Studio的全局配置-为了支持中文pdf输出"><a href="#R-Studio的全局配置-为了支持中文pdf输出" class="headerlink" title="R Studio的全局配置(为了支持中文pdf输出)"></a>R Studio的全局配置(为了支持中文pdf输出)</h2><ul>
<li>Tools – Global Options – Code—Saving， 设置Default text coding: UTF-8 coding</li>
<li>Tools – Global Options – Sweave，将Typeset LaTeX into PDF using:设置为 XeLaTeX</li>
</ul>
<p>需要注意的就是latex_engine:xelatex 了。即使设置了默认的编译器为xeLaTeX依旧要手动再声明一遍编译器</p>
<h2 id="设置-YAML"><a href="#设置-YAML" class="headerlink" title="设置 YAML"></a>设置 YAML</h2><p>完成对R Studio的全局配置后，对每个Rmd文件（R markdown）在最开头条线之间进行设置才是更重要的。这个部分叫做YAML <a href="https://en.wikipedia.org/wiki/YAML" target="_blank" rel="external">wiki</a></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">author: <span class="string">"wd"</span></div><div class="line">date: <span class="string">"2017.12.10"</span></div><div class="line">output: pdf_document</div><div class="line">title: <span class="string">"MRstudy"</span></div><div class="line">outputs:</div><div class="line">  pdf_document:</div><div class="line">    includes:</div><div class="line">      in_header: header.tex</div><div class="line">    keep_tex: yes</div><div class="line">    latex_engine: xelatex</div><div class="line">---</div></pre></td></tr></table></figure>
<p>步骤:</p>
<ul>
<li>在YMAL里面设置 output: pdf_document，或者word_document, html_document。</li>
<li>设定好了之后三种导出的方法都一样，<strong>点击代码窗口上面的蓝色毛线团标记（选择输出html或者word或者pdf）。</strong>（knit英文是编织的意思，所以就是把代码织成文本吧）</li>
</ul>
<p><strong>注意正确的缩进和冒号</strong></p>
<ul>
<li>以上意思是，输出为html，word和pdf。html和word为默认设置。pdf设置包括，in_header，keep_tex和latex_engine。</li>
<li>如果一个设置还没到具体的内容，它紧接的是冒号，换行后需要缩进两个空格在开始。</li>
<li>如果已经指向明确的内容，结束没有冒号，换行之后不需要缩进。</li>
</ul>
<p><strong>header.tex需要和你的Rmd文档放到一个路径，</strong> 其中内容是：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">\usepackage&#123;xeCJK&#125;</div><div class="line">\setCJKmainfont&#123;楷体&#125;  % 字体可以更换</div><div class="line">\setmainfont&#123;Georgia&#125; % 設定英文字型</div><div class="line">\setromanfont&#123;Georgia&#125; % 字型</div><div class="line">\setmonofont&#123;Courier New&#125;</div></pre></td></tr></table></figure>
<p>更多详细配置可以参考<a href="http://rmarkdown.rstudio.com/" target="_blank" rel="external">官方文档</a></p>
<h1 id="编译前在viewer窗口预览文档"><a href="#编译前在viewer窗口预览文档" class="headerlink" title="编译前在viewer窗口预览文档"></a>编译前在viewer窗口预览文档</h1><p>使用方法：</p>
<ol>
<li><p>安装 Xaringan</p>
<p> install.packages(“devtools”)<br> if (!requireNamespace(“xaringan”))<br> devtools::install_github(“yihui/xaringan”)</p>
</li>
<li>R markdown不需额外设置。</li>
<li>编译的时候找到 Addin，点击Infinite Moon Reader</li>
</ol>
<p><img src="https://i.imgur.com/MfkEUSg.jpg" alt=""></p>
<h1 id="rmarkdown转化中文字符为PDF的设置"><a href="#rmarkdown转化中文字符为PDF的设置" class="headerlink" title="rmarkdown转化中文字符为PDF的设置"></a>rmarkdown转化中文字符为PDF的设置</h1><p>rmarkdown对于输出含中文的html和word文档，在YAML设置html_document: default或者word_document: default即可，但对于输出含有中文的pdf文件需要单独设置YAML。如下：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">output:</div><div class="line">  pdf_document:</div><div class="line">    keep_tex: yes</div><div class="line">    latex_engine: xelatex</div><div class="line">    includes:</div><div class="line">      in_header: header.tex</div></pre></td></tr></table></figure>
<h1 id="中文模板-详细说明"><a href="#中文模板-详细说明" class="headerlink" title="中文模板 详细说明"></a>中文模板 <a href="https://github.com/rstudio/rticles/pull/16" target="_blank" rel="external">详细说明</a></h1><p>安装rticles包，调用中文模板<br>    install.packages(“rticles”)</p>
<p>安装成功之后，我们可以新建一个Rmarkdown文件。点击New-&gt;file-&gt;R markdown,其中有了一个From Template</p>
<p><img src="https://i.imgur.com/qHiN24R.jpg" alt=""></p>
<p>使用ctrl + shift + k的快捷键，稍等片刻会出现中文PDF</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://www.xueqing.tv/cms/article/96" target="_blank" rel="external">利用R-Markdown和Knitr创建动态报告（第一部分）</a></p>
<p>（2）<a href="http://www.xueqing.tv/cms/article/101" target="_blank" rel="external">利用R-Markdown和Knitr创建动态报告（第二部分）</a></p>
<p>（3）<a href="https://www.cnblogs.com/Xeonilian/p/7142379.html" target="_blank" rel="external">R Markdown 设置和使用</a></p>
<p>（4）<a href="http://www.cnblogs.com/Xeonilian/p/7608290.html" target="_blank" rel="external">R Markdown + Infinite Moon Reader + 编辑实时更新</a></p>
<p>（5）<a href="http://blog.rainy.im/2015/05/16/rmarkdown-in-rstudio/" target="_blank" rel="external">RStudio 中的 R Markdown（推荐）</a></p>
<p>（6）<a href="http://blog.csdn.net/xmuecor/article/details/41956525" target="_blank" rel="external">Rmarkdown输出PDF的中文支持问题解决</a></p>
<p>（7）<a href="http://www.jianshu.com/p/0bfda49f1a52" target="_blank" rel="external">rmarkdown转化中文字符为PDF的设置</a></p>
<p>（8）<a href="http://www.jianshu.com/p/3a1d95f9965a" target="_blank" rel="external">Rmarkdown中文实现（推荐）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Rmarkdown生成动态报告&lt;/blockquote&gt;
    
    </summary>
    
      <category term="R" scheme="https:///AnJingwd.github.io/categories/R/"/>
    
    
      <category term="R" scheme="https:///AnJingwd.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>创建宏去除从pdf复制到word的回车换行</title>
    <link href="https:///AnJingwd.github.io/2017/12/03/%E5%88%9B%E5%BB%BA%E5%AE%8F%E5%8E%BB%E9%99%A4%E4%BB%8Epdf%E5%A4%8D%E5%88%B6%E5%88%B0word%E7%9A%84%E5%9B%9E%E8%BD%A6%E6%8D%A2%E8%A1%8C/"/>
    <id>https:///AnJingwd.github.io/2017/12/03/创建宏去除从pdf复制到word的回车换行/</id>
    <published>2017-12-03T10:12:38.000Z</published>
    <updated>2017-12-03T10:41:41.736Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;从PDF或网页中复制一段文字再粘贴到WORD中，会出现很多多余的空格和回车，一个一个去删除费时费力费心。在word创建宏，并设置按钮即可。</p>
<blockquote class="blockquote-center">创建宏去除从pdf复制到word的回车换行</blockquote>

<a id="more"></a>
<h1 id="如何创建宏及设置按钮"><a href="#如何创建宏及设置按钮" class="headerlink" title="如何创建宏及设置按钮"></a>如何创建宏及设置按钮</h1><h2 id="Steps-to-Record-a-Macro-in-Word"><a href="#Steps-to-Record-a-Macro-in-Word" class="headerlink" title="Steps to Record a Macro in Word"></a>Steps to Record a Macro in Word</h2><ol>
<li>Firstly, open your Word.</li>
<li>And make sure you have added “Developer” tab on the Ribbon first. For detailed instructions to add “Developer”, please read the article: How to Insert Background Music into Your Word Document</li>
<li>Once “Developer” tab is available, click it.</li>
<li>Then click “Record Macro” in “Code” group.</li>
</ol>
<p><img src="https://i.imgur.com/jBnJRul.jpg" alt=""></p>
<ol>
<li>Now a “Record Macro” dialog box will pop up. First, type the macro name, such as “copytext” here.</li>
<li>Then in “Assign macro to” part, choose either “Button” or “Keyboard”. Here we will go “Button”.</li>
<li><p>Next, click “OK”.<br><img src="https://i.imgur.com/W4PtR1j.jpg" alt=""></p>
</li>
<li><p>And now you will see the “Word Options” window. Click “Customize Ribbon”.</p>
</li>
<li>Then find a location for the macro on the right side. Here we will click “New Group” to set a new one for the macro.</li>
<li>Noe continue to choose “Macros” from the drop-down list of “Choose commands from”.</li>
<li>Next click the macro you just create.</li>
<li>Then click “Add” in the middle of the window.</li>
<li>Now the macro will be placed in the new group. Just right click the macro</li>
<li>And choose “Rename” option.<br><img src="https://i.imgur.com/wxgOLUM.jpg" alt=""></li>
<li>In “Rename” dialog box, choose a symbol for your macro.</li>
<li>Then type the display name.</li>
<li>Click “OK”.</li>
</ol>
<p><img src="https://i.imgur.com/9LQzOKA.jpg" alt=""></p>
<ol>
<li>Now go back to “Word Options” window, and click “OK” there. The macro starts recording from now.</li>
</ol>
<p><img src="https://i.imgur.com/bTy2Okj.jpg" alt=""></p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">Sub 粘贴并替换回车()</div><div class="line">   </div><div class="line">    Dim Flag As Integer</div><div class="line">   </div><div class="line">    <span class="string">'粘贴并选中</span></div><div class="line"><span class="string">    startpos = Selection.Start</span></div><div class="line"><span class="string">    '</span>Selection.Paste  <span class="string">'普通粘贴</span></div><div class="line"><span class="string">    Selection.PasteAndFormat (wdFormatPlainText)  '</span>粘贴为文本</div><div class="line">    Selection.Start = startpos</div><div class="line"></div><div class="line">   </div><div class="line">    <span class="string">'先将多个回车并为一个</span></div><div class="line"><span class="string">    With Selection.Find</span></div><div class="line"><span class="string">        .Text = "^13&#123;2,&#125;"</span></div><div class="line"><span class="string">        .Replacement.Text = "^p"</span></div><div class="line"><span class="string">        .MatchWildcards = True '</span>使用通配符</div><div class="line">        .Wrap = wdFindStop <span class="string">'把 .Wrap = wdFindAsk 改成 .Wrap = wdFindStop对应于“是否搜索其余部分”中的“否”</span></div><div class="line"><span class="string">        .Execute Replace:=wdReplaceAll</span></div><div class="line"><span class="string">    End With</span></div><div class="line"><span class="string">   </span></div><div class="line"><span class="string">    '</span>主要针对最后是两个回车的特殊情况这种特殊情况下，替换后少选择一位字符，影响后续操作</div><div class="line">    If Selection.Text Like <span class="string">"*[!。\?？\!！”：；]"</span> &amp; Chr(13) Then</div><div class="line">        Flag = 1</div><div class="line">    End If</div><div class="line">    <span class="string">'再将前面不是句号的回车删除</span></div><div class="line"><span class="string">    With Selection.Find</span></div><div class="line"><span class="string">        .Text = "([!.。\?？\!！”：；])^13"</span></div><div class="line"><span class="string">        .Replacement.Text = "\1"</span></div><div class="line"><span class="string">        .MatchWildcards = True '</span>使用通配符</div><div class="line">        .Wrap = wdFindStop <span class="string">'把 .Wrap = wdFindAsk 改成 .Wrap = wdFindStop对应于“是否搜索其余部分”中的“否”</span></div><div class="line"><span class="string">        .Execute Replace:=wdReplaceAll</span></div><div class="line"><span class="string">    End With</span></div><div class="line"><span class="string">   </span></div><div class="line"><span class="string">    If Flag Then</span></div><div class="line"><span class="string">        Selection.MoveLeft unit:=wdCharacter, Count:=-1, Extend:=wdExtend '</span>取消选定最后一个回车符</div><div class="line">    End If</div><div class="line">   </div><div class="line">    <span class="string">'清除替换的内容</span></div><div class="line"><span class="string">    Selection.Find.Replacement.Text = ""</span></div><div class="line"><span class="string">End Sub</span></div></pre></td></tr></table></figure>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>代码主要从参考1修改而来，主要修改：</p>
<ol>
<li>源代码第一个With Selection.Find部分导致空格删除，使得中文可以，但英文全部空格被删除，所以需要注释=掉或者删除掉</li>
<li>第三个With Selection.Find部分需要加一个.号，主要针对英文</li>
</ol>
<p><img src="https://i.imgur.com/Z2LfJ65.png" alt=""></p>
<p><img src="https://i.imgur.com/mGL1UNA.png" alt=""></p>
<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="https://i.imgur.com/9GTjAFf.jpg" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://blog.sina.com.cn/s/blog_51817ae50102w8id.html" target="_blank" rel="external">[源码]文本从PDF等粘贴到WORD中，智能删除多余的空格和回车</a></p>
<p>（2）<a href="https://www.datanumen.com/blogs/how-to-remove-the-formatting-of-pasted-texts-with-macro-and-vba-in-your-word/" target="_blank" rel="external">How to Remove the Formatting of Pasted Texts with Macro and VBA in Your Word</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;从PDF或网页中复制一段文字再粘贴到WORD中，会出现很多多余的空格和回车，一个一个去删除费时费力费心。在word创建宏，并设置按钮即可。&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;创建宏去除从pdf复制到word的回车换行&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术" scheme="https:///AnJingwd.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="https:///AnJingwd.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>文献查询与引用技巧</title>
    <link href="https:///AnJingwd.github.io/2017/11/25/%E6%96%87%E7%8C%AE%E6%9F%A5%E8%AF%A2%E4%B8%8E%E5%BC%95%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https:///AnJingwd.github.io/2017/11/25/文献查询与引用技巧/</id>
    <published>2017-11-25T11:24:52.000Z</published>
    <updated>2017-12-15T10:27:28.174Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">文献查询与引用技巧</blockquote>

<a id="more"></a>
<h1 id="只查询review"><a href="#只查询review" class="headerlink" title="只查询review"></a>只查询review</h1><p><img src="https://i.imgur.com/ugJKXz7.jpg" alt=""></p>
<p><img src="https://i.imgur.com/E9XOueN.jpg" alt=""></p>
<h1 id="sci-hub最新地址（20171215）"><a href="#sci-hub最新地址（20171215）" class="headerlink" title="sci-hub最新地址（20171215）"></a>sci-hub最新地址（20171215）</h1><ol>
<li><a href="https://scihub22266qpcxt.onion.link/" target="_blank" rel="external">https://scihub22266qpcxt.onion.link/</a></li>
<li><a href="http://sci-hub.tw/" target="_blank" rel="external">http://sci-hub.tw/</a> 或者 www.sci-hub.tw</li>
<li><a href="http://sci-hub.hk/" target="_blank" rel="external">http://sci-hub.hk/</a> 或者 www.sci-hub.hk</li>
<li>80.82.77.83</li>
<li>80.82.77.84</li>
</ol>
<h1 id="实验protocol或者数据分析protocol"><a href="#实验protocol或者数据分析protocol" class="headerlink" title="实验protocol或者数据分析protocol"></a>实验protocol或者<strong>数据分析protocol</strong></h1><p><a href="https://www.nature.com/search/advanced" target="_blank" rel="external">Nature Protocols</a>​ 或者 <a href="https://link.springer.com/" target="_blank" rel="external">springer protocol </a></p>
<p><img src="https://i.imgur.com/uvbWpnD.jpg" alt=""></p>
<h1 id="文献引用的下载"><a href="#文献引用的下载" class="headerlink" title="文献引用的下载"></a>文献引用的下载</h1><ul>
<li>方法一：<a href="http://jingyan.baidu.com/article/7f766daf970aef4101e1d002.html" target="_blank" rel="external">从中国知网</a></li>
<li>方法二：<a href="http://jingyan.baidu.com/article/f79b7cb378992f9144023ea2.html" target="_blank" rel="external">从百度学术</a></li>
<li>方法三：<a href="https://www.howsci.com/endnote-import-pubmed.html" target="_blank" rel="external">从Pubmed</a></li>
<li>方法四：<a href="https://apps.webofknowledge.com/UA_GeneralSearch_input.do?product=UA&amp;search_mode=GeneralSearch&amp;SID=5EmIvuZs9xgC4RP8XzA&amp;preferencesSaved=" target="_blank" rel="external">从web of science</a> &emsp;&emsp;<a href="http://jingyan.baidu.com/article/e75aca85150856142edac635.html" target="_blank" rel="external">方法</a></li>
</ul>
<p>快速下载一篇文献后的引文导入EndNote：<a href="http://blog.sina.com.cn/s/blog_1398ef3510102wtwi.html" target="_blank" rel="external">方法</a></p>
<p>剩下依然找不到，或者是电子文献的类型的只有手动在EndNote中生成了：<a href="http://jingyan.baidu.com/article/fec4bce2752613f2618d8b29.html" target="_blank" rel="external">方法</a></p>
<p>web of science文献检索技巧：</p>
<p>首先根据一个关键词检索，然后在搜索到的结果中精炼</p>
<p><img src="https://i.imgur.com/A0apSWt.jpg" alt=""></p>
<h1 id="文献引用的生成"><a href="#文献引用的生成" class="headerlink" title="文献引用的生成"></a>文献引用的生成</h1><p>对于EndNote自带，或者官网有的Style可以直接下载使用</p>
<p>（1）<a href="http://jingyan.baidu.com/article/456c463b53754d0a58314427.html" target="_blank" rel="external">Endnote期刊格式的下载和使用</a></p>
<p>（2）<a href="http://mp.weixin.qq.com/s?__biz=MjM5ODcyMzk0Mg==&amp;mid=2651045955&amp;idx=1&amp;sn=c9b303938094d2f45ccd372c92c266ea&amp;scene=21#wechat_redirect" target="_blank" rel="external">Endnote文献引用格式全解之常规引用格式获取方法</a></p>
<p>   &emsp;&emsp;<a href="http://endnote.com/downloads" target="_blank" rel="external">EndNote官网</a></p>
<h1 id="修改文献引用格式"><a href="#修改文献引用格式" class="headerlink" title="修改文献引用格式"></a>修改文献引用格式</h1><p>&emsp;&emsp;硕士论文，博士论文没有完全对应的那种style，虽然EndnoteX7中已经有与GB/T7714-2005对应的两种参考文献输出格式：Chinese Std GBT7714(author-year).ens和Chinese Std GBT7714(numeric).ens，分别对应著者－出版年制和顺序编码制。但是这两个自带的style都不能完全满足国家标准的要求，还有就是不同学校的具体要求不一样，所以，需要自己在此基础上自定义。</p>
<ol>
<li>顺序编码制</li>
</ol>
<p>&emsp;&emsp;顺序编码制是指作者在论文中所引用的文献按它们在文中出现的先后顺序，用阿拉伯数字加方括号连续编码，视具体情况把序号作为上角或作为语句的组成部分进行标注，并在文后参考文献表中，各条文献按在论文中出现的文献序号顺序依次排列。</p>
<ol>
<li>著者-出版年制</li>
</ol>
<p>&emsp;&emsp;著者-出版年制”是指正文中各篇文献的标注内容由著者姓氏与出版年构成，并置于圆括号“（）”内；参考文献表按文种集中后按著者字顺和出版年排列的引用文献标注方法。</p>
<p>网上教程比较多，就不一一列举了，汇总一些问题的可行的解决方法还是可以的，已亲测可行哦！！</p>
<p>问题一：endnote 出入文献怎样让英文参考文献在前,中文在后？<a href="https://www.zhihu.com/question/54447786" target="_blank" rel="external">方法</a></p>
<p>问题二：EndNote中英文混排时etal和等的3种解决方法? <a href="https://www.howsci.com/endnote-eng-cn-refer-etal.html" target="_blank" rel="external">方法</a> &emsp;&emsp;<a href="http://jingyan.baidu.com/article/8065f87f804c5c233124989e.html" target="_blank" rel="external">方法</a></p>
<h2 id="细节问题："><a href="#细节问题：" class="headerlink" title="细节问题："></a>细节问题：</h2><p>问题一：编号后的间隙有点大，不符合标准。默认的为2个字符，但是毕设手册要求的应该是1个字符? <a href="http://yjbys.com/jiuyezhidao/fanwen/qitafanwen/1364745.html" target="_blank" rel="external">方法</a></p>
<p>问题二：EndNoteX7一段文字如何引用多个连续文献[2-7]？<a href="http://www.cappchem.com/Article2014/1179.html" target="_blank" rel="external">方法</a></p>
<p>问题三：在endnoteX5中怎么用分号而不是逗号把多个citation分开？<a href="https://zhidao.baidu.com/question/444890445.html" target="_blank" rel="external">方法</a></p>
<p>问题四：搜狗输入法中文实心点怎么打?<a href="https://zhidao.baidu.com/question/333654623.html" target="_blank" rel="external">方法</a></p>
<p>问题五：Endnote中参考文献期刊名称的全称与缩写转换?<a href="http://jingyan.baidu.com/article/fdbd4277c428cbb89e3f4827.html" target="_blank" rel="external">方法</a></p>
<h2 id="综合性推荐"><a href="#综合性推荐" class="headerlink" title="综合性推荐"></a>综合性推荐</h2><p>（1） <a href="http://blog.sina.com.cn/s/blog_770ffb870101lzoe.html" target="_blank" rel="external">Endnote中英文混排之完美解决（转）</a></p>
<p>（2）<a href="http://blog.csdn.net/zhengmingtoh/article/details/7383109" target="_blank" rel="external">在endnote中制作GB/T7714《文后参考文献著录规则》的输出格式</a></p>
<p>（3）<a href="http://wenku.baidu.com/view/ae6f23960508763230121235.html" target="_blank" rel="external">endnoteX7全新教程</a></p>
<h2 id="范例"><a href="#范例" class="headerlink" title="范例"></a>范例</h2><p>在EndNote中创建同济大学研究生学位论文参考文献格式! <a href="http://blog.sina.com.cn/s/blog_489d7be80102vktp.html" target="_blank" rel="external">网址</a></p>
<p>徐源_毕业论文参考文献输出标准格式.ens文件下载! <a href="http://vdisk.weibo.com/s/BGPusUMycYWAk" target="_blank" rel="external">网址</a></p>
<p>另科研动力主页有许多关于EndNote的资料，基本可以解决文献应用的你遇到的所有问题：<a href="https://www.howsci.com/" target="_blank" rel="external">网址</a></p>
<h1 id="快速导入一篇文章引用的参考文献至EndNoted再次引用"><a href="#快速导入一篇文章引用的参考文献至EndNoted再次引用" class="headerlink" title="快速导入一篇文章引用的参考文献至EndNoted再次引用"></a>快速导入一篇文章引用的参考文献至EndNoted再次引用</h1><p>&emsp;&emsp;在使用Endnote过程中遇到这样一个情况，如果发现一篇很好的文章，其后参考文献都很好，是某一方向或领域的经典，如何将这些文章一次性导入自己的Endnote中呢？最初用笨笨的方法，那就是一条条的往里输，等几十篇文章输完，快则一两个小时，慢的话一个上午甚至一天才能搞定。网上有使用<a href="http://www.scopus.com/home.url" target="_blank" rel="external">scopus数据库</a>的，并且有<a href="http://www.docin.com/p-531060060.html" target="_blank" rel="external">教程</a>,但是scopus是需要登陆的，折腾了好久，在网上也没找到能用的账号。于是乎想想免费通用的办法罗。首先想到的是PubMed，确实可以，但是以下方法只对PubMed收录的免费的文献适用，对于全文版权在其他出版商的文献则无能为力了。</p>
<p><img src="https://i.imgur.com/QdNvc4z.jpg" alt=""></p>
<p><img src="https://i.imgur.com/TLeFEAt.jpg" alt=""></p>
<p><img src="https://i.imgur.com/PQA1cfG.jpg" alt=""></p>
<p><img src="https://i.imgur.com/zkjh53W.jpg" alt=""></p>
<p>所以想到了Web of Science，这个方法更加通用可行！！已亲测，只需7步，快速导入一篇文章引用的参考文献至EndNoted。</p>
<p><img src="https://i.imgur.com/YBcPEBG.jpg" alt=""></p>
<p><img src="https://i.imgur.com/nBnnvme.jpg" alt=""></p>
<p><img src="https://i.imgur.com/Ty02l9W.jpg" alt=""></p>
<p><img src="https://i.imgur.com/bv7jwIP.jpg" alt=""></p>
<p><img src="https://i.imgur.com/VjWmIok.jpg" alt=""></p>
<p><img src="https://i.imgur.com/h4cANxZ.jpg" alt=""></p>
<p><img src="https://i.imgur.com/o8bviUS.jpg" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;文献查询与引用技巧&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术" scheme="https:///AnJingwd.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="https:///AnJingwd.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>mysql数据库与生信</title>
    <link href="https:///AnJingwd.github.io/2017/11/23/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E7%94%9F%E4%BF%A1/"/>
    <id>https:///AnJingwd.github.io/2017/11/23/mysql数据库与生信/</id>
    <published>2017-11-23T08:03:44.000Z</published>
    <updated>2017-11-25T03:39:13.724Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;主要介绍win下和linux下连接重用生信数据库，操作数据库中表，以及根据自己的需要下载公共数据，创建mysql数据库。</p>
<blockquote class="blockquote-center">mysql数据库与生信</blockquote>

<a id="more"></a>
<h1 id="mysql学习资料"><a href="#mysql学习资料" class="headerlink" title="mysql学习资料"></a>mysql学习资料</h1><p>（1）<a href="http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html" target="_blank" rel="external">21分钟 MySQL 入门教程</a></p>
<p>（2）MySQL 5.7 Reference Manual: 具体技巧例如<a href="https://dev.mysql.com/doc/refman/5.7/en/counting-rows.html" target="_blank" rel="external"> Counting Rows</a>；<a href="https://dev.mysql.com/doc/refman/5.7/en/pattern-matching.html" target="_blank" rel="external">Pattern Matching</a></p>
<h1 id="mysql连接生信主要公共数据库"><a href="#mysql连接生信主要公共数据库" class="headerlink" title="mysql连接生信主要公共数据库"></a>mysql连接生信主要公共数据库</h1><h2 id="linux下格式："><a href="#linux下格式：" class="headerlink" title="linux下格式："></a>linux下格式：</h2><p>mysql -h[host] -u[user] -p[password] -P[port] [database-name]</p>
<ul>
<li>-h : 该命令用于指定客户端所要登录的MySQL主机名, 登录当前机器该参数可以省略;</li>
<li>退出：输入 exit; 或 quit; 退出登录</li>
</ul>
<p>例如：</p>
<table>
<thead>
<tr>
<th>Server</th>
<th>User</th>
<th>Password</th>
<th>Port</th>
</tr>
</thead>
<tbody>
<tr>
<td>mysql-db.1000genomes.org</td>
<td>anonymous</td>
<td>-</td>
<td>4272</td>
</tr>
</tbody>
</table>
<p>（1）<a href="http://www.internationalgenome.org/public-ensembl-mysql-instance" target="_blank" rel="external">1000 Genomes: since June 16, 2011</a></p>
<pre><code>mysql -h mysql-db.1000genomes.org -u anonymous -P 4272  -A
</code></pre><p>（2）<a href="http://genome.ucsc.edu/goldenPath/help/mysql.html" target="_blank" rel="external">UCSC Downloading Data using MySQL</a></p>
<pre><code>mysql -h genome-mysql.soe.ucsc.edu -u genome -P 3306 -A
</code></pre><p>或者</p>
<pre><code>mysql -h genome-euro-mysql.soe.ucsc.edu -u genome -P 3306 -A
</code></pre><p>注意：必须加上端口号-P 3306，按照官网的方法会报错：</p>
<p>ERROR 2003 (HY000): Can’t connect to MySQL server on ‘genome-mysql.soe.ucsc.edu’ (111)</p>
<p>（3）<a href="http://uswest.ensembl.org/info/data/mysql.html" target="_blank" rel="external">The Ensembl public MySQL Servers</a></p>
<pre><code>mysql -h ensembldb.ensembl.org -u anonymous -P  5306  -A
</code></pre><p>（4）<a href="http://www.geneontology.org/GO.database.shtml#mirrors" target="_blank" rel="external">GO</a></p>
<pre><code>mysql -h mysql-amigo.ebi.ac.uk -u go_select -P 4085 -pamigo -A
</code></pre><p>The -A flag is optional but is recommended for speed.</p>
<p>其他数据库：参见<a href="What Are The Public Sql Servers For Bioinformatics ?">网址</a></p>
<h3 id="mysql直接读ucsc数据库数据"><a href="#mysql直接读ucsc数据库数据" class="headerlink" title="mysql直接读ucsc数据库数据"></a>mysql直接读ucsc数据库数据</h3><pre><code>mysql --user=genome --host=genome-mysql.cse.ucsc.edu -P 3306 -A -D hg19 -e &apos;select * from refGene where name=&quot;NM_000038&quot;&apos; | less 
</code></pre><p>显示：</p>
<pre><code>bin     name    chrom   strand  txStart txEnd   cdsStart        cdsEnd  exonCount       exonStarts      exonEnds        score   name2
1440    NM_000038       chr5    +       112073555       112181936       112090587       112179823       16      112073555,112090569,112
</code></pre><h2 id="windows下"><a href="#windows下" class="headerlink" title="windows下"></a>windows下</h2><p>使用Navicat，其好处在于更加方便直观</p>
<p>如图：<br><img src="https://i.imgur.com/aBUXPU1.jpg" alt=""></p>
<p><img src="https://i.imgur.com/HSXg4DS.jpg" alt=""></p>
<p>查询某一张表，查看具体内容，导出，筛选等等，很方便</p>
<p><img src="https://i.imgur.com/AC1sYil.jpg" alt=""></p>
<p><img src="https://i.imgur.com/wRlokSh.jpg" alt=""></p>
<p>mac下可以使用<a href="http://www.danielecook.com/accessing-the-ucsc-genome-browser-mysql-database/" target="_blank" rel="external">Sequel Pro</a></p>
<h1 id="python连接mysql数据库"><a href="#python连接mysql数据库" class="headerlink" title="python连接mysql数据库"></a>python连接mysql数据库</h1><pre><code>pip2.7 install MySQL-python
</code></pre><p><img src="https://i.imgur.com/dNbsWE5.jpg" alt=""></p>
<p>解决：libmysqlclient.so.18库在mysql安装目录的lib下，设置LD_LIBRARY_PATH环境变量即可</p>
<pre><code>export LD_LIBRARY_PATH=&quot;$DYLD_LIBRARY_PATH:/home/wangdong/local/mysql/lib&quot;
</code></pre><p><img src="https://i.imgur.com/SNb5BTT.jpg" alt=""></p>
<p>ps： 网上一般的做法是在mysql/lib目录下找到libmysqlclient.so.18，设置软链接到usr/lib或者usr/lib64，但这两个目录都需要管理员权限的。</p>
<h2 id="应用例子"><a href="#应用例子" class="headerlink" title="应用例子"></a>应用例子</h2><p>利用mysql客户端查询UCSC数据库，获取geneSymbol名的bed信息</p>
<p><a href="https://github.com/Wy2160640/py_scripts/blob/master/geneInfo.py" target="_blank" rel="external">脚本geneInfo.py</a></p>
<p><img src="https://i.imgur.com/SjGGLYp.jpg" alt=""></p>
<h1 id="根据需要创建UCSC-genome-MySQL-database"><a href="#根据需要创建UCSC-genome-MySQL-database" class="headerlink" title="根据需要创建UCSC genome MySQL database"></a>根据需要创建UCSC genome MySQL database</h1><p>数据来源：UCSC <a href="http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/" target="_blank" rel="external">hg19</a>  <a href="http://hgdownload.cse.ucsc.edu/goldenPath/hg38/database/" target="_blank" rel="external">hg38</a></p>
<p><img src="https://i.imgur.com/sO4nvEc.jpg" alt=""></p>
<p>需要两种文件：</p>
<ul>
<li>（1）*sql是一种数据库脚本语言，是一种对关系数据库中的数据进行定义和操作的句法，为大多数关系数据库管理系统所支持的工业标准。可以用文本编辑器打开并查看</li>
<li>（2)数据文件。txt文件</li>
</ul>
<p>例子：.sql文件</p>
<p><img src="https://i.imgur.com/nqtMqQV.jpg" alt=""></p>
<p>使用shell脚本自动完成</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># create database</span></div><div class="line">mysql -u root -prootab -e <span class="string">'create database hg19'</span></div><div class="line"><span class="comment"># obtain table schema</span></div><div class="line"><span class="built_in">cd</span> /home/wangdong/<span class="built_in">local</span>/mysql/data</div><div class="line">wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/ensGene.sql</div><div class="line"><span class="comment"># create table</span></div><div class="line">mysql -u root -prootab hg19 &lt; ensGene.sql</div><div class="line"><span class="comment"># obtain and import table data</span></div><div class="line">wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/ensGene.txt.gz</div><div class="line">gunzip ensGene.txt.gz</div><div class="line">mysqlimport -u root -prootab --<span class="built_in">local</span> hg19 ensGene.txt</div></pre></td></tr></table></figure>
<p><strong>注意：数据需要下载到/home/wangdong/local/mysql/data，位置可以在配置文件(my.cnf)中修改，具体操作查看链接：<a href="http://www.cnblogs.com/foreverycc/p/5511820.html" target="_blank" rel="external">MySQL 转移 datadir</a></strong></p>
<ul>
<li><p>为了便于在命令提示符下显示中文, 在创建时通过 character set gbk 将数据库字符编码指定为 gbk</p>
<p>  create database samp_db character set gbk;</p>
</li>
<li><p>创建数据库表时，对于一些较长的语句在命令提示符下可能容易输错, 因此我们可以通过任何文本编辑器将语句输入好后保存为 createtable.sql 的文件中, 通过命令提示符下的文件重定向执行执行该脚本。</p>
<p>  mysql -D samp_db -u root -p &lt; createtable.sql</p>
</li>
<li><p>desc TABLE_NAME; 显示数据库表的结构（desc是describe的缩写）</p>
</li>
<li>select * from TABLE_NAME limit 0,2;显示表的前两行内容，0表示起始行偏移量</li>
</ul>
<p><img src="https://i.imgur.com/ThdiQ2j.jpg" alt=""></p>
<p><img src="https://i.imgur.com/I809HBj.jpg" alt=""></p>
<h2 id="补充LD-LIBRARY-PATH环境变量"><a href="#补充LD-LIBRARY-PATH环境变量" class="headerlink" title="补充LD_LIBRARY_PATH环境变量"></a>补充LD_LIBRARY_PATH环境变量</h2><p>LIBRARY_PATH和LD_LIBRARY_PATH是Linux下的两个环境变量，二者的含义和作用分别如下：</p>
<p><strong>LIBRARY_PATH环境变量用于在程序编译期间查找动态链接库时指定查找共享库的路径，</strong> 例如，指定gcc编译需要用到的动态链接库的目录。设置方法如下（其中，LIBDIR1和LIBDIR2为两个库目录）：</p>
<p>export LIBRARY_PATH=LIBDIR1:LIBDIR2:$LIBRARY_PATH</p>
<p><strong>LD_LIBRARY_PATH环境变量用于在程序加载运行期间查找动态链接库时指定除了系统默认路径之外的其他路径，</strong> 注意，LD_LIBRARY_PATH中指定的路径会在系统默认路径之前进行查找。设置方法如下（其中，LIBDIR1和LIBDIR2为两个库目录）：</p>
<p>export LD_LIBRARY_PATH=LIBDIR1:LIBDIR2:$LD_LIBRARY_PATH</p>
<h3 id="区别与使用："><a href="#区别与使用：" class="headerlink" title="区别与使用："></a>区别与使用：</h3><p>开发时，设置LIBRARY_PATH，以便gcc能够找到编译时需要的动态链接库。</p>
<p>发布时，设置LD_LIBRARY_PATH，以便程序加载运行时能够自动找到需要的动态链接库。</p>
<h1 id="可视化管理工具-MySQL-Workbench"><a href="#可视化管理工具-MySQL-Workbench" class="headerlink" title="可视化管理工具 MySQL Workbench"></a>可视化管理工具 MySQL Workbench</h1><p>&emsp;&emsp;尽管我们可以在命令提示符下通过一行行的输入或者通过重定向文件来执行mysql语句, 但该方式效率较低, 由于没有执行前的语法自动检查, 输入失误造成的一些错误的可能性会大大增加, 这时不妨试试一些可视化的MySQL数据库管理工具, MySQL Workbench 就是 MySQL 官方 为 MySQL 提供的一款可视化管理工具, 你可以在里面通过可视化的方式直接管理数据库中的内容, 并且 MySQL Workbench 的 SQL 脚本编辑器支持语法高亮以及输入时的语法检查, 当然, 它的功能强大, 绝不仅限于这两点。</p>
<p>MySQL Workbench官方介绍: <a href="http://www.mysql.com/products/workbench/" target="_blank" rel="external">http://www.mysql.com/products/workbench/</a></p>
<p>MySQL Workbench 下载页: <a href="http://dev.mysql.com/downloads/tools/workbench/" target="_blank" rel="external">http://dev.mysql.com/downloads/tools/workbench/</a></p>
<h1 id="MySQL-Show命令总结"><a href="#MySQL-Show命令总结" class="headerlink" title="MySQL Show命令总结"></a>MySQL Show命令总结</h1><p>MySQL中有很多的基本命令，show命令也是其中之一，在很多使用者中对show命令的使用还容易产生混淆，本文汇集了show命令的众多用法。</p>
<ul>
<li>show tables或show tables from database_name; — 显示当前数据库中所有表的名称。</li>
<li>show tables like ‘my<em>%’; — 显示当前数据库中以my</em>开头的表。</li>
<li>show databases; — 显示mysql中所有数据库的名称。</li>
<li>show [full] columns from table_name from database_name; 或show [full] columns from database_name.table_name; — 显示表中列名称。</li>
<li>show grants for user_name; — 显示一个用户的权限，显示结果类似于grant 命令。</li>
<li>show index from table_name; — 显示表的索引。</li>
<li>show status;(show master status;show slave status) — 显示一些系统特定资源的信息，例如，正在运行的线程数量。</li>
<li>show variables; — 显示系统变量的名称和值。</li>
<li>show [full] processlist; — 显示系统中正在运行的所有进程，也就是当前正在执行的查询。大多数用户可以查看他们自己的进程，但是如果他们拥有process权限，就可以查看所有人的进程，包括密码。</li>
<li>show table status; — 显示当前使用或者指定的database中的每个表的信息。信息包括表类型和表的最新更新时间。</li>
<li>show privileges; — 显示服务器所支持的不同权限。</li>
<li>show create database database_name; — 显示create database 语句是否能够创建指定的数据库。</li>
<li>show create table table_name; — 显示create database 语句是否能够创建指定的数据库。</li>
<li>show engies; — 显示安装以后可用的存储引擎和默认引擎。</li>
<li>show innodb status; — 显示innoDB存储引擎的状态。</li>
<li>show logs; — 显示BDB存储引擎的日志。</li>
<li>show warnings; — 显示最后一个执行的语句所产生的错误、警告和通知。</li>
<li>show errors; — 只显示最后一个执行语句所产生的错误。</li>
<li>show [storage] engines; –显示安装后的可用存储引擎和默认引擎。</li>
</ul>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://www.bio-info-trainee.com/1045.html" target="_blank" rel="external">生物信息学学者学习mysql之路</a></p>
<p>（2）<a href="http://dev.dafan.info/detail/194350?p=55" target="_blank" rel="external">Linux环境变量LD_LIBRARY_PATH</a></p>
<p>（3）<a href="https://www.cnblogs.com/foreverycc/p/5491884.html" target="_blank" rel="external">使用MySQL制作SNP146数据库</a></p>
<p>（4）<a href="https://nsaunders.wordpress.com/2011/05/18/how-to-create-a-partial-ucsc-genome-mysql-database/" target="_blank" rel="external">How to: create a partial UCSC genome MySQL database</a></p>
<p>（5）<a href="http://www.jianshu.com/p/dc58a4efdd84" target="_blank" rel="external">5分钟入门MySQL Workbench</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;主要介绍win下和linux下连接重用生信数据库，操作数据库中表，以及根据自己的需要下载公共数据，创建mysql数据库。&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;mysql数据库与生信&lt;/blockquote&gt;
    
    </summary>
    
      <category term="MySQL" scheme="https:///AnJingwd.github.io/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https:///AnJingwd.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>设计及挑选捕获测序探针，并计算覆盖度</title>
    <link href="https:///AnJingwd.github.io/2017/10/29/%E8%AE%BE%E8%AE%A1%E5%8F%8A%E6%8C%91%E9%80%89%E6%8D%95%E8%8E%B7%E6%B5%8B%E5%BA%8F%E6%8E%A2%E9%92%88%EF%BC%8C%E5%B9%B6%E8%AE%A1%E7%AE%97%E8%A6%86%E7%9B%96%E5%BA%A6/"/>
    <id>https:///AnJingwd.github.io/2017/10/29/设计及挑选捕获测序探针，并计算覆盖度/</id>
    <published>2017-10-29T04:17:18.000Z</published>
    <updated>2017-10-30T11:53:19.208Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">使用bedtools进行捕获测序引物的筛选并计算覆盖度</blockquote>

<a id="more"></a>
<h1 id="基因CDS区域捕获测序，引物设计"><a href="#基因CDS区域捕获测序，引物设计" class="headerlink" title="基因CDS区域捕获测序，引物设计"></a>基因CDS区域捕获测序，引物设计</h1><h2 id="确定目标基因的某一转录本的CDS区域坐标，整理成bed文件"><a href="#确定目标基因的某一转录本的CDS区域坐标，整理成bed文件" class="headerlink" title="确定目标基因的某一转录本的CDS区域坐标，整理成bed文件"></a>确定目标基因的某一转录本的CDS区域坐标，整理成bed文件</h2><p>最简单的方法是从gff文件中，根据转录本蛋白ID,直接grep抽取出CDS区间的chr, satrt, end</p>
<pre><code>wget http://ftp.ncbi.nih.gov/refseq/H_sapiens/annotation/GRCh38_latest/refseq_identifiers/GRCh38_latest_genomic.gff.gz
ungz GRCh38_latest_genomic.gff.gz
mv GRCh38_latest_genomic.gff GRCh38.p10_ncbi.gff

#get genes positions by gene symbol list in gene.txt
gene=($(cat gene.txt));for gene in ${gene[@]}; do grep -m 1 &quot;${gene}&quot; GRCh38.p10_ncbi.gff &gt;&gt;gene_result.txt;done
</code></pre><p><img src="https://i.imgur.com/K0bANVd.jpg" alt=""></p>
<pre><code>#get cds regions positions by proteins list in proteins_id.txt
protein_id=($(cat protein_id.txt));for protein_id in ${protein_id[@]}; do grep &quot;${protein_id}&quot; GRCh38.p10_ncbi.gff &gt;&gt;cds_result.txt;done
</code></pre><p><img src="https://i.imgur.com/XmfwHoG.jpg" alt=""></p>
<pre><code>#get gene chrom locations or transfor gene symbol ID to essenble ID by gene symbol list in gene.txt
wget http://ftp.ncbi.nih.gov/refseq/H_sapiens/Homo_sapiens.gene_info.gz
head -n 1 Homo_sapiens.gene_info &gt; chr_result.txt
gene=($(cat gene.txt));for gene in ${gene[@]}; do grep -m 1 &quot;${gene}&quot; Homo_sapiens.gene_info &gt;&gt;chr_result.txt;done
</code></pre><p><img src="https://i.imgur.com/QQnWpwO.jpg" alt=""></p>
<p>整理成bed文件</p>
<p><img src="https://i.imgur.com/flbem5B.jpg" alt=""></p>
<p>安捷伦的<a href="http://www.genomics.agilent.com/zh/Custom-Design-Tools/eArray/?cid=AG-PT-122&amp;tabId=AG-PR-1047&amp;pageId=1456&amp;crumbAction=push&amp;navAction=pop" target="_blank" rel="external">eArray</a>可以设计，输入只需要目标区域的bed文件即可！</p>
<ul>
<li><a href="https://earray.chem.agilent.com/cghanalytics/index.html" target="_blank" rel="external">Agilent Genomic Workbench Downloads</a> </li>
<li><a href="https://earray.chem.agilent.com/cghanalytics/InstData/7.0/G3800-90046_Installation.pdf" target="_blank" rel="external">Installation Guide</a></li>
</ul>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>（1）NCBI 的FTP站点中GRCh37和GRCh38的最新版基因组注释数据在该路径下：<a href="http://ftp.ncbi.nih.gov/refseq/H_sapiens/annotation" target="_blank" rel="external">http://ftp.ncbi.nih.gov/refseq/H_sapiens/annotation</a></p>
<ul>
<li>Last updated: April 19, 2017</li>
<li><strong>assembly name: GRCh38.p10</strong>（第十版）</li>
</ul>
<p>（2）对于做湿实验的同学可能通过浏览器的方式查询CDS区域坐标，但存在一个问题（<strong>首先浏览器上的版本是GRCh38.p7（第七版）</strong>）！</p>
<p>NCBI —&gt;选择gene数据库—&gt;输入gene symbol —-&gt;点选gene symbol—-&gt;genebank—-&gt;找到目标转录本</p>
<p><img src="https://i.imgur.com/pjVTs2f.jpg" alt=""></p>
<p><img src="https://i.imgur.com/6C2Lk1p.jpg" alt=""></p>
<p>&emsp;&emsp;可以看到CDS由一段一段的区域join形成的，但这是相对坐标，如何转换成基因组的绝对坐标呢？或许你会用基因的起始和结束位置进行加减，但尝试比较了下，发现坐标偏差很大（0.2M）。首先是<strong>版本的问题？</strong>, 其次可能NCBI的坐标系统中CDS区域的位置，使用在基因区间的基础上加减的做法不对。将<a href="https://www.ncbi.nlm.nih.gov/nuccore/NC_000007.14?report=genbank&amp;from=140719331&amp;to=140924764&amp;strand=true" target="_blank" rel="external">上述链接</a>最下方的FASTA序列的第62-199区间摘取出来，在UCSC中<a href="http://genome.ucsc.edu/cgi-bin/hgBlat?command=start" target="_blank" rel="external">BLAT</a>发现其结果是与从GRCh38.p10_ncbi.gff文件摘取出来的坐标一致的，<strong>所以用基因的起始和结束位置进行加减的方法是不正确的。</strong></p>
<h1 id="引物筛选"><a href="#引物筛选" class="headerlink" title="引物筛选"></a>引物筛选</h1><ul>
<li><p>A组引物扩增区域（Amplicon_Stop-Amplicon_Start）长度范围为126-274nt，平均值为238nt</p>
</li>
<li><p>B组引物扩增区域（Amplicon_Stop-Amplicon_Start）长度范围为124-174nt,平均值为158nt</p>
</li>
<li><p>A,B两组引物都是针对同一目标区域设计的捕获探针，但是参数不同，导致扩增长度不同，覆盖度不同</p>
</li>
</ul>
<p>&emsp;&emsp;所以A组引物（primer20）偏长，B组引物（primer24）偏短，现在需要将A组引物中扩增区域大于250nt的目标区域用 B组引物来扩增，实现长度互补和综合。</p>
<p>方法：使用bedtools工具即可！</p>
<ol>
<li>将targeted.bed与primer20.bed查看覆盖情况，将没有引物覆盖的，或者覆盖的引物扩增长度大于250nt的<strong>目标区域的bed区间</strong>抽取出来整理为target_region_of_primer20_up250.bed</li>
<li>将target_region_of_primer20_up250.bed与primer24.bed查看覆盖情况，将覆盖上的引物挑出，<strong>此时原则是目标区域即使有某条引物能全部覆盖，但为了测序数据更加准确，一个位置保证2-3个引物覆盖为好</strong></li>
<li>将A组合B组引物保留的部分引物合并，同时整理出A,B两组引物都没有覆盖的目标区域。</li>
</ol>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#step1</span></div><div class="line">bedtools intersect -a target.bed -b primer20.bed -wao &gt; primer20_result.txt </div><div class="line">awk <span class="string">'$6-$5&gt;250 &#123;print $1,$2,$3&#125;'</span> primer20_result.txt &gt; target_region_of_primer20_up250.bed</div><div class="line"></div><div class="line"><span class="comment">#step2</span></div><div class="line">bedtools intersect -a target_region_of_primer20_up250.bed -b primer24.bed -wao &gt; primer24_result.txt</div><div class="line"></div><div class="line"><span class="comment">#step3</span></div><div class="line">primer20=($(cat primer20_reserved.txt));<span class="keyword">for</span> primer20 <span class="keyword">in</span> <span class="variable">$&#123;primer20[@]&#125;</span>; <span class="keyword">do</span> grep -m 1 <span class="string">"<span class="variable">$&#123;primer20&#125;</span>"</span> primer20_original.txt &gt;&gt;primer20_reserved_result.txt;<span class="keyword">done</span></div><div class="line"></div><div class="line">primer24=($(cat primer24_reserved.txt));<span class="keyword">for</span> primer24 <span class="keyword">in</span> <span class="variable">$&#123;primer24[@]&#125;</span>; <span class="keyword">do</span> grep -m 1 <span class="string">"<span class="variable">$&#123;primer24&#125;</span>"</span> primer24_original.txt &gt;&gt;primer24_reserved_result.txt;<span class="keyword">done</span></div></pre></td></tr></table></figure>
<h1 id="根据targete-bed和primer20-bed计算覆盖度"><a href="#根据targete-bed和primer20-bed计算覆盖度" class="headerlink" title="根据targete.bed和primer20.bed计算覆盖度"></a>根据targete.bed和primer20.bed计算覆盖度</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">(1)检验bed区间是否有重叠</div><div class="line"></div><div class="line">length_sum1=`awk <span class="string">'BEGIN &#123;x=0&#125;&#123;x=x+$3-$2+1&#125;&#123;print x&#125;'</span> target.bed |tail -n 1`</div><div class="line">length_sum2=`sort -k1,1 -k2,2n target.bed |bedtools merge -i | awk <span class="string">'BEGIN &#123;x=0&#125;&#123;x=x+$3-$2+1&#125;&#123;print x&#125;'</span>|tail -n 1`</div><div class="line"></div><div class="line"><span class="comment">#如果length_sum1 &gt;  length_sum2,有重叠；如果length_sum1 = length_sum2,五重叠</span></div><div class="line"><span class="comment">#所以target.bed无重叠，primer20和primer24有重叠</span></div><div class="line"></div><div class="line">(2)先用bedtools工具得到primer20的merge后的bed文件，然后与target.bed查看覆盖碱基数，并求和</div><div class="line">sort -k1,1 -k2,2n primer20.bed|bedtools merge -i &gt; primer20_merge.bed</div><div class="line">length_sum3=`bedtools intersect -a target.bed -b primer20_merge.bed -wao | awk <span class="string">'BEGIN &#123;x=0&#125;&#123;x=x+$7&#125;&#123;print x&#125;'</span> |tail -n 1`  </div><div class="line"></div><div class="line">coverage = length_sum3/length_sum1*100</div></pre></td></tr></table></figure>
<h2 id="bedtools-merge功能图示（需要先排序，否则报错）"><a href="#bedtools-merge功能图示（需要先排序，否则报错）" class="headerlink" title="bedtools merge功能图示（需要先排序，否则报错）"></a>bedtools merge功能图示（需要先排序，否则报错）</h2><p><img src="https://i.imgur.com/kAcaOMe.jpg" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://blog.sina.com.cn/s/blog_5d5f892a0102v665.html" target="_blank" rel="external">染色体位置overlap的计算–bedtools应用</a></p>
<p>（2）<a href="https://www.biostars.org/p/65558/" target="_blank" rel="external">Tool: Converting Genome Coordinates From One Genome Version To Another (Ucsc Liftover, Ncbi Remap, Ensembl Api)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;使用bedtools进行捕获测序引物的筛选并计算覆盖度&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS实验" scheme="https:///AnJingwd.github.io/categories/NGS%E5%AE%9E%E9%AA%8C/"/>
    
    
      <category term="NGS实验" scheme="https:///AnJingwd.github.io/tags/NGS%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库安装及入门</title>
    <link href="https:///AnJingwd.github.io/2017/10/21/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E5%8F%8A%E5%85%A5%E9%97%A8/"/>
    <id>https:///AnJingwd.github.io/2017/10/21/MySQL数据库安装及入门/</id>
    <published>2017-10-21T10:06:15.000Z</published>
    <updated>2017-11-23T13:46:26.321Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">无root权限，从源码编译安装MySQL数据库，及其简单使用</blockquote>

<a id="more"></a>
<h1 id="科德十二定律"><a href="#科德十二定律" class="headerlink" title="科德十二定律"></a>科德十二定律</h1><p><a href="https://en.wikipedia.org/wiki/Codd%27s_12_rules" target="_blank" rel="external">科德十二定律（Codd’s 12 rules）</a>是由数据库的关系模型的先驱埃德加·科德（EdgarF. Codd）提出的，使数据库管理系统关系化需满足的十三条（从0至12）准则。又称为“黄金十二定律”。</p>
<ul>
<li>准则0:&emsp;一个关系形的关系数据库系统必须能完全通过它的关系能力来管理数据库。</li>
<li>准则1 信息准则: &emsp;关系数据库系统的所有信息都应该在逻辑一级上用表中的值这一种方法显式的表示。</li>
<li>准则2 保证访问准则: &emsp; 依靠表名、主码和列名的组合，保证能以逻辑方式访问关系数据库中的每个数据项。</li>
<li>准则3 空值的系统化处理: &emsp;全关系的关系数据库系统支持空值的概念，并用系统化的方法处理空值。</li>
<li>准则4 基于关系模型的动态的联机数据字典: &emsp;数据库的描述在逻辑级上和普通数据采用同样的表述方式。</li>
<li>准则5 统一的数据子语言: &emsp;一个关系数据库系统可以具有几种语言和多种终端访问方式，但必须有一种语言，它的语句可以表示为严格语法规定的字符串，并能全面的支持各种规则。</li>
<li>准则6 视图更新准则: &emsp;所有理论上可更新的视图也应该允许由系统更新。</li>
<li>准则7 高级的插入、修改和删除操作: &emsp;系统应该对各种操作进行查询优化。</li>
<li>准则8 数据的物理独立性: &emsp;无论数据库的数据在存储表示或存取方法上作任何变化，应用程序和终端活动都保持逻辑上的不变性。</li>
<li>准则9 数据逻辑独立性: &emsp;当对基本关系进行理论上信息不受损害的任何改变时，应用程序和终端活动都保持逻辑上的不变性。</li>
<li>准则10 数据完整的独立性: &emsp;关系数据库的完整性约束条件必须是用数据库语言定义并存储在数据字典中的。</li>
<li>准则11 分布独立性: &emsp;关系数据库系统在引入分布数据或数据重新分布时保持逻辑不变。</li>
<li>准则12 无破坏准则: &emsp;如果一个关系数据库系统具有一个低级语言，那么这个低级语言不能违背或绕过完整性准则。</li>
</ul>
<h1 id="Relational-Database-Management-Systems-RDBMS"><a href="#Relational-Database-Management-Systems-RDBMS" class="headerlink" title="Relational Database Management Systems (RDBMS)"></a>Relational Database Management Systems (RDBMS)</h1><table>
<thead>
<tr>
<th>Commercial products</th>
<th>Open-source offerings</th>
</tr>
</thead>
<tbody>
<tr>
<td>Oracle</td>
<td>MySQL (Oracle)</td>
</tr>
<tr>
<td>DB2 (IBM)</td>
<td>PostgreSQL</td>
</tr>
<tr>
<td>MS SQL Server (Microsoft)</td>
<td>SQLite</td>
</tr>
</tbody>
</table>
<h1 id="下载MySQL"><a href="#下载MySQL" class="headerlink" title="下载MySQL"></a>下载MySQL</h1><p><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="external">下载MySQL源代码</a> </p>
<p><img src="https://i.imgur.com/jm0LLv7.png" alt=""></p>
<p><img src="https://i.imgur.com/1N13zGe.png" alt=""></p>
<h2 id="下载选项："><a href="#下载选项：" class="headerlink" title="下载选项："></a>下载选项：</h2><ul>
<li>Source Code -&gt; 源代码</li>
<li>Generic Linux (Architecture Independent) -&gt; 通用的Linux（独立结构）</li>
<li><p>Compressed TAR Archive，Includes Boost Headers -&gt; 选择带有Boost头的压缩包（MySQL需要Boost C++库构建）</p>
<p>  wget <a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-boost-5.7.20.tar.gz" target="_blank" rel="external">https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-boost-5.7.20.tar.gz</a></p>
</li>
</ul>
<h1 id="从源安装MySQL，需要安装CMake"><a href="#从源安装MySQL，需要安装CMake" class="headerlink" title="从源安装MySQL，需要安装CMake"></a>从源安装MySQL，需要安装CMake</h1><p>cmake，一个跨平台的编译自动配置工具（作用生成makefile 文件）</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!bin/sh</span></div><div class="line">HOME=/home/wangdong</div><div class="line">install_path=<span class="variable">$HOME</span>/<span class="built_in">local</span>/cmake</div><div class="line">mkdir -p <span class="variable">$install_path</span>/.src</div><div class="line"><span class="built_in">cd</span> <span class="variable">$install_path</span>/.src</div><div class="line">wget http://www.cmake.org/files/v2.8/cmake-2.8.12.2.tar.gz</div><div class="line">tar zxvf cmake-2.8.12.2.tar.gz</div><div class="line"><span class="built_in">cd</span> cmake-2.8.12.2</div><div class="line">./configure --prefix=<span class="variable">$install_path</span></div></pre></td></tr></table></figure>
<p>输出 CMake has bootstrapped.  Now run gmake.</p>
<p>#确保cmake没有错误发生</p>
<p>echo $?</p>
<p>0</p>
<p>#下面运行gmake命令</p>
<pre><code>gmake
gmake install
</code></pre><h1 id="编译安装MySQL"><a href="#编译安装MySQL" class="headerlink" title="编译安装MySQL"></a>编译安装MySQL</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">#（1）下载MySQL-5.6及创建相应目录结构</span></div><div class="line">HOME=/home/wangdong</div><div class="line">install_path=<span class="variable">$HOME</span>/<span class="built_in">local</span>/mysql</div><div class="line">mkdir -p /home/wangdong/<span class="built_in">local</span>/mysql</div><div class="line"></div><div class="line">wget https://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.35.tar.gz</div><div class="line">tar zxvf mysql-5.6.35.tar.gz</div><div class="line"><span class="built_in">cd</span> mysql-5.6.35</div><div class="line">mkdir <span class="variable">$install_path</span>/data</div><div class="line"></div><div class="line"><span class="comment">#（2）编译(系统已经安装cmake,此处徐使用上述自己安装的cmake)</span></div><div class="line">/home/wangdong/<span class="built_in">local</span>/cmake/.src/cmake-2.8.12.2/bin/cmake -DCMAKE_INSTALL_PREFIX=<span class="variable">$install_path</span>  \</div><div class="line">-DMYSQL_DATADIR=<span class="variable">$install_path</span>/data  \</div><div class="line">-DMYSQL_UNIX_ADDR=<span class="variable">$install_path</span>/mysql.sock  \</div><div class="line">-DDEFAULT_CHARSET=utf8  \</div><div class="line">-DDEFAULT_COLLATION=utf8_general_ci  \</div><div class="line">-DMYSQL_TCP_PORT=8701  \ </div><div class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1  \ </div><div class="line">-DENABLED_LOCAL_INFILE=1</div><div class="line"></div><div class="line"><span class="comment">#（3)安装</span></div><div class="line">make &amp;&amp; make install</div><div class="line"></div><div class="line"><span class="comment">#(4)配置（找到support-files/my-default.cnf，该文件是一个配置模板，在此基础上自己修改配置）</span></div><div class="line">cp support-files/my-default.cnf my.cnf</div><div class="line"></div><div class="line"><span class="comment">#(5)使用启动my.cnf配置文件中的设置启动mysqld_safe服务和启动mysql</span></div><div class="line"></div><div class="line">bin/mysqld_safe --defaults-file=my.cnf &amp;     <span class="comment">#&amp;表示后台运行</span></div><div class="line">support-files/mysql.server start|stop|restart   <span class="comment">#开始|停止|重启</span></div></pre></td></tr></table></figure>
<h2 id="如果执行成功，会提示如下内容："><a href="#如果执行成功，会提示如下内容：" class="headerlink" title="如果执行成功，会提示如下内容："></a>如果执行成功，会提示如下内容：</h2><p><img src="https://i.imgur.com/ueBDeEE.jpg" alt=""></p>
<p>同时，生成mysql.pid和mysql.sock文件，正常！</p>
<p><img src="https://i.imgur.com/xCmA0K1.jpg" alt=""></p>
<p>以及查看13306端口，正常！</p>
<p><img src="https://i.imgur.com/lQo2XsV.jpg" alt=""></p>
<h2 id="关于配置的注意事项"><a href="#关于配置的注意事项" class="headerlink" title="关于配置的注意事项"></a>关于配置的注意事项</h2><p>（1）最基本的需要修改以下7项（关于my.cnf配置文件的具体解释可以看这里（<a href="http://blog.csdn.net/l1028386804/article/details/50635169" target="_blank" rel="external">MySQL之——MySQL5.6 my.cnf 参数说明(附上自己服务器上真实配置文件</a>)））</p>
<ul>
<li>在[mysqld]里修改port=13306</li>
<li>在[mysqld]里修改sock文件位置（socket）</li>
<li>在[mysqld]里添加MySQL基础目录（basedir）</li>
<li>在[mysqld]里添加MySQL数据存储目录（datadir）</li>
<li>在[mysqld]里添加MySQL日志文件（log-error）</li>
<li>在[mysqld]里添加MySQL进程文件（pid-file）</li>
<li>在[mysqld]里添加指定MySQL数据库所属用户（user -这里填写你所用的linux用户）</li>
</ul>
<p>（2）检查MySQL默认端口3306是否被占用，执行命令：netstat -apn | grep 3306如下图表明3306已经被占用，那么换一个端口，建议端口号在10000以上，比如改成13306，所以可以设置port=13306</p>
<p><img src="https://i.imgur.com/KcpubsU.jpg" alt=""></p>
<p>如下图为my-default.cnf原始文件（模板）</p>
<p><img src="https://i.imgur.com/MVbfLC9.jpg" alt=""></p>
<p>如下图为修改配置后的my.cnf文件</p>
<p><img src="https://i.imgur.com/ZDz01xX.jpg" alt=""></p>
<p><strong>注意：修改好my.cnf文件后，记得创建/home/wangdong/local/mysql/data和/home/wangdong/local/mysql/logs文件目录，否则在第（5）步会报错</strong></p>
<h1 id="启动MySQL"><a href="#启动MySQL" class="headerlink" title="启动MySQL"></a>启动MySQL</h1><h2 id="每次启动MySQL都需要"><a href="#每次启动MySQL都需要" class="headerlink" title="每次启动MySQL都需要"></a>每次启动MySQL都需要</h2><pre><code>bin/mysqld_safe --defaults-file=my.cnf &amp;     #&amp;表示后台运行
support-files/mysql.server start   #开始
support-files/mysql.server stop   #关闭
</code></pre><p><img src="https://i.imgur.com/QQPY7WV.jpg" alt=""></p>
<p>可以看到MySQL正常启动了，但是写入日志时不具有/var/log/mysqld.log的权限，问题是我们之前不是设置了log-error   = /home/wangdong/local/mysql/logs/mysql_error.log吗？原因在于在linux系统中mysql配置文件的读取顺序为:/etc/my.cnf;/etc/mysql/my.cnf;/usr/local/mysql/etc/my.cnf ;~/.my.cnf </p>
<p>我们可以使用locate查找系统已有的my.cnf配置文件，如下图，</p>
<p><img src="https://i.imgur.com/BpkeoHW.jpg" alt=""></p>
<p>网上搜了一下解决办法，删除系统上/etc目录下的my.cnf配置文件，但无root权限做不到的，但还好，写入日志文件无权限并不影响MySQL的正常启动和使用！</p>
<h3 id="MySQL数据库使用"><a href="#MySQL数据库使用" class="headerlink" title="MySQL数据库使用"></a>MySQL数据库使用</h3><h4 id="大致步骤包括："><a href="#大致步骤包括：" class="headerlink" title="大致步骤包括："></a>大致步骤包括：</h4><ol>
<li>第一次访问MySQL数据库的时候要以root进去（及-u root），且没有密码。 </li>
<li>然后使用mysql数据库，修改root密码。 </li>
<li>创建新的用户，以及授权 </li>
<li>正常使用、登录mysql,root进去，且需要密码。</li>
</ol>
<h5 id="第一次访问MySQL数据库"><a href="#第一次访问MySQL数据库" class="headerlink" title="第一次访问MySQL数据库"></a>第一次访问MySQL数据库</h5><p>执行命令格式：bin/mysql –socket=mysql.sock -u root </p>
<p><strong>一定要加上–socket=mysql.sock（mysql安装目录中的mysql.sock，否则提示ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock’ (2)）</strong></p>
<h5 id="查看已有数据库，删除内置的test数据库"><a href="#查看已有数据库，删除内置的test数据库" class="headerlink" title="查看已有数据库，删除内置的test数据库"></a>查看已有数据库，删除内置的test数据库</h5><p>执行命令（注意命令末尾的分号不可少）：</p>
<pre><code>show databases;
drop database test;
</code></pre><p><img src="https://i.imgur.com/7Bl2Jm8.jpg" alt=""></p>
<h5 id="查看内置MySQL用户，删除匿名用户"><a href="#查看内置MySQL用户，删除匿名用户" class="headerlink" title="查看内置MySQL用户，删除匿名用户"></a>查看内置MySQL用户，删除匿名用户</h5><p>执行命令：</p>
<pre><code>use mysql;  #选择mysql数据库
select host, user, password from user; #从mysql数据库中的user表格中选择host, user, password三个字段
delete from user where user = &apos;&apos;;  
</code></pre><p><img src="https://i.imgur.com/XDLMMLx.jpg" alt=""></p>
<h5 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h5><p>执行命令：</p>
<pre><code>update user set password = password(&apos;rootab&apos;);
</code></pre><p><strong>修改密码后需要先关闭mysql服务，然后重新启动my.cnf配置文件中的设置启动mysqld_safe服务和启动mysql，使新密码生效！！</strong></p>
<p>执行命令：</p>
<pre><code>support-files/mysql.server stop
bin/mysqld_safe --defaults-file=my.cnf &amp;         
support-files/mysql.server start     
</code></pre><p><img src="https://i.imgur.com/Dn5ZSW9.jpg" alt=""></p>
<h5 id="正常使用，使用root登陆，并且需要密码登陆"><a href="#正常使用，使用root登陆，并且需要密码登陆" class="headerlink" title="正常使用，使用root登陆，并且需要密码登陆"></a>正常使用，使用root登陆，并且需要密码登陆</h5><p>mysql -u 用户名 -h host_name -P  端口号  -p密码  (<strong>‘-P 端口号’的P大写  ‘-p密码’的p小写，且密码(password)和p之间没有空格</strong>)</p>
<p>如bin/mysql –socket=mysql.sock -u root -h localhost -P 13306 -prootab </p>
<p>也可以这样写：</p>
<pre><code>bin/mysql --socket=mysql.sock -u root -h localhost -P 13306 -p 
</code></pre><p>然后在窗口弹出Enter password:时输入密码即可</p>
<p>（查看mysql命令的帮助: bin/mysql -I）</p>
<h5 id="将bin-mysql加入环境变量"><a href="#将bin-mysql加入环境变量" class="headerlink" title="将bin/mysql加入环境变量"></a>将bin/mysql加入环境变量</h5><pre><code>echo &apos;export PATH=/home/wangdong/local/mysql/bin:$PATH&apos;&gt;&gt;~/.bashrc  

source ~/.bashrc
</code></pre><p>以后登陆直接：</p>
<pre><code>WORKDIR=/home/wangdong/local/mysql/
mysqld_safe --defaults-file=$WORKDIR/my.cnf &amp;
$WORKDIR/support-files/mysql.server start
mysql --socket=$WORKDIR/mysql.sock -u root -h localhost -P 13306 -p 

Do somethings
exit;
$WORKDIR/support-files/mysql.server stop
</code></pre><p>(使用版本：Server version: 5.6.35 Source distribution)</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://segmentfault.com/a/1190000004026950" target="_blank" rel="external">CentOS 6.4编译安装mysql 5.7</a></p>
<p>（2）<a href="https://segmentfault.com/a/1190000010806192" target="_blank" rel="external">从源编译MySQL</a></p>
<p>（3）<a href="http://jingyan.baidu.com/article/ad310e80cf9ce81849f49ea2.html" target="_blank" rel="external">Linux MySQL免安装及配置</a></p>
<p>（4） <a href="http://blog.csdn.net/f229338596/article/details/72575403" target="_blank" rel="external">linux中无root权限，装mysql 于用户目录步骤</a></p>
<p>（5）<a href="https://jingyan.baidu.com/article/3c343ff7ca8eab0d37796317.html" target="_blank" rel="external">非root权限安装mysql</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;无root权限，从源码编译安装MySQL数据库，及其简单使用&lt;/blockquote&gt;
    
    </summary>
    
      <category term="MySQL" scheme="https:///AnJingwd.github.io/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https:///AnJingwd.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>R一页多图</title>
    <link href="https:///AnJingwd.github.io/2017/10/03/R%E4%B8%80%E9%A1%B5%E5%A4%9A%E5%9B%BE/"/>
    <id>https:///AnJingwd.github.io/2017/10/03/R一页多图/</id>
    <published>2017-10-03T08:24:48.000Z</published>
    <updated>2018-01-02T11:32:24.570Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;发表文章一般都要求将多个相关的图组合成单个图，并标上A,B,C等标签。所以总结一下R语言绘图的一页多图，以及多图的拼接，子母图等的各种实现方法，！</p>
<blockquote class="blockquote-center">R一页多图</blockquote>

<a id="more"></a>
<h1 id="cowplot：基于ggplot的可视化系统"><a href="#cowplot：基于ggplot的可视化系统" class="headerlink" title="cowplot：基于ggplot的可视化系统"></a>cowplot：基于ggplot的可视化系统</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>&emsp;&emsp;cowplot是一个ggplot2包的简单补充，意味着其可以为ggplot2提供出版物级的主题等。更重要的是，这个包可以组合多个”ggplot2”绘制的图为一个图，并且<strong>为每个图加上例如A,B,C等标签，</strong> 这在具体的出版物上通常是要求的。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">require</span>(cowplot)</div><div class="line">  </div><div class="line">plot.iris &lt;- ggplot(iris, aes(Sepal.Length, Sepal.Width)) +</div><div class="line">    geom_point() + facet_grid(. ~ Species) +</div><div class="line">    stat_smooth(method = <span class="string">"lm"</span>) +</div><div class="line">    background_grid(major = <span class="string">'y'</span>, minor = <span class="string">"none"</span>) +</div><div class="line">    panel_border() +</div><div class="line">    labs(title = <span class="string">"dot-line plot"</span>)</div><div class="line"></div><div class="line">plot.mpg &lt;- ggplot(mpg, aes(x = cty, y = hwy, colour = factor(cyl))) +</div><div class="line">    geom_point(size=<span class="number">2.5</span>) +</div><div class="line">    labs(title = <span class="string">"dot plot"</span>)</div><div class="line"></div><div class="line">plot.diamonds &lt;- ggplot(diamonds, aes(clarity, fill = cut)) +</div><div class="line">  geom_bar() +</div><div class="line">  theme(axis.text.x = element_text(angle=<span class="number">70</span>, vjust=<span class="number">0.5</span>)) +</div><div class="line">  labs(title = <span class="string">"bar plot"</span>)</div><div class="line"></div><div class="line">ggdraw() +</div><div class="line">  draw_plot(plot.iris, <span class="number">0</span>, <span class="number">.5</span>, <span class="number">1</span>, <span class="number">.5</span>) +</div><div class="line">  draw_plot(plot.mpg, <span class="number">0</span>, <span class="number">0</span>, <span class="number">.5</span>, <span class="number">.5</span>) +</div><div class="line">  draw_plot(plot.diamonds, <span class="number">.5</span>, <span class="number">0</span>, <span class="number">.5</span>, <span class="number">.5</span>) +</div><div class="line">  draw_plot_label(c(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>), c(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>), c(<span class="number">1</span>, <span class="number">0.5</span>, <span class="number">0.5</span>), size = <span class="number">15</span>)</div></pre></td></tr></table></figure>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.imgur.com/iLl9xR6.jpg" alt=""></p>
<p><strong>注意：其中draw_plot(plot, x = 0, y = 0, width = 1, height = 1, scale = 1)，坐标参数范围为0-1，相当于每幅图占画布长宽的百分比</strong></p>
<h1 id="rmisc包中的multiplot函数实现上述相同效果"><a href="#rmisc包中的multiplot函数实现上述相同效果" class="headerlink" title="rmisc包中的multiplot函数实现上述相同效果"></a>rmisc包中的multiplot函数实现上述相同效果</h1><p>简单高效，一句话搞定！可以实现上述同样的结果。</p>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">library</span>(<span class="string">"Rmisc"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"lattice"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div><div class="line">multiplot(plot.iris,plot.mpg,plot.diamonds, layout = matrix(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), nrow=<span class="number">2</span>, byrow=<span class="literal">TRUE</span>))</div></pre></td></tr></table></figure>
<p><strong>下面看看源码中multiplot函数，本质是grid包！！</strong></p>
<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">multiplot &lt;- <span class="keyword">function</span>(<span class="keyword">...</span>, plotlist=<span class="literal">NULL</span>, file, cols=<span class="number">1</span>, layout=<span class="literal">NULL</span>) &#123;</div><div class="line">  <span class="keyword">library</span>(grid)</div><div class="line"></div><div class="line">  <span class="comment"># Make a list from the ... arguments and plotlist</span></div><div class="line">  plots &lt;- c(list(<span class="keyword">...</span>), plotlist)</div><div class="line"></div><div class="line">  numPlots = length(plots)</div><div class="line"></div><div class="line">  <span class="comment"># If layout is NULL, then use 'cols' to determine layout</span></div><div class="line">  <span class="keyword">if</span> (is.null(layout)) &#123;</div><div class="line">    <span class="comment"># Make the panel</span></div><div class="line">    <span class="comment"># ncol: Number of columns of plots</span></div><div class="line">    <span class="comment"># nrow: Number of rows needed, calculated from # of cols</span></div><div class="line">    layout &lt;- matrix(seq(<span class="number">1</span>, cols * ceiling(numPlots/cols)),</div><div class="line">                    ncol = cols, nrow = ceiling(numPlots/cols))</div><div class="line">  &#125;</div><div class="line"></div><div class="line"> <span class="keyword">if</span> (numPlots==<span class="number">1</span>) &#123;</div><div class="line">    print(plots[[<span class="number">1</span>]])</div><div class="line"></div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="comment">###新建图表版面</span></div><div class="line">    grid.newpage() </div><div class="line">    <span class="comment">####将版面分成nrow(layout)*ncol(layout)的矩阵</span></div><div class="line">    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))</div><div class="line"></div><div class="line">    <span class="comment"># Make each plot, in the correct location</span></div><div class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:numPlots) &#123;</div><div class="line">      <span class="comment"># Get the i,j matrix positions of the regions that contain this subplot</span></div><div class="line">      matchidx &lt;- as.data.frame(which(layout == i, arr.ind = <span class="literal">TRUE</span>))</div><div class="line"></div><div class="line">      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,</div><div class="line">                                      layout.pos.col = matchidx$col))</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="grid包实现上述相同效果"><a href="#grid包实现上述相同效果" class="headerlink" title="grid包实现上述相同效果"></a>grid包实现上述相同效果</h1><h2 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">grid.newpage()  <span class="comment">###新建图表版面</span></div><div class="line">grid.text(<span class="string">"title of this panel"</span>, vp = viewport(layout.pos.row = <span class="number">1</span>, layout.pos.col = <span class="number">1</span>:<span class="number">2</span>))</div><div class="line">pushViewport(viewport(layout = grid.layout(<span class="number">2</span>,<span class="number">2</span>))) <span class="comment">####将版面分成2*2矩阵</span></div><div class="line">vplayout &lt;- <span class="keyword">function</span>(x,y)&#123;viewport(layout.pos.row = x, layout.pos.col = y)&#125;</div><div class="line">print(plot.iris, vp = vplayout(<span class="number">1</span>,<span class="number">1</span>:<span class="number">2</span>))   <span class="comment">###将（1,1)和(1,2)的位置画图plot.iris</span></div><div class="line">print(plot.mpg, vp = vplayout(<span class="number">2</span>,<span class="number">1</span>))     <span class="comment">###将(2,1)的位置画图plot.mpg         </span></div><div class="line">print(plot.diamonds , vp = vplayout(<span class="number">2</span>,<span class="number">2</span>))    <span class="comment">###将（2,2)的位置画图plot.diamonds</span></div></pre></td></tr></table></figure>
<h1 id="使用gridExtra包实现上述相同效果"><a href="#使用gridExtra包实现上述相同效果" class="headerlink" title="使用gridExtra包实现上述相同效果"></a>使用gridExtra包实现上述相同效果</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">grid.arrange( arrangeGrob(plot.iris,left=<span class="string">"A"</span>), arrangeGrob(plot.mpg, left=<span class="string">"B"</span>), arrangeGrob(plot.diamonds, left=<span class="string">"C"</span>),</div><div class="line">              layout_matrix = matrix(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), ncol=<span class="number">2</span>, byrow=<span class="literal">TRUE</span>), </div><div class="line">              top = <span class="string">"Title"</span>,left = <span class="string">"This is my global Y-axis title"</span>)</div></pre></td></tr></table></figure>
<h2 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.imgur.com/PaFixxo.jpg" alt=""></p>
<p><strong>单个图的标签（A,B,C）位置和属性不是很方便调整</strong></p>
<h1 id="使用gridExtra包实现多图的轴向组合"><a href="#使用gridExtra包实现多图的轴向组合" class="headerlink" title="使用gridExtra包实现多图的轴向组合"></a>使用gridExtra包实现多图的轴向组合</h1><h2 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">hist_top &lt;- ggplot()+geom_histogram(aes(mtcars$mpg)) <span class="comment">#绘制上方条形图</span></div><div class="line"></div><div class="line">empty &lt;- ggplot()+geom_point(aes(<span class="number">1</span>,<span class="number">1</span>), colour=<span class="string">"white"</span>)+</div><div class="line">  theme(axis.ticks=element_blank(), </div><div class="line">        panel.background=element_blank(), </div><div class="line">        axis.line =element_blank(),</div><div class="line">        axis.text.x=element_blank(), axis.text.y=element_blank(),           </div><div class="line">        axis.title.x=element_blank(), axis.title.y=element_blank())</div><div class="line"></div><div class="line">scatter &lt;- ggplot()+geom_point(aes(mtcars$mpg, mtcars$qsec)) <span class="comment">#绘制主图散点图</span></div><div class="line">hist_right &lt;- ggplot()+geom_histogram(aes(mtcars$qsec))+coord_flip() <span class="comment">#绘制右侧条形图</span></div><div class="line"></div><div class="line"><span class="comment">#最终组合，由四个图拼图而成，只是右上角的图已经将各种标注去除了</span></div><div class="line">grid.arrange(hist_top, empty, scatter, hist_right, ncol=<span class="number">2</span>, nrow=<span class="number">2</span>, </div><div class="line">             widths=c(<span class="number">4</span>, <span class="number">1</span>), heights=c(<span class="number">1</span>, <span class="number">4</span>))</div></pre></td></tr></table></figure>
<h2 id="结果-2"><a href="#结果-2" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.imgur.com/G8jWWtv.jpg" alt=""></p>
<h1 id="其实绘制这种组合图已经有相应的R包了–ggExtra"><a href="#其实绘制这种组合图已经有相应的R包了–ggExtra" class="headerlink" title="其实绘制这种组合图已经有相应的R包了–ggExtra"></a>其实绘制这种组合图已经有相应的R包了–ggExtra</h1><h2 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line">df &lt;- data.frame(x = mtcars$mpg, y = mtcars$qsec)</div><div class="line">p &lt;- ggplot(df, aes(x, y)) + geom_point() + theme_classic()</div><div class="line">ggExtra::ggMarginal(p, type = <span class="string">"histogram"</span>)</div></pre></td></tr></table></figure>
<p><strong>ggExtra包中最主要的函数ggMarginal - Add marginal histograms/boxplots/density plots to ggplot2 scatterplots</strong></p>
<h1 id="子母图"><a href="#子母图" class="headerlink" title="子母图"></a>子母图</h1><h2 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h2><p>&emsp;&emsp;当做分组条形图时，有时碰到一组数据特北大，其他组数据特别小，这时候就不太美观了。可能你想到的第一个办法是截断，但其实还可以用字母图，形成局部放大的效果，既可以从整体上对比，又兼顾特别小的数据组可以轻松查看，而没必要单独做两张图。</p>
<h2 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 载入需要的包</span></div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(Rmisc)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(grid)</div><div class="line"></div><div class="line"><span class="comment">#创建数据</span></div><div class="line">A &lt;- rnorm(<span class="number">10</span>,<span class="number">75</span>,<span class="number">10</span>)</div><div class="line">B &lt;- rnorm(<span class="number">10</span>,<span class="number">12</span>,<span class="number">5</span>)</div><div class="line">C &lt;- rnorm(<span class="number">10</span>,<span class="number">4</span>,<span class="number">3</span>)</div><div class="line">Group &lt;- c(rep(<span class="string">'A'</span>,<span class="number">10</span>),rep(<span class="string">'B'</span>,<span class="number">10</span>),rep(<span class="string">'C'</span>,<span class="number">10</span>))</div><div class="line">Value &lt;- c(A,B,C)</div><div class="line">D &lt;- data.frame(Group,Value)</div><div class="line"></div><div class="line"><span class="comment"># 求标准差，后面画误差要用</span></div><div class="line">DSe &lt;- summarySE(D,measurevar = <span class="string">'Value'</span>,groupvars = <span class="string">'Group'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 把组别转化成因子</span></div><div class="line">D$Group &lt;- factor(D$Group)</div><div class="line"></div><div class="line"><span class="comment"># 挑三种颜色</span></div><div class="line">C &lt;- c(<span class="string">'#55a0fb'</span>,<span class="string">'#ff8080'</span>,<span class="string">'#c5944e'</span>)</div><div class="line"></div><div class="line"><span class="comment">#画大图</span></div><div class="line">p1 &lt;- ggplot(DSe,aes(Group,Value)) + <span class="comment"># 定义环境</span></div><div class="line">  geom_bar(aes(Group,Value,fill = Group),stat = <span class="string">'identity'</span>,width = <span class="number">0.5</span>,show.legend = <span class="literal">T</span>) + <span class="comment"># 画条形图</span></div><div class="line">  geom_errorbar(aes(ymin = Value-se, ymax = Value+se),width = <span class="number">.2</span>) + <span class="comment">#加误差线</span></div><div class="line">  scale_fill_manual(values = C) + <span class="comment"># 配色</span></div><div class="line">  labs(x=<span class="string">'修改X轴为Group'</span>,y=<span class="string">'修改Y轴为Value'</span>,title = <span class="string">'添加标题'</span>)+</div><div class="line">  theme(axis.title = element_text(face = <span class="string">'bold'</span>),<span class="comment"># 定义主題，如坐标轴，标题样式、背景等</span></div><div class="line">        axis.text = element_text(face = <span class="string">'bold'</span>,colour = <span class="string">'black'</span>),</div><div class="line">        plot.title = element_text(face = <span class="string">'bold'</span>,colour = <span class="string">'black'</span>,hjust = <span class="number">0.5</span>,size = <span class="number">20</span>),</div><div class="line">        legend.background = element_rect(I(<span class="number">0</span>),linetype = <span class="number">1</span>))</div><div class="line"></div><div class="line">p1 <span class="comment"># 看下效果</span></div><div class="line"></div><div class="line"><span class="comment"># 选择小数据集、小颜色集</span></div><div class="line"></div><div class="line">DSe2 &lt;- DSe[<span class="number">2</span>:<span class="number">3</span>,]</div><div class="line"></div><div class="line">C2 &lt;- C[<span class="number">2</span>:<span class="number">3</span>]</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 画小图，基本和大图一樣，后面要背景透明、显示坐标轴</span></div><div class="line"></div><div class="line">p2 &lt;- ggplot(DSe2,aes(Group,Value)) + </div><div class="line">  geom_bar(aes(Group,Value,fill = Group), stat = <span class="string">'identity'</span>,width = <span class="number">0.5</span>) + </div><div class="line">  geom_errorbar(aes(ymin = Value-se, ymax = Value+se),width = <span class="number">.2</span>)+</div><div class="line">  scale_fill_manual(values = C2)+</div><div class="line">  guides(fill = <span class="literal">F</span>)+</div><div class="line">  theme(axis.text = element_text(face = <span class="string">'bold'</span>,colour = <span class="string">'black'</span>),</div><div class="line">        axis.title.y = element_blank(),</div><div class="line">        axis.line = element_line(linetype = <span class="number">1</span>,colour = <span class="string">'black'</span>), <span class="comment"># 显示坐标轴</span></div><div class="line">        plot.background = element_rect(I(<span class="number">0</span>),linetype = <span class="number">0</span>), <span class="comment"># 背景透明</span></div><div class="line">        panel.background = element_rect(I(<span class="number">0</span>)),</div><div class="line">        panel.grid.major = element_line(colour = <span class="literal">NA</span>),</div><div class="line">        panel.grid.minor = element_line(colour = <span class="literal">NA</span>))</div><div class="line"></div><div class="line">p2 <span class="comment"># 看下效果</span></div><div class="line"></div><div class="line"><span class="comment"># 嵌套</span></div><div class="line">sub &lt;- viewport(width = <span class="number">0.5</span>,height = <span class="number">0.4</span>,x = <span class="number">0.64</span>,y = <span class="number">0.6</span>) </div><div class="line"><span class="comment"># 配置环境。前兩個是子图的大小比例，后两个是位置，可自行调整到好看位置。</span></div><div class="line">p1 <span class="comment"># 上大图</span></div><div class="line">print(p2,vp = sub) <span class="comment"># 加小图</span></div></pre></td></tr></table></figure>
<h2 id="结果-3"><a href="#结果-3" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.imgur.com/dKOaE8e.jpg" alt=""></p>
<p><strong>关键代码就是利用了grid包的viewport函数，viewport简单说就是图形中一块矩形区域（类似于图层），是在这个区域中进一步绘图的基础。所以我们可以利用viewport函数在任意指定位置将两个或者多个图进行拼接~</strong></p>
<hr>
<h1 id="ggplot2之分组和分面"><a href="#ggplot2之分组和分面" class="headerlink" title="ggplot2之分组和分面"></a>ggplot2之分组和分面</h1><p><strong>&emsp;&emsp;以上是不同数据来源的图，以不同展现形式组合成一个图，另外ggplot2对一个数据集合进行分组，通过分面绘图，也算是实现一页多图的效果吧~</strong></p>
<h2 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">setwd(<span class="string">"F:/R working directory/GO enrichment"</span>)</div><div class="line">data&lt;-read.csv(<span class="string">"GO.csv"</span>,header=<span class="literal">TRUE</span>,check.names = <span class="literal">FALSE</span>)</div><div class="line">data_new&lt;-subset(data,data$FDR&lt;<span class="number">0.5</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line">ggplot(data=data_new)+</div><div class="line">  theme(plot.margin=unit(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>),<span class="string">"cm"</span>))+  <span class="comment">#调整作图边距，上，右，下，左</span></div><div class="line">  geom_bar(aes(x=Term,y=Count,fill=-log10(Pvalue)),stat=<span class="string">"identity"</span>)+ <span class="comment">#指定横纵变量，stat指定统计变换</span></div><div class="line">  scale_fill_gradient(low=<span class="string">'red'</span>,high=<span class="string">'blue'</span>)+xlab(<span class="string">''</span>)+ylab(<span class="string">''</span>)+   <span class="comment">#指定注释条带</span></div><div class="line">  <span class="comment">#指定横纵标签的大小，角度，距离等细节</span></div><div class="line">  theme(axis.text.x = element_text(color=<span class="string">'black'</span>,size = <span class="number">5</span>,angle=<span class="number">90</span>, hjust=<span class="number">1</span>),</div><div class="line">        axis.text.y = element_text(color=<span class="string">'black'</span>,size=<span class="number">10</span>))+   </div><div class="line">        facet_grid(.~Type)  <span class="comment">#根据Type划分作图区块</span></div></pre></td></tr></table></figure>
<h2 id="结果-4"><a href="#结果-4" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.imgur.com/7DSlUOH.jpg" alt=""></p>
<p><strong>可以看到结果并不是很好，横轴标签每个分组（BP,CC,MF）均含有13个通路，这是三个分组富集到的GO通路的交集，空值显示出来并不太美观</strong></p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"F:/R working directory/GO enrichment"</span>)</div><div class="line">data&lt;-read.csv(<span class="string">"GO.csv"</span>,header=<span class="literal">TRUE</span>,check.names = <span class="literal">FALSE</span>)</div><div class="line">data_new&lt;-subset(data,data$FDR&lt;<span class="number">0.5</span>) <span class="comment">#过滤数据</span></div><div class="line">Order &lt;-<span class="number">1</span>:dim(data_new)[<span class="number">1</span>]    <span class="comment">#生成横坐标输出顺序</span></div><div class="line">data_order&lt;-cbind(data_new,Order) <span class="comment">#数据框添加一列</span></div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line">ggplot(data=data_order,aes(x=reorder(Term,data_order$Order),y=-log10(Pvalue),fill=Type))+</div><div class="line">       coord_flip()+ <span class="comment">#将图横向</span></div><div class="line">       xlab(<span class="string">''</span>)+  <span class="comment">#覆盖横坐标</span></div><div class="line">       theme(plot.margin=unit(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>),<span class="string">"cm"</span>))+  <span class="comment">#调整作图边距，上，右，下，左</span></div><div class="line">       geom_bar(stat=<span class="string">"identity"</span>)</div></pre></td></tr></table></figure>
<h2 id="结果-5"><a href="#结果-5" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.imgur.com/FwUjvps.jpg" alt=""></p>
<p><strong>主要通过给数据框加一列来对每一组进行排序输出</strong></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://www.jianshu.com/p/ff05c07d42d7" target="_blank" rel="external">【R:ggplot2】同时绘制多个图</a> </p>
<p>（2）<a href="https://m.baidu.com/from=1099a/bd_page_type=1/ssid=0/uid=0/baiduid=146473DA1CD71725A4D168787307B578/w=0_10_/t=zbios/l=3/tc?ref=www_zbios&amp;pu=sz%401320_480%2Ccuid%407978D81D6BE37659D768D6902731891FF2458FDB3ORAQMNFTPI%2Ccua%40640_1136_iphone_9.3.0.11_0%2Ccut%40iPhone8%252C4_10.3.3%2Cosname%40baiduboxapp%2Cctv%401%2Ccfrom%401099a%2Ccsrc%40bdbox_tserch_txt%2Ccud%40RTMzOUY0NTItQzMwRC00OUNFLTk0MDgtM0Q0MjgyQUVBODNG%2Cta%40zbios_1_10.3_6_9.3%2Cusm%402%2Cvmgdb%400020100228y&amp;lid=13001167334004924177&amp;order=1&amp;fm=alop&amp;tj=www_normal_1_0_10_title&amp;vit=osres&amp;m=8&amp;srd=1&amp;cltj=cloud_title&amp;asres=1&amp;title=cowplot%3A%E5%9F%BA%E4%BA%8Eggplot%E7%9A%84%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F%3F%3FBiostack.org&amp;dict=32&amp;w_qd=IlPT2AEptyoA_yi7I6SxJywg&amp;sec=24387&amp;di=0f2e3ebca79135a3&amp;bdenc=1&amp;tch=124.316.52.125.2.530659&amp;nsrc=IlPT2AEptyoA_yixCFOxXnANedT62v3IEQGG_yxR0SmanEqwxPvxJxEsRHKgVmfTUCGcczO&amp;eqid=b46d6ccea0c6a0001000000559d1b6ab&amp;wd=&amp;clk_info=%7B%22srcid%22%3A%221599%22%2C%22tplname%22%3A%22www_normal%22%2C%22t%22%3A1506916022048%2C%22sig%22%3A%229731%22%2C%22xpath%22%3A%22div-a-h3%22%7D&amp;sfOpen=1" target="_blank" rel="external">cowplot：基于ggplot的可视化系统</a></p>
<p>（3）<a href="http://raindu.com/2017/06/17/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E5%9B%BE%E8%A1%A8%E6%8E%92%E7%89%88%E4%B9%8B%E4%B8%80%E9%A1%B5%E5%A4%9A%E5%9B%BE/" target="_blank" rel="external">R语言可视化——图表排版之一页多图</a></p>
<p>（4）<a href="https://stackoverflow.com/questions/38867430/add-labels-to-a-plot-made-by-grid-arrange-from-multiple-plots" target="_blank" rel="external">Add labels to a plot made by grid.arrange from multiple plots
</a></p>
<p>（5）<a href="http://blog.csdn.net/vivihe0/article/details/47188329" target="_blank" rel="external">R语言grid包使用笔记——viewport</a></p>
<p>（6）<a href="https://www.plob.org/article/3579.html" target="_blank" rel="external">利用ggplot将多个图形组合在一起（推荐-置信椭圆）</a></p>
<p>（7）<a href="https://stackoverflow.com/questions/8545035/scatterplot-with-marginal-histograms-in-ggplot2" target="_blank" rel="external">Scatterplot with marginal histograms in ggplot2（推荐）</a></p>
<p>（8）<a href="https://weiwenku.net/d/102185281" target="_blank" rel="external">你終於會做截斷圖了，可審稿人說不讓做，怎麼破？</a></p>
<p>（9）<a href="http://blog.sina.com.cn/s/blog_15ff3b88f0102wk0r.html" target="_blank" rel="external">ggplot2之分组和分面</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;发表文章一般都要求将多个相关的图组合成单个图，并标上A,B,C等标签。所以总结一下R语言绘图的一页多图，以及多图的拼接，子母图等的各种实现方法，！&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;R一页多图&lt;/blockquote&gt;
    
    </summary>
    
      <category term="R绘图" scheme="https:///AnJingwd.github.io/categories/R%E7%BB%98%E5%9B%BE/"/>
    
    
      <category term="R绘图" scheme="https:///AnJingwd.github.io/tags/R%E7%BB%98%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>文本挖掘与展示之文献关键词</title>
    <link href="https:///AnJingwd.github.io/2017/10/01/%E6%96%87%E6%9C%AC%E6%8C%96%E6%8E%98%E4%B8%8E%E5%B1%95%E7%A4%BA%E4%B9%8B%E6%96%87%E7%8C%AE%E5%85%B3%E9%94%AE%E8%AF%8D/"/>
    <id>https:///AnJingwd.github.io/2017/10/01/文本挖掘与展示之文献关键词/</id>
    <published>2017-10-01T12:35:02.000Z</published>
    <updated>2017-10-01T13:37:22.588Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">文本挖掘与展示之文献关键词</blockquote>

<a id="more"></a>
<p>&emsp;&emsp;想看看Biotechnology and bioengineering杂志上最新的研究方向及研究热点，通过对文献的keywords进行统计分析，然后用词云进行可视化展示，似乎可行。</p>
<h1 id="文献检索"><a href="#文献检索" class="headerlink" title="文献检索"></a>文献检索</h1><p><img src="https://i.imgur.com/4H6vt8n.png" alt=""></p>
<p><img src="https://i.imgur.com/1WLX7Cd.png" alt=""></p>
<p><strong>可以看到我们需要的keywords在\<div>标签下的\<p>段落内，可以通过class = “keywords”进行定位。</p></div></strong></p>
<p><strong>火狐浏览器另存页面为PubMed-NCBI.html</strong></p>
<h1 id="利用python的bs4模块解析html文件"><a href="#利用python的bs4模块解析html文件" class="headerlink" title="利用python的bs4模块解析html文件"></a>利用python的bs4模块解析html文件</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># coding=utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line">os.chdir(<span class="string">r'F:\pycharm_project\bs4'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 读取html文件并生成Soup对象</span></div><div class="line">File = open(<span class="string">'PubMed-NCBI.html'</span>,encoding=<span class="string">'UTF-8'</span>)</div><div class="line">Soup = BeautifulSoup(File,<span class="string">"lxml"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 使用finfAll方法定位class属性为keywords的div块，存入列表</span></div><div class="line">divs = Soup.findAll(<span class="string">'div'</span>, &#123;<span class="string">'class'</span>:<span class="string">'keywords'</span>&#125;)</div><div class="line"></div><div class="line">resultFile = open(<span class="string">r'.\keywords_result.txt'</span>, <span class="string">'w'</span>,encoding=<span class="string">'UTF-8'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 遍历列表divs，将结果keywords写入文件</span></div><div class="line"><span class="keyword">for</span> div <span class="keyword">in</span> divs:</div><div class="line">	resultFile.write(div.p.string + <span class="string">'\n'</span>)</div><div class="line">resultFile.close()</div></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/y03jEpN.png" alt=""></p>
<h1 id="利用R绘制词云进行展示"><a href="#利用R绘制词云进行展示" class="headerlink" title="利用R绘制词云进行展示"></a>利用R绘制词云进行展示</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">#第一步：读取</span></div><div class="line">setwd(<span class="string">"F:/R working directory/wordcloud"</span>)</div><div class="line">text&lt;-scan(<span class="string">"keywords_result.txt"</span>,what=<span class="string">''</span>)</div><div class="line"></div><div class="line"><span class="comment">#第二步：分词</span></div><div class="line"><span class="keyword">library</span>(jiebaR) <span class="comment">##加载包</span></div><div class="line">engine_s&lt;-worker() <span class="comment">##初始化分词器</span></div><div class="line"></div><div class="line">seg&lt;-segment(text,engine_s)   <span class="comment">##分词</span></div><div class="line">head(seg)</div><div class="line"></div><div class="line">f1&lt;-freq(seg)   <span class="comment">##统计词频</span></div><div class="line">head(f1)</div><div class="line"></div><div class="line">f2&lt;-f1[order((f1)[<span class="number">2</span>],decreasing=<span class="literal">TRUE</span>),]</div><div class="line"><span class="comment">##根据词频降序排列</span></div><div class="line">head(f2) </div><div class="line"></div><div class="line"><span class="comment"># 第三步：绘图</span></div><div class="line"><span class="keyword">library</span>(wordcloud2)<span class="comment">#加载wordcloud2包</span></div><div class="line">wordcloud2(f2, size = <span class="number">0.8</span> ,shape=<span class="string">'star'</span>)<span class="comment">#绘制成五角形状词云</span></div><div class="line"></div><div class="line">letterCloud(f2, size=<span class="number">1</span>, word=<span class="string">"生信学习"</span>) <span class="comment">#绘制成字符</span></div></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/hHs8QWY.jpg" alt=""></p>
<p><img src="https://i.imgur.com/gDAHtyk.jpg" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）python网络数据采集.pdf</p>
<p>（2）<a href="https://mp.weixin.qq.com/s/Zhq7ysZ5wAvWNhPEauhRsQ" target="_blank" rel="external">https://mp.weixin.qq.com/s/Zhq7ysZ5wAvWNhPEauhRsQ</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;文本挖掘与展示之文献关键词&lt;/blockquote&gt;
    
    </summary>
    
      <category term="python" scheme="https:///AnJingwd.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https:///AnJingwd.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pandas使用入门</title>
    <link href="https:///AnJingwd.github.io/2017/10/01/pandas%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/"/>
    <id>https:///AnJingwd.github.io/2017/10/01/pandas使用入门/</id>
    <published>2017-09-30T16:26:24.000Z</published>
    <updated>2017-10-01T08:00:29.192Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">pandas使用入门</blockquote>

<a id="more"></a>
<h1 id="pandas从文件读写数据"><a href="#pandas从文件读写数据" class="headerlink" title="pandas从文件读写数据"></a>pandas从文件读写数据</h1><h2 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h2><ul>
<li><p>读取txt数据（read_table默认以tab键分割数据）</p>
<p>  Exp_matrix = pd.read_table(r’.\data\game_of_thrones_geneExp.txt’)</p>
</li>
<li><p>读取csv数据（read_csv默认以逗号分割数据）</p>
<p>  Exp_matrix = pd.read_csv(r’.\data\game_of_thrones_geneExp.csv’)</p>
</li>
<li><p>读取数量不定的空白符分割的txt文件</p>
<p>  Exp_matrix = pd.read_table(r’.\data\game_of_thrones_geneExp.txt’,sep=’\s+’)</p>
</li>
<li><p>读取Excel文件数据</p>
<p>  xls_file = pd.ExcelFile(‘data.xls’)&emsp;&emsp; #创建ExcelFile实例</p>
<p>  table = xls_file.parse( ‘Sheet1’)  &emsp;&emsp; #通过parse读取到DataFrame</p>
</li>
</ul>
<p>（对于使用复杂分隔符或多字符串分隔符的文件，csv模块就无能为力了。这种情况下，就只能使用字符串的split方法或者正则表达式的re.split进行拆分和整理了）</p>
<h3 id="读数据时关于行列名选项"><a href="#读数据时关于行列名选项" class="headerlink" title="读数据时关于行列名选项"></a>读数据时关于行列名选项</h3><ul>
<li>header=None  &emsp;&emsp; #指定列名从0开始增长的数</li>
<li>names=[‘a’,’b’,’c’,’d’,’e’]    &emsp;&emsp; #用names参数指定列名</li>
<li>index_col=’e’   &emsp;&emsp; #用指定的列作为行名（index）</li>
</ul>
<h3 id="逐块读取文本文件"><a href="#逐块读取文本文件" class="headerlink" title="逐块读取文本文件"></a>逐块读取文本文件</h3><ul>
<li>nrows = 5  &emsp;&emsp; #只读取文件前5行</li>
</ul>
<h3 id="其他参数"><a href="#其他参数" class="headerlink" title="其他参数"></a>其他参数</h3><ul>
<li><p>使用skiprows跳过文件的某些行</p>
<p>  skiprows = [0,2,3]</p>
</li>
</ul>
<h2 id="写数据至文件"><a href="#写数据至文件" class="headerlink" title="写数据至文件"></a>写数据至文件</h2><ul>
<li><p>写入csv文件</p>
<p>  result.to_csv(‘D:\data\out1.csv’)</p>
</li>
</ul>
<h3 id="写数据时关于行列名选项"><a href="#写数据时关于行列名选项" class="headerlink" title="写数据时关于行列名选项"></a>写数据时关于行列名选项</h3><ul>
<li>index=False  &emsp;&emsp; #舍弃行名</li>
<li>header=False  &emsp;&emsp; #舍弃列名</li>
</ul>
<h3 id="其他参数-1"><a href="#其他参数-1" class="headerlink" title="其他参数"></a>其他参数</h3><ul>
<li>sep = ‘|’   &emsp;&emsp; #指定分隔符</li>
<li>na_rep = ‘NULL’ &emsp;&emsp; #指定缺失值表示符号</li>
</ul>
<hr>
<h1 id="数据规整化：清理，转换，合并，重塑"><a href="#数据规整化：清理，转换，合并，重塑" class="headerlink" title="数据规整化：清理，转换，合并，重塑"></a>数据规整化：清理，转换，合并，重塑</h1><h2 id="pandas访问元素"><a href="#pandas访问元素" class="headerlink" title="pandas访问元素"></a>pandas访问元素</h2><ul>
<li><p>取前8行</p>
<p>  Exp_matrix_class_3 = Exp_matrix[0:8]</p>
</li>
<li><p>取前8列</p>
<p>  Exp_matrix_class_3 = Exp_matrix[Exp_matrix.columns[0:8]]</p>
</li>
<li><p>取前8行，及1-3列</p>
<p>  Exp_matrix_class_3 = Exp_matrix.iloc[0:8,1:4]</p>
</li>
<li><p>根据条件筛选行</p>
<p>  Exp_matrix[Exp_matrix[‘Class’] == 3]</p>
</li>
<li><p>数据框转置</p>
<p>  Exp_matrix_class_3_T = Exp_matrix_class_3.T</p>
</li>
</ul>
<p>注意：</p>
<p>(1)行列最小从0开始</p>
<p>(2)取值区间左闭右开</p>
<h2 id="Dataframe-排序"><a href="#Dataframe-排序" class="headerlink" title="Dataframe 排序"></a>Dataframe 排序</h2><ul>
<li>逆序<br>   Exp_matrix_T.sort_values([‘abs_dif_3_5’], ascending=False)</li>
</ul>
<h2 id="轴向连接"><a href="#轴向连接" class="headerlink" title="轴向连接"></a>轴向连接</h2><ul>
<li><p>行合并</p>
<p>  result = pd.concat([Exp_matrix_T[1:2],result_gene])</p>
</li>
<li><p>增加一列</p>
<p>  Exp_matrix_T[‘abs_dif_3_5’] = abs_dif_3_5</p>
</li>
</ul>
<h1 id="计算描述统计：统计函数"><a href="#计算描述统计：统计函数" class="headerlink" title="计算描述统计：统计函数"></a>计算描述统计：统计函数</h1><table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>count</td>
<td>非NA值的数量</td>
</tr>
<tr>
<td>describe</td>
<td>针对Series或各DataFrame列计算汇总统计</td>
</tr>
<tr>
<td>min,max</td>
<td>计算最小值和最大值</td>
</tr>
<tr>
<td>argmin,argmax</td>
<td>计算能够获取到最小值和最大值的索引位置（整数)</td>
</tr>
<tr>
<td>idxmin,idxmax</td>
<td>计算能够获取到最小值和最大值的索引值</td>
</tr>
<tr>
<td>quantile</td>
<td>计算样本的分位数（0到 1） </td>
</tr>
<tr>
<td>sum</td>
<td>值的总和</td>
</tr>
<tr>
<td>mean</td>
<td>值的平均数， a.mean() 默认对每一列的数据求平均值；若加上参数a.mean(1)则对每一行求平均值</td>
</tr>
<tr>
<td>media</td>
<td>值的算术中位数（50%分位数)</td>
</tr>
<tr>
<td>mad</td>
<td>根据平均值计算平均绝对离差</td>
</tr>
<tr>
<td>var</td>
<td>样本值的方差 </td>
</tr>
<tr>
<td>std</td>
<td>样本值的标准差</td>
</tr>
<tr>
<td>skew</td>
<td>样本值的偏度（三阶矩）</td>
</tr>
<tr>
<td>kurt</td>
<td>样本值的峰度（四阶矩）</td>
</tr>
<tr>
<td>cumsum</td>
<td>样本值的累计和</td>
</tr>
<tr>
<td>cummin,cummax</td>
<td>样本值的累计最大值和累计最小</td>
</tr>
<tr>
<td>cumprod</td>
<td>样本值的累计积</td>
</tr>
<tr>
<td>diff</td>
<td>计算一阶差分（对时间序列很有用) </td>
</tr>
<tr>
<td>pct_change</td>
<td>计算百分数变化</td>
</tr>
</tbody>
</table>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://blog.csdn.net/stevenkwong/article/details/52528616" target="_blank" rel="external">PANDAS 数据合并与重塑（concat篇）</a></p>
<p>（2）<a href="http://www.cnblogs.com/pengsixiong/p/5050833.html" target="_blank" rel="external">pandas数据的导入与导出</a></p>
<p>（3）<a href="http://bluewhale.cc/2016-08-06/use-pandas-filter-and-sort.html" target="_blank" rel="external">使用Pandas对数据进行筛选和排序</a></p>
<p>（4）<a href="http://blog.csdn.net/pipisorry/article/details/25625799" target="_blank" rel="external">pandas小记：pandas计算工具-汇总统计</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;pandas使用入门&lt;/blockquote&gt;
    
    </summary>
    
      <category term="python" scheme="https:///AnJingwd.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https:///AnJingwd.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>linux的CPU拓扑结构（Topology）</title>
    <link href="https:///AnJingwd.github.io/2017/09/17/linux%E7%9A%84CPU%E6%8B%93%E6%89%91%E7%BB%93%E6%9E%84%EF%BC%88Topology%EF%BC%89/"/>
    <id>https:///AnJingwd.github.io/2017/09/17/linux的CPU拓扑结构（Topology）/</id>
    <published>2017-09-17T07:46:01.000Z</published>
    <updated>2017-09-17T10:11:19.431Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">由一次教训驱动的学习</blockquote>

<p>&emsp;&emsp;“用服务器的同学注意下，以后请尽量不要在登录节点（frontend）提交任务，实在需要提交任务请注意任务消耗的资源情况，以免内存耗尽导致服务器死机！因为登录节点死机的话其他节点就都无法使用了！”</p>
<a id="more"></a>
<p>登陆节点frontend：</p>
<pre><code>[wangdong@frontend ~]$
</code></pre><p><img src="https://i.imgur.com/UAY0Lsw.jpg" alt=""></p>
<h1 id="查看某一节点cpu使用情况"><a href="#查看某一节点cpu使用情况" class="headerlink" title="查看某一节点cpu使用情况"></a>查看某一节点cpu使用情况</h1><p>例如第6节点：</p>
<pre><code>ssh node6 &apos;top -n 1 -b&apos;| head
</code></pre><p><img src="https://i.imgur.com/2iByJW3.jpg" alt=""></p>
<h1 id="批量查看节点cpu使用情况"><a href="#批量查看节点cpu使用情况" class="headerlink" title="批量查看节点cpu使用情况"></a>批量查看节点cpu使用情况</h1><pre><code>for((i=2;i&lt;=8;i++));do ssh node${i} &apos;top -n 1 -b&apos;| head ;done
</code></pre><h1 id="更换节点"><a href="#更换节点" class="headerlink" title="更换节点"></a>更换节点</h1><p>例如更换至6节点：</p>
<pre><code>ssh node6
</code></pre><p>[wangdong@node6 ~]$</p>
<p><img src="https://i.imgur.com/bQQnZuf.jpg" alt=""></p>
<p>具体含义：<a href="http://jingyan.baidu.com/article/4d58d5412917cb9dd4e9c0ed.html" target="_blank" rel="external">参考</a></p>
<h1 id="不切换当前节点，在其他节点运行命令"><a href="#不切换当前节点，在其他节点运行命令" class="headerlink" title="不切换当前节点，在其他节点运行命令"></a>不切换当前节点，在其他节点运行命令</h1><p>直接把命令写在ssh nodeX后面，然后是我习惯于加引号</p>
<pre><code>ssh nodeX &apos;command&apos;
</code></pre><p>注意：</p>
<ul>
<li>登录节点主要用于日常操作，如提交作业、查看作业运行情况、编辑、编译、压缩/解压缩等</li>
<li>不要在登录节点不通过作业调度系统直接运行作业，以免影响其余用户的正常使用</li>
</ul>
<p>&emsp;&emsp;一般跑小程序不用考虑这些，但大程序消耗内存很大，所以尽量不要在登录节点（frontend）提交任务，实在需要提交任务请注意任务消耗的资源情况，以免内存耗尽导致服务器死机！因为登录节点死机的话其他节点就都无法使用了。</p>
<hr>
<h1 id="补充命令"><a href="#补充命令" class="headerlink" title="补充命令"></a>补充命令</h1><h2 id="top查看当前运行的任务情况"><a href="#top查看当前运行的任务情况" class="headerlink" title="top查看当前运行的任务情况"></a>top查看当前运行的任务情况</h2><p>&emsp;&emsp;<strong>linux下用top命令查看cpu利用率超过100%。这里显示的所有的cpu加起来的使用率，说明你的CPU是多核，你运行top后按大键盘1看看，可以显示每个cpu的使用率，top里显示的是把所有使用率加起来。</strong></p>
<p><img src="https://i.imgur.com/eGIFLwf.png" alt=""></p>
<p>注意：</p>
<ul>
<li><p>按下1后可以看到我的机器的CPU是16核的。%Cpu0,,,,,,%Cpu15。</p>
</li>
<li><p><strong>若是 0 代表目前该核心空闲， 可以运算作业。 100代表 cpu核心满负荷运算。若某个节点 16 个 CPU 负荷已很高， 换至其余空闲节点运算作业。 建议一个计算节点核心数最多使用 15 核。</strong></p>
</li>
</ul>
<h2 id="查看-CPU-Topology（拓扑结构）："><a href="#查看-CPU-Topology（拓扑结构）：" class="headerlink" title="查看 CPU Topology（拓扑结构）："></a>查看 CPU Topology（拓扑结构）：</h2><pre><code>cat /proc/cpuinfo 
</code></pre><p><img src="https://i.imgur.com/nmPkqRq.jpg" alt=""></p>
<p>具体含义：<a href="http://blog.sina.com.cn/s/blog_4a6151550100iowl.html" target="_blank" rel="external">参考</a></p>
<ul>
<li><p>逻辑CPU个数：</p>
<p>  cat /proc/cpuinfo | grep ‘processor’ | wc -l</p>
</li>
<li><p>物理CPU个数：</p>
<p>  cat /proc/cpuinfo | grep ‘physical id’ | sort | uniq | wc -l</p>
</li>
<li><p>每个物理CPU中Core的个数：</p>
<p>  cat /proc/cpuinfo | grep ‘cpu cores’ | wc -l</p>
</li>
</ul>
<p><img src="https://i.imgur.com/xACj6do.jpg" alt=""></p>
<h2 id="查看内存的总量及消耗"><a href="#查看内存的总量及消耗" class="headerlink" title="查看内存的总量及消耗"></a>查看内存的总量及消耗</h2><pre><code>free -g 
</code></pre><p><img src="https://i.imgur.com/wAobMtr.jpg" alt=""></p>
<p>具体含义  <a href="http://blog.csdn.net/gxl0805/article/details/39393709" target="_blank" rel="external">参考</a></p>
<h1 id="补充知识"><a href="#补充知识" class="headerlink" title="补充知识"></a>补充知识</h1><h2 id="NUNA与SMP"><a href="#NUNA与SMP" class="headerlink" title="NUNA与SMP"></a>NUNA与SMP</h2><p>&emsp;&emsp;NUMA(Non-Uniform Memory Access，非一致性内存访问)和SMP(Symmetric Multi-Processor，对称多处理器系统)是两种不同的CPU硬件体系架构。</p>
<p>&emsp;&emsp;SMP的主要特征是共享，所有的CPU共享使用全部资源，例如内存、总线和I/O，多个CPU对称工作，彼此之间没有主次之分，平等地访问共享的资源，这样势必引入资源的竞争问题，从而导致它的扩展内力非常有限。</p>
<p>&emsp;&emsp;NUMA技术将CPU划分成不同的组（Node)，每个Node由多个CPU组成，并且有独立的本地内存、I/O等资源。Node之间通过互联模块连接和沟通，因此除了本地内存外，每个CPU仍可以访问远端Node的内存，只不过效率会比访问本地内存差一些，我们用Node之间的距离（Distance，抽象的概念）来定义各个Node之间互访资源的开销。</p>
<p>&emsp;&emsp;如果你只知道CPU这么一个概念，那么是无法理解CPU的拓扑的。<strong>事实上，在NUMA架构下，CPU的概念从大到小依次是：Node、Socket、Core、Processor（Node-&gt;Socket-&gt;Core-&gt;Processor）</strong></p>
<p>&emsp;&emsp;<strong>随着多核技术的发展，我们将多个CPU封装在一起，这个封装一般被称为Socket（插槽的意思，也有人称之为Packet，不知到哪个更加准确？），而Socket中的每个核心被称为Core。为了进一步提升CPU的处理能力，Intel又引入了HT（Hyper-Threading，超线程)的技术，一个Core打开HT之后，在OS看来就是两个核，当然这个核是逻辑上的概念，所以也被称为Logical Processor，本文简称为Processor。</strong></p>
<p>&emsp;&emsp;综上所述，<strong>一个NUMA Node可以有一个或者多个Socket，一个多核Socket显然包含多个Core，一个Core如果打开HT则变成两个Logical Processor。</strong> Logical processor只是OS内部看到的，实际上两个Processor还是位于同一个Core上，所以频繁的调度仍可能导致资源竞争，影响性能。</p>
<h2 id="查看Numa-Node"><a href="#查看Numa-Node" class="headerlink" title="查看Numa Node"></a>查看Numa Node</h2><p>numactl是设定进程NUMA策略的命令行工具，也可以用来查看当前的Nuwa node:</p>
<pre><code>numactl --hardware
</code></pre><p><img src="https://i.imgur.com/TCYq3bu.jpg" alt=""></p>
<p>从上面可以看出本机有两个Numa node，如果要进一步知道一个Node包含哪几个CPU，该怎么办？</p>
<p>一种方法是通过查看ls /sys/devices/system/node/目录下的信息，例如：</p>
<p><img src="https://i.imgur.com/3pOcus6.jpg" alt=""></p>
<p>cpu0  cpu1  cpu10  cpu11  cpu2  cpu3  cpu8  cpu9  cpumap  distance  meminfo  numastat</p>
<p><strong>可见, node0包含4/5/6/7/12/13/14/15八个Processor（刚好是一个Socket）。</strong></p>
<h2 id="查看Socket"><a href="#查看Socket" class="headerlink" title="查看Socket"></a>查看Socket</h2><p>&emsp;&emsp;<strong>一个Socket对应主板上的一个插槽，在本文中是指一个CPU封装。在/proc/cpuinfo中的physical id就是Socket的ID，可以从中找到本机到底有多少个Socket，并且每个Socket有那几个Processor。</strong></p>
<p>1) 查看有几个Socket</p>
<pre><code>$ grep &apos;physical id&apos; /proc/cpuinfo | awk -F: &apos;{print $2 | &quot;sort -un&quot;}&apos;
0
1
$ grep &apos;physical id&apos; /proc/cpuinfo | awk -F: &apos;{print $2 | &quot;sort -un&quot;}&apos; | wc -l
2
</code></pre><p>2) 查看每个Socket有几个Processor</p>
<pre><code>$ grep &apos;physical id&apos; /proc/cpuinfo | awk -F: &apos;{print $2}&apos; | sort | uniq -c
8  0
8  1
</code></pre><p>3) 查看Socket对应那几个Processor</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">awk -F: <span class="string">'&#123; </span></div><div class="line"><span class="string">    if ($1 ~ /processor/) &#123;</span></div><div class="line"><span class="string">        gsub(/ /,"",$2);</span></div><div class="line"><span class="string">        p_id=$2;</span></div><div class="line"><span class="string">    &#125; else if ($1 ~ /physical id/)&#123;</span></div><div class="line"><span class="string">        gsub(/ /,"",$2);</span></div><div class="line"><span class="string">        s_id=$2;</span></div><div class="line"><span class="string">        arr[s_id]=arr[s_id] " " p_id</span></div><div class="line"><span class="string">    &#125;</span></div><div class="line"><span class="string">&#125; </span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">END&#123;</span></div><div class="line"><span class="string">    for (i in arr) </span></div><div class="line"><span class="string">        print arr[i];</span></div><div class="line"><span class="string">&#125;'</span> /proc/cpuinfo | cut -c2-</div></pre></td></tr></table></figure>
<p>0 1 2 3 8 9 10 11<br>4 5 6 7 12 13 14 15</p>
<h2 id="查看Core"><a href="#查看Core" class="headerlink" title="查看Core"></a>查看Core</h2><p><strong>/proc/cpuinfo文件中的cpu cores表明一个socket中有几个cores，</strong>例如：</p>
<pre><code>cat /proc/cpuinfo | grep &apos;core&apos;  | sort -u
</code></pre><p><img src="https://i.imgur.com/acrKbul.jpg" alt=""></p>
<p><strong>上面的结果说明一个socket有4个cores，它们的id分别为0/1/9/10，根据之前查到的我们的机器有2个socket，所以总共有8个core。</strong></p>
<h2 id="查看Processor"><a href="#查看Processor" class="headerlink" title="查看Processor"></a>查看Processor</h2><p>&emsp;&emsp;查看Processors的个数就比较简单了，从上面的统计结果中我们已经可以知道有16个Logical processor，不过也可以直接从/proc/cpuinfo文件中获取：</p>
<pre><code>$ grep &apos;processor&apos; /proc/cpuinfo | wc -l
16
</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://www.bio-info-trainee.com/1028.html" target="_blank" rel="external">http://www.bio-info-trainee.com/1028.html</a></p>
<p>（2）<a href="http://www.iwhgao.com/2-5-%E9%9B%86%E7%BE%A4%E4%BD%9C%E4%B8%9A%E6%8F%90%E4%BA%A4%E7%AE%A1%E7%90%86%E7%AE%80%E4%BB%8B/" target="_blank" rel="external">rabbit gao’s blog</a></p>
<p>（3）<a href="http://blog.csdn.net/huangshanchun/article/details/44397581" target="_blank" rel="external">http://blog.csdn.net/huangshanchun/article/details/44397581</a></p>
<p>（4）<a href="http://kodango.com/cpu-topology" target="_blank" rel="external">团子的小窝</a> （推荐）</p>
<p>（5）<a href="http://tieba.baidu.com/p/1285719732?red_tag=s0690960116" target="_blank" rel="external">http://tieba.baidu.com/p/1285719732?red_tag=s0690960116</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;由一次教训驱动的学习&lt;/blockquote&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;“用服务器的同学注意下，以后请尽量不要在登录节点（frontend）提交任务，实在需要提交任务请注意任务消耗的资源情况，以免内存耗尽导致服务器死机！因为登录节点死机的话其他节点就都无法使用了！”&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="https:///AnJingwd.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https:///AnJingwd.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>R语言之批量导入csv文件，并以文件名作为变量名</title>
    <link href="https:///AnJingwd.github.io/2017/09/04/R%E8%AF%AD%E8%A8%80%E4%B9%8B%E6%89%B9%E9%87%8F%E5%AF%BC%E5%85%A5csv%E6%96%87%E4%BB%B6%EF%BC%8C%E5%B9%B6%E4%BB%A5%E6%96%87%E4%BB%B6%E5%90%8D%E4%BD%9C%E4%B8%BA%E5%8F%98%E9%87%8F%E5%90%8D/"/>
    <id>https:///AnJingwd.github.io/2017/09/04/R语言之批量导入csv文件，并以文件名作为变量名/</id>
    <published>2017-09-04T05:29:34.000Z</published>
    <updated>2017-09-04T07:19:35.807Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;当要处理一批csv文件时，一个一个读入就太麻烦而且太low了。那么如何一次将工作路径的csv文件读入当前环境空间（Environment），并且使用文件名作为变量名，使用时直接调用即可呢??</p>
<a id="more"></a>
<h1 id="批量读入csv文件"><a href="#批量读入csv文件" class="headerlink" title="批量读入csv文件"></a>批量读入csv文件</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#将列表中文件读入环境空间，并以文件名作为变量名</span></div><div class="line">mycsvfile = list.files(pattern=<span class="string">"*.csv"</span>)   <span class="comment">#生成.csv文件的列表</span></div><div class="line">list2env(</div><div class="line">  lapply(setNames(mycsvfile, make.names(gsub(<span class="string">"*.csv$"</span>, <span class="string">""</span>, mycsvfile))),</div><div class="line">         read.csv,header=<span class="literal">TRUE</span>,check.names=<span class="literal">FALSE</span>), envir = .GlobalEnv)</div></pre></td></tr></table></figure>
<h1 id="当然，上述语句也可以用于批量读入txt文件"><a href="#当然，上述语句也可以用于批量读入txt文件" class="headerlink" title="当然，上述语句也可以用于批量读入txt文件"></a>当然，上述语句也可以用于批量读入txt文件</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mytxtfile = list.files(pattern=<span class="string">"*.txt"</span>)</div><div class="line">list2env(</div><div class="line">  lapply(setNames(mytxtfile, make.names(gsub(<span class="string">"*.txt$"</span>, <span class="string">""</span>, mytxtfile))),</div><div class="line">         read.table,header=<span class="literal">TRUE</span>,sep=<span class="string">"\t"</span>), envir = .GlobalEnv)</div></pre></td></tr></table></figure>
<h1 id="批量读入自定义函数"><a href="#批量读入自定义函数" class="headerlink" title="批量读入自定义函数"></a>批量读入自定义函数</h1><p>对于自定义的函数，可以通过source函数导入环境空间，然后才能调用，当然也可以写个函数，调用此函数批量导入罗！！！</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">sourceDir &lt;- <span class="keyword">function</span>(path, trace = <span class="literal">TRUE</span>, <span class="keyword">...</span>) &#123;</div><div class="line">  <span class="keyword">for</span> (nm <span class="keyword">in</span> list.files(path, pattern = <span class="string">"[.][RrSsQq]$"</span>)) &#123;</div><div class="line">    <span class="keyword">if</span>(trace) cat(nm,<span class="string">":"</span>)</div><div class="line">    <span class="keyword">source</span>(file.path(path, nm), <span class="keyword">...</span>)</div><div class="line">    <span class="keyword">if</span>(trace) cat(<span class="string">"\n"</span>)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">sourceDir(<span class="string">"自定义函数所在文件夹的完整路径"</span>)</div></pre></td></tr></table></figure>
<h1 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h1><p>涉及到的语法，包括R语言的环境空间，正则表达式。</p>
<p>1.R语言的环境空间</p>
<p>在R语言中，不管是变量，对象，或者函数，都存在于R的环境空间中，R程序在运行时都有自己的运行空间。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 当前环境空间</span></div><div class="line">&gt; .GlobalEnv</div><div class="line"></div><div class="line"><span class="comment"># 列出当前环境中的变量 </span></div><div class="line">&gt; ls()</div><div class="line"><span class="comment"># 查看环境空间加载的包</span></div><div class="line">&gt; search()</div></pre></td></tr></table></figure>
<p>2.正则表达式</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pattern=<span class="string">"*.csv"</span>  <span class="comment">#list.files函数中用正则表达式匹配文件名的一个选项</span></div><div class="line">gsub(<span class="string">"*.txt$"</span>, <span class="string">""</span>, mytxtfile)  <span class="comment">#匹配以.txt结尾的文件名，将其替换为空，也就是去掉.txt，只留文件名作为变量名</span></div></pre></td></tr></table></figure>
<p>3.lapply函数用于对mytxtfile列表中的文件，都应用read.csv函数，从而实现批量读取文件</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;当要处理一批csv文件时，一个一个读入就太麻烦而且太low了。那么如何一次将工作路径的csv文件读入当前环境空间（Environment），并且使用文件名作为变量名，使用时直接调用即可呢??&lt;/p&gt;
    
    </summary>
    
      <category term="R" scheme="https:///AnJingwd.github.io/categories/R/"/>
    
    
      <category term="R" scheme="https:///AnJingwd.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>python实现excel二维表格格式化</title>
    <link href="https:///AnJingwd.github.io/2017/09/02/python%E5%AE%9E%E7%8E%B0excel%E4%BA%8C%E7%BB%B4%E8%A1%A8%E6%A0%BC%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    <id>https:///AnJingwd.github.io/2017/09/02/python实现excel二维表格格式化/</id>
    <published>2017-09-02T03:40:51.000Z</published>
    <updated>2017-09-02T04:45:33.389Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;Excel 是 Windows 环境下流行的、强大的电子表格应用。openpyxl 模块让 Python 程序能读取和修改 Excel 电子表格文<br>件。例如，可能有一个无聊的任务，需要从一个电子表格拷贝一些数据，粘贴到另一个电子表格中。或者可能需要从几千行中挑选几行，根据某种条件稍作修改。或者需要查看几百份部门预算电子表格，寻找其中的赤字。正是这种无聊无脑的电子表格任务，可以通过 Python 来完成。</p>
<p>&emsp;&emsp;同时，发现之前写了很多小脚本，但代码的复用率极低。因此，今后的代码得更加注意用函数进行代码的封装。EXCEL中行的排序及筛选比较容易，但对于列比较麻烦。在此，通过一个对EXCEL列排序及筛选（取子列）的例子进行演示。</p>
<a id="more"></a>
<h1 id="sort-column-py"><a href="#sort-column-py" class="headerlink" title="sort_column.py"></a>sort_column.py</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding:utf-8 -*-</span></div><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">EXCEL文件列根据自定义规则排序</span></div><div class="line"><span class="string">'''</span></div><div class="line"></div><div class="line">__file__    = <span class="string">'sort_column.py'</span></div><div class="line">__date__    = <span class="string">'2017-9-2'</span></div><div class="line">__version__ = <span class="string">'0.1'</span></div><div class="line">__author__  = <span class="string">'anjing'</span></div><div class="line">__blog__    = <span class="string">'https://anjingwd.github.io/'</span></div><div class="line">__license__ = <span class="string">'GPL v3 License'</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort_column</span><span class="params">(file, row1, column1_letter ,column2_letter)</span>:</span></div><div class="line"></div><div class="line">	<span class="keyword">import</span> openpyxl</div><div class="line">	<span class="keyword">from</span> openpyxl.cell <span class="keyword">import</span> column_index_from_string</div><div class="line"></div><div class="line">	<span class="comment">#列字母和数字之间的转换</span></div><div class="line">	column1_num = column_index_from_string(str(column1_letter))</div><div class="line">	column2_num = column_index_from_string(str(column2_letter))</div><div class="line"></div><div class="line">	<span class="comment">#从工作簿中取得工作表</span></div><div class="line">	wb = openpyxl.load_workbook(file)</div><div class="line">	sheet1 = wb.get_sheet_by_name(<span class="string">'Sheet1'</span>)</div><div class="line">	sheet2 = wb.get_sheet_by_name(<span class="string">'Sheet2'</span>)</div><div class="line">	sheet3 = wb.create_sheet(<span class="string">'result_sorted'</span>)</div><div class="line"></div><div class="line">	<span class="comment">#按顺序记录下待排序列的列号</span></div><div class="line">	order = []</div><div class="line">	<span class="comment">#注意range范围是左闭区间，右开区间</span></div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,sheet2.max_row+<span class="number">1</span>):</div><div class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> range(column1_num, column2_num+<span class="number">1</span>):</div><div class="line">			<span class="keyword">if</span> sheet2.cell(row=i, column=<span class="number">1</span>).value == sheet1.cell(row=row1, column=j).value:</div><div class="line">				order.append(j)</div><div class="line"></div><div class="line">	<span class="comment">#将排序结果写入新的sheet3</span></div><div class="line">	count = column1_num</div><div class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> order:</div><div class="line">		<span class="keyword">for</span> i <span class="keyword">in</span> range(row1, sheet1.max_row+<span class="number">1</span>):</div><div class="line">			sheet3.cell(row=i, column=count).value = sheet1.cell(row=i, column=j).value</div><div class="line">		count += <span class="number">1</span></div><div class="line"></div><div class="line">	<span class="comment">#将起始列之前的列写入，一般是行名等</span></div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(row1, sheet1.max_row+<span class="number">1</span>):</div><div class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, column1_num):</div><div class="line">			sheet3.cell(row=i, column=j).value = sheet1.cell(row=i, column=j).value</div><div class="line"></div><div class="line">	<span class="comment"># 写入之后需要保存</span></div><div class="line">	wb.save(file)</div><div class="line">	print(<span class="string">"Everything has been done"</span>)</div><div class="line"></div><div class="line"><span class="comment">######################################################################################################</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line"></div><div class="line">	print(<span class="string">'对excel文件指定列区间排序，sheet1为数据，sheet2为自定义顺序顺序。'</span>)</div><div class="line">	print(<span class="string">'四个参数：输入excel绝对路径，需排序列的标题，列的起始列，终止列'</span>)</div><div class="line">	print(<span class="string">r'用法例如：python sort_column.py F:\pycharm_project\excel_format\new1.xlsx 1 H AU'</span>)</div><div class="line"></div><div class="line">	<span class="comment">#Sys.argv是一个元组，里边的项为用户从程序外部输入的参数</span></div><div class="line">	<span class="keyword">import</span> sys</div><div class="line">	file = sys.argv[<span class="number">1</span>]</div><div class="line">	row1 = int(sys.argv[<span class="number">2</span>])</div><div class="line">	column1_letter = sys.argv[<span class="number">3</span>]</div><div class="line">	column2_letter = sys.argv[<span class="number">4</span>]</div><div class="line">	sort_column(file, row1, column1_letter, column2_letter)</div></pre></td></tr></table></figure>
<h1 id="测试数据-new1-xlsx"><a href="#测试数据-new1-xlsx" class="headerlink" title="测试数据 new1.xlsx"></a>测试数据 new1.xlsx</h1><p>Sheet1</p>
<p><img src="https://i.imgur.com/fm8rjs8.png" alt=""></p>
<p>Sheet2</p>
<p><img src="https://i.imgur.com/tme2ia3.png" alt=""></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>在cmd下进入脚本sort_column.py和测试数据new1.xlsx所在目录，运行：</p>
<pre><code>python sort_column.py F:\pycharm_project\excel_format\new1.xlsx 1 B S
</code></pre><h1 id="结果result-sorted"><a href="#结果result-sorted" class="headerlink" title="结果result_sorted"></a>结果result_sorted</h1><p><img src="https://i.imgur.com/wlUd4Ky.png" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）书籍-Python编程快速上手让繁琐工作自动化–第12章处理 Excel 电子表格</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;Excel 是 Windows 环境下流行的、强大的电子表格应用。openpyxl 模块让 Python 程序能读取和修改 Excel 电子表格文&lt;br&gt;件。例如，可能有一个无聊的任务，需要从一个电子表格拷贝一些数据，粘贴到另一个电子表格中。或者可能需要从几千行中挑选几行，根据某种条件稍作修改。或者需要查看几百份部门预算电子表格，寻找其中的赤字。正是这种无聊无脑的电子表格任务，可以通过 Python 来完成。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;同时，发现之前写了很多小脚本，但代码的复用率极低。因此，今后的代码得更加注意用函数进行代码的封装。EXCEL中行的排序及筛选比较容易，但对于列比较麻烦。在此，通过一个对EXCEL列排序及筛选（取子列）的例子进行演示。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https:///AnJingwd.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https:///AnJingwd.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>解决ggplot 作图x轴和y轴不重合问题</title>
    <link href="https:///AnJingwd.github.io/2017/09/01/%E8%A7%A3%E5%86%B3ggplot-%E4%BD%9C%E5%9B%BEx%E8%BD%B4%E5%92%8Cy%E8%BD%B4%E4%B8%8D%E9%87%8D%E5%90%88%E9%97%AE%E9%A2%98/"/>
    <id>https:///AnJingwd.github.io/2017/09/01/解决ggplot-作图x轴和y轴不重合问题/</id>
    <published>2017-09-01T04:43:03.000Z</published>
    <updated>2018-01-21T05:26:24.976Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">解决ggplot 作图x轴和y轴不重合问题</blockquote>

<a id="more"></a>
<p>只需要在作图时加上加上一下代码，即可即可让x轴和y轴在坐标原点重合：</p>
<pre><code>scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
</code></pre><p>现在用测试代码看看前后变化：</p>
<pre><code>library(ggplot2)
df &lt;- data.frame(x = 1:5, y = 1:5)
p1 &lt;- ggplot(df, aes(x, y)) + geom_point()
p1 &lt;- p1 + expand_limits(x = 0, y = 0)
p1
</code></pre><p><img src="http://i.imgur.com/c0EnfOi.png" alt=""></p>
<pre><code>library(ggplot2)
df &lt;- data.frame(x = 1:5, y = 1:5)
p2 &lt;- ggplot(df, aes(x, y)) + geom_point()
p2 &lt;- p2 + expand_limits(x = 0, y = 0)+ scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
p2
</code></pre><p><img src="http://i.imgur.com/2GNk480.png" alt=""></p>
<p>参考：</p>
<p>（1）<a href="http://stackoverflow.com/questions/36669095/y-axis-wont-start-at-0-in-ggplot" target="_blank" rel="external">http://stackoverflow.com/questions/36669095/y-axis-wont-start-at-0-in-ggplot</a></p>
<p>（2）<a href="http://stackoverflow.com/questions/13701347/force-the-origin-to-start-at-0-in-ggplot2-r" target="_blank" rel="external">http://stackoverflow.com/questions/13701347/force-the-origin-to-start-at-0-in-ggplot2-r</a></p>
<p>（3）<a href="http://stackoverflow.com/questions/29955618/starting-y-axis-at-0-using-ggplot-and-facet-wrap" target="_blank" rel="external">http://stackoverflow.com/questions/29955618/starting-y-axis-at-0-using-ggplot-and-facet-wrap</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;解决ggplot 作图x轴和y轴不重合问题&lt;/blockquote&gt;
    
    </summary>
    
      <category term="R绘图" scheme="https:///AnJingwd.github.io/categories/R%E7%BB%98%E5%9B%BE/"/>
    
    
      <category term="R绘图" scheme="https:///AnJingwd.github.io/tags/R%E7%BB%98%E5%9B%BE/"/>
    
  </entry>
  
</feed>
