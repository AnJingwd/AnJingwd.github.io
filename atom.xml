<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安静-不安静的博客</title>
  
  <link href="https:///AnJingwd.github.io/atom.xml" rel="self"/>
  
  <link href="https:///AnJingwd.github.io/"/>
  <updated>2017-11-24T01:57:49.784Z</updated>
  <id>https:///AnJingwd.github.io/</id>
  
  <author>
    <name>AJ&#39;s blog</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux shell中读写mysql数据库</title>
    <link href="https:///AnJingwd.github.io/2017/11/23/linux-shell%E4%B8%AD%E8%AF%BB%E5%86%99mysql%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https:///AnJingwd.github.io/2017/11/23/linux-shell中读写mysql数据库/</id>
    <published>2017-11-23T08:03:44.000Z</published>
    <updated>2017-11-24T01:57:49.784Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;主要介绍win下和linux下连接重用生信数据库，操作数据库中表，以及根据自己的需要下载公共数据，创建mysql数据库。</p>
<blockquote class="blockquote-center">linux shell中读写mysql数据库</blockquote>

<a id="more"></a>
<h1 id="mysql学习资料"><a href="#mysql学习资料" class="headerlink" title="mysql学习资料"></a>mysql学习资料</h1><p>（1）<a href="http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html" target="_blank" rel="external">21分钟 MySQL 入门教程</a></p>
<p>（2）MySQL 5.7 Reference Manual: 具体技巧例如<a href="https://dev.mysql.com/doc/refman/5.7/en/counting-rows.html" target="_blank" rel="external"> Counting Rows</a>；<a href="https://dev.mysql.com/doc/refman/5.7/en/pattern-matching.html" target="_blank" rel="external">Pattern Matching</a></p>
<h1 id="mysql连接生信主要公共数据库"><a href="#mysql连接生信主要公共数据库" class="headerlink" title="mysql连接生信主要公共数据库"></a>mysql连接生信主要公共数据库</h1><h2 id="linux下"><a href="#linux下" class="headerlink" title="linux下"></a>linux下</h2><h3 id="格式："><a href="#格式：" class="headerlink" title="格式："></a>格式：</h3><p>mysql -h[host] -u[user] -p[password] -P[port] [database-name]</p>
<p>例如：</p>
<table>
<thead>
<tr>
<th>Server</th>
<th>User</th>
<th>Password</th>
<th>Port</th>
</tr>
</thead>
<tbody>
<tr>
<td>mysql-db.1000genomes.org</td>
<td>anonymous</td>
<td>-</td>
<td>4272</td>
</tr>
</tbody>
</table>
<p>（1）<a href="http://www.internationalgenome.org/public-ensembl-mysql-instance" target="_blank" rel="external">1000 Genomes: since June 16, 2011</a></p>
<pre><code>mysql -h mysql-db.1000genomes.org -u anonymous -P 4272  -A
</code></pre><p>（2）<a href="http://genome.ucsc.edu/goldenPath/help/mysql.html" target="_blank" rel="external">UCSC Downloading Data using MySQL</a></p>
<pre><code>mysql -h genome-mysql.soe.ucsc.edu -u genome -P 3306 -A
</code></pre><p>或者</p>
<pre><code>mysql -h genome-euro-mysql.soe.ucsc.edu -u genome -P 3306 -A
</code></pre><p>注意：必须加上端口号-P 3306，按照官网的方法会报错：</p>
<p>ERROR 2003 (HY000): Can’t connect to MySQL server on ‘genome-mysql.soe.ucsc.edu’ (111)</p>
<p>（3）<a href="http://uswest.ensembl.org/info/data/mysql.html" target="_blank" rel="external">The Ensembl public MySQL Servers</a></p>
<pre><code>mysql -h ensembldb.ensembl.org -u anonymous -P  5306  -A
</code></pre><p>（4）<a href="http://www.geneontology.org/GO.database.shtml#mirrors" target="_blank" rel="external">GO</a></p>
<pre><code>mysql -h mysql-amigo.ebi.ac.uk -u go_select -P 4085 -pamigo -A
</code></pre><p>The -A flag is optional but is recommended for speed.</p>
<p>其他数据库：参见<a href="What Are The Public Sql Servers For Bioinformatics ?">网址</a></p>
<h3 id="mysql直接读ucsc数据库数据"><a href="#mysql直接读ucsc数据库数据" class="headerlink" title="mysql直接读ucsc数据库数据"></a>mysql直接读ucsc数据库数据</h3><pre><code>mysql --user=genome --host=genome-mysql.cse.ucsc.edu -P 3306 -A -D hg19 -e &apos;select * from refGene where name=&quot;NM_000038&quot;&apos; | less 
</code></pre><p>显示：</p>
<pre><code>bin     name    chrom   strand  txStart txEnd   cdsStart        cdsEnd  exonCount       exonStarts      exonEnds        score   name2
1440    NM_000038       chr5    +       112073555       112181936       112090587       112179823       16      112073555,112090569,112
</code></pre><h2 id="windows下"><a href="#windows下" class="headerlink" title="windows下"></a>windows下</h2><p>使用Navicat，其好处在于更加方便直观</p>
<p>如图：<br><img src="https://i.imgur.com/aBUXPU1.jpg" alt=""></p>
<p><img src="https://i.imgur.com/HSXg4DS.jpg" alt=""></p>
<p>查询某一张表，查看具体内容，导出，筛选等等，很方便</p>
<p><img src="https://i.imgur.com/AC1sYil.jpg" alt=""></p>
<p><img src="https://i.imgur.com/wRlokSh.jpg" alt=""></p>
<p>mac下可以使用<a href="http://www.danielecook.com/accessing-the-ucsc-genome-browser-mysql-database/" target="_blank" rel="external">Sequel Pro</a></p>
<h1 id="python连接mysql数据库"><a href="#python连接mysql数据库" class="headerlink" title="python连接mysql数据库"></a>python连接mysql数据库</h1><pre><code>pip2.7 install MySQL-python
</code></pre><p><img src="https://i.imgur.com/dNbsWE5.jpg" alt=""></p>
<p>解决：libmysqlclient.so.18库在mysql安装目录的lib下，设置LD_LIBRARY_PATH环境变量即可</p>
<pre><code>export LD_LIBRARY_PATH=&quot;$DYLD_LIBRARY_PATH:/home/wangdong/local/mysql/lib&quot;
</code></pre><p><img src="https://i.imgur.com/SNb5BTT.jpg" alt=""></p>
<p>ps： 网上一般的做法是在mysql/lib目录下找到libmysqlclient.so.18，设置软链接到usr/lib或者usr/lib64，但这两个目录都需要管理员权限的。</p>
<h2 id="应用例子"><a href="#应用例子" class="headerlink" title="应用例子"></a>应用例子</h2><p>利用mysql客户端查询UCSC数据库，获取geneSymbol名的bed信息</p>
<p><a href="https://github.com/Wy2160640/py_scripts/blob/master/geneInfo.py" target="_blank" rel="external">脚本geneInfo.py</a></p>
<p><img src="https://i.imgur.com/SjGGLYp.jpg" alt=""></p>
<h1 id="根据需要创建UCSC-genome-MySQL-database"><a href="#根据需要创建UCSC-genome-MySQL-database" class="headerlink" title="根据需要创建UCSC genome MySQL database"></a>根据需要创建UCSC genome MySQL database</h1><p>数据来源：UCSC <a href="http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/" target="_blank" rel="external">hg19</a>  <a href="http://hgdownload.cse.ucsc.edu/goldenPath/hg38/database/" target="_blank" rel="external">hg38</a></p>
<p><img src="https://i.imgur.com/sO4nvEc.jpg" alt=""></p>
<p>需要两种文件：</p>
<ul>
<li>（1）*sql是一种数据库脚本语言，是一种对关系数据库中的数据进行定义和操作的句法，为大多数关系数据库管理系统所支持的工业标准。可以用文本编辑器打开并查看</li>
<li>（2)数据文件。txt文件</li>
</ul>
<p>例子：.sql文件</p>
<p><img src="https://i.imgur.com/nqtMqQV.jpg" alt=""></p>
<p>使用shell脚本自动完成</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># create database</span></div><div class="line">mysql -u root -prootab -e <span class="string">'create database hg19'</span></div><div class="line"><span class="comment"># obtain table schema</span></div><div class="line"><span class="built_in">cd</span> /home/wangdong/<span class="built_in">local</span>/mysql/data</div><div class="line">wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/ensGene.sql</div><div class="line"><span class="comment"># create table</span></div><div class="line">mysql -u root -prootab hg19 &lt; ensGene.sql</div><div class="line"><span class="comment"># obtain and import table data</span></div><div class="line">wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/ensGene.txt.gz</div><div class="line">gunzip ensGene.txt.gz</div><div class="line">mysqlimport -u root -prootab --<span class="built_in">local</span> hg19 ensGene.txt</div></pre></td></tr></table></figure>
<p><strong>注意：数据需要下载到/home/wangdong/local/mysql/data，位置可以在配置文件(my.cnf)中修改</strong></p>
<p><img src="https://i.imgur.com/ThdiQ2j.jpg" alt=""></p>
<p><img src="https://i.imgur.com/I809HBj.jpg" alt=""></p>
<h2 id="补充LD-LIBRARY-PATH环境变量"><a href="#补充LD-LIBRARY-PATH环境变量" class="headerlink" title="补充LD_LIBRARY_PATH环境变量"></a>补充LD_LIBRARY_PATH环境变量</h2><p>LIBRARY_PATH和LD_LIBRARY_PATH是Linux下的两个环境变量，二者的含义和作用分别如下：</p>
<p><strong>LIBRARY_PATH环境变量用于在程序编译期间查找动态链接库时指定查找共享库的路径，</strong> 例如，指定gcc编译需要用到的动态链接库的目录。设置方法如下（其中，LIBDIR1和LIBDIR2为两个库目录）：</p>
<p>export LIBRARY_PATH=LIBDIR1:LIBDIR2:$LIBRARY_PATH</p>
<p><strong>LD_LIBRARY_PATH环境变量用于在程序加载运行期间查找动态链接库时指定除了系统默认路径之外的其他路径，</strong> 注意，LD_LIBRARY_PATH中指定的路径会在系统默认路径之前进行查找。设置方法如下（其中，LIBDIR1和LIBDIR2为两个库目录）：</p>
<p>export LD_LIBRARY_PATH=LIBDIR1:LIBDIR2:$LD_LIBRARY_PATH</p>
<h3 id="区别与使用："><a href="#区别与使用：" class="headerlink" title="区别与使用："></a>区别与使用：</h3><p>开发时，设置LIBRARY_PATH，以便gcc能够找到编译时需要的动态链接库。</p>
<p>发布时，设置LD_LIBRARY_PATH，以便程序加载运行时能够自动找到需要的动态链接库。</p>
<h1 id="MySQL-Show命令总结"><a href="#MySQL-Show命令总结" class="headerlink" title="MySQL Show命令总结"></a>MySQL Show命令总结</h1><p>MySQL中有很多的基本命令，show命令也是其中之一，在很多使用者中对show命令的使用还容易产生混淆，本文汇集了show命令的众多用法。</p>
<ul>
<li>show tables或show tables from database_name; — 显示当前数据库中所有表的名称。</li>
<li>show tables like ‘my<em>%’; — 显示当前数据库中以my</em>开头的表。</li>
<li>show databases; — 显示mysql中所有数据库的名称。</li>
<li>show [full] columns from table_name from database_name; 或show [full] columns from database_name.table_name; — 显示表中列名称。</li>
<li>show grants for user_name; — 显示一个用户的权限，显示结果类似于grant 命令。</li>
<li>show index from table_name; — 显示表的索引。</li>
<li>show status;(show master status;show slave status) — 显示一些系统特定资源的信息，例如，正在运行的线程数量。</li>
<li>show variables; — 显示系统变量的名称和值。</li>
<li>show [full] processlist; — 显示系统中正在运行的所有进程，也就是当前正在执行的查询。大多数用户可以查看他们自己的进程，但是如果他们拥有process权限，就可以查看所有人的进程，包括密码。</li>
<li>show table status; — 显示当前使用或者指定的database中的每个表的信息。信息包括表类型和表的最新更新时间。</li>
<li>show privileges; — 显示服务器所支持的不同权限。</li>
<li>show create database database_name; — 显示create database 语句是否能够创建指定的数据库。</li>
<li>show create table table_name; — 显示create database 语句是否能够创建指定的数据库。</li>
<li>show engies; — 显示安装以后可用的存储引擎和默认引擎。</li>
<li>show innodb status; — 显示innoDB存储引擎的状态。</li>
<li>show logs; — 显示BDB存储引擎的日志。</li>
<li>show warnings; — 显示最后一个执行的语句所产生的错误、警告和通知。</li>
<li>show errors; — 只显示最后一个执行语句所产生的错误。</li>
<li>show [storage] engines; –显示安装后的可用存储引擎和默认引擎。</li>
</ul>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://www.bio-info-trainee.com/1045.html" target="_blank" rel="external">生物信息学学者学习mysql之路</a></p>
<p>（2）<a href="http://dev.dafan.info/detail/194350?p=55" target="_blank" rel="external">Linux环境变量LD_LIBRARY_PATH</a></p>
<p>（3）<a href="https://www.cnblogs.com/foreverycc/p/5491884.html" target="_blank" rel="external">使用MySQL制作SNP146数据库</a></p>
<p>（5）<a href="https://nsaunders.wordpress.com/2011/05/18/how-to-create-a-partial-ucsc-genome-mysql-database/" target="_blank" rel="external">How to: create a partial UCSC genome MySQL database</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;主要介绍win下和linux下连接重用生信数据库，操作数据库中表，以及根据自己的需要下载公共数据，创建mysql数据库。&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;linux shell中读写mysql数据库&lt;/blockquote&gt;
    
    </summary>
    
      <category term="MySQL" scheme="https:///AnJingwd.github.io/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https:///AnJingwd.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>设计及挑选捕获测序探针，并计算覆盖度</title>
    <link href="https:///AnJingwd.github.io/2017/10/29/%E8%AE%BE%E8%AE%A1%E5%8F%8A%E6%8C%91%E9%80%89%E6%8D%95%E8%8E%B7%E6%B5%8B%E5%BA%8F%E6%8E%A2%E9%92%88%EF%BC%8C%E5%B9%B6%E8%AE%A1%E7%AE%97%E8%A6%86%E7%9B%96%E5%BA%A6/"/>
    <id>https:///AnJingwd.github.io/2017/10/29/设计及挑选捕获测序探针，并计算覆盖度/</id>
    <published>2017-10-29T04:17:18.000Z</published>
    <updated>2017-10-30T11:53:19.208Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">使用bedtools进行捕获测序引物的筛选并计算覆盖度</blockquote>

<a id="more"></a>
<h1 id="基因CDS区域捕获测序，引物设计"><a href="#基因CDS区域捕获测序，引物设计" class="headerlink" title="基因CDS区域捕获测序，引物设计"></a>基因CDS区域捕获测序，引物设计</h1><h2 id="确定目标基因的某一转录本的CDS区域坐标，整理成bed文件"><a href="#确定目标基因的某一转录本的CDS区域坐标，整理成bed文件" class="headerlink" title="确定目标基因的某一转录本的CDS区域坐标，整理成bed文件"></a>确定目标基因的某一转录本的CDS区域坐标，整理成bed文件</h2><p>最简单的方法是从gff文件中，根据转录本蛋白ID,直接grep抽取出CDS区间的chr, satrt, end</p>
<pre><code>wget http://ftp.ncbi.nih.gov/refseq/H_sapiens/annotation/GRCh38_latest/refseq_identifiers/GRCh38_latest_genomic.gff.gz
ungz GRCh38_latest_genomic.gff.gz
mv GRCh38_latest_genomic.gff GRCh38.p10_ncbi.gff

#get genes positions by gene symbol list in gene.txt
gene=($(cat gene.txt));for gene in ${gene[@]}; do grep -m 1 &quot;${gene}&quot; GRCh38.p10_ncbi.gff &gt;&gt;gene_result.txt;done
</code></pre><p><img src="https://i.imgur.com/K0bANVd.jpg" alt=""></p>
<pre><code>#get cds regions positions by proteins list in proteins_id.txt
protein_id=($(cat protein_id.txt));for protein_id in ${protein_id[@]}; do grep &quot;${protein_id}&quot; GRCh38.p10_ncbi.gff &gt;&gt;cds_result.txt;done
</code></pre><p><img src="https://i.imgur.com/XmfwHoG.jpg" alt=""></p>
<pre><code>#get gene chrom locations or transfor gene symbol ID to essenble ID by gene symbol list in gene.txt
wget http://ftp.ncbi.nih.gov/refseq/H_sapiens/Homo_sapiens.gene_info.gz
head -n 1 Homo_sapiens.gene_info &gt; chr_result.txt
gene=($(cat gene.txt));for gene in ${gene[@]}; do grep -m 1 &quot;${gene}&quot; Homo_sapiens.gene_info &gt;&gt;chr_result.txt;done
</code></pre><p><img src="https://i.imgur.com/QQnWpwO.jpg" alt=""></p>
<p>整理成bed文件</p>
<p><img src="https://i.imgur.com/flbem5B.jpg" alt=""></p>
<p>安捷伦的<a href="http://www.genomics.agilent.com/zh/Custom-Design-Tools/eArray/?cid=AG-PT-122&amp;tabId=AG-PR-1047&amp;pageId=1456&amp;crumbAction=push&amp;navAction=pop" target="_blank" rel="external">eArray</a>可以设计，输入只需要目标区域的bed文件即可！</p>
<ul>
<li><a href="https://earray.chem.agilent.com/cghanalytics/index.html" target="_blank" rel="external">Agilent Genomic Workbench Downloads</a> </li>
<li><a href="https://earray.chem.agilent.com/cghanalytics/InstData/7.0/G3800-90046_Installation.pdf" target="_blank" rel="external">Installation Guide</a></li>
</ul>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>（1）NCBI 的FTP站点中GRCh37和GRCh38的最新版基因组注释数据在该路径下：<a href="http://ftp.ncbi.nih.gov/refseq/H_sapiens/annotation" target="_blank" rel="external">http://ftp.ncbi.nih.gov/refseq/H_sapiens/annotation</a></p>
<ul>
<li>Last updated: April 19, 2017</li>
<li><strong>assembly name: GRCh38.p10</strong>（第十版）</li>
</ul>
<p>（2）对于做湿实验的同学可能通过浏览器的方式查询CDS区域坐标，但存在一个问题（<strong>首先浏览器上的版本是GRCh38.p7（第七版）</strong>）！</p>
<p>NCBI —&gt;选择gene数据库—&gt;输入gene symbol —-&gt;点选gene symbol—-&gt;genebank—-&gt;找到目标转录本</p>
<p><img src="https://i.imgur.com/pjVTs2f.jpg" alt=""></p>
<p><img src="https://i.imgur.com/6C2Lk1p.jpg" alt=""></p>
<p>&emsp;&emsp;可以看到CDS由一段一段的区域join形成的，但这是相对坐标，如何转换成基因组的绝对坐标呢？或许你会用基因的起始和结束位置进行加减，但尝试比较了下，发现坐标偏差很大（0.2M）。首先是<strong>版本的问题？</strong>, 其次可能NCBI的坐标系统中CDS区域的位置，使用在基因区间的基础上加减的做法不对。将<a href="https://www.ncbi.nlm.nih.gov/nuccore/NC_000007.14?report=genbank&amp;from=140719331&amp;to=140924764&amp;strand=true" target="_blank" rel="external">上述链接</a>最下方的FASTA序列的第62-199区间摘取出来，在UCSC中<a href="http://genome.ucsc.edu/cgi-bin/hgBlat?command=start" target="_blank" rel="external">BLAT</a>发现其结果是与从GRCh38.p10_ncbi.gff文件摘取出来的坐标一致的，<strong>所以用基因的起始和结束位置进行加减的方法是不正确的。</strong></p>
<h1 id="引物筛选"><a href="#引物筛选" class="headerlink" title="引物筛选"></a>引物筛选</h1><ul>
<li><p>A组引物扩增区域（Amplicon_Stop-Amplicon_Start）长度范围为126-274nt，平均值为238nt</p>
</li>
<li><p>B组引物扩增区域（Amplicon_Stop-Amplicon_Start）长度范围为124-174nt,平均值为158nt</p>
</li>
<li><p>A,B两组引物都是针对同一目标区域设计的捕获探针，但是参数不同，导致扩增长度不同，覆盖度不同</p>
</li>
</ul>
<p>&emsp;&emsp;所以A组引物（primer20）偏长，B组引物（primer24）偏短，现在需要将A组引物中扩增区域大于250nt的目标区域用 B组引物来扩增，实现长度互补和综合。</p>
<p>方法：使用bedtools工具即可！</p>
<ol>
<li>将targeted.bed与primer20.bed查看覆盖情况，将没有引物覆盖的，或者覆盖的引物扩增长度大于250nt的<strong>目标区域的bed区间</strong>抽取出来整理为target_region_of_primer20_up250.bed</li>
<li>将target_region_of_primer20_up250.bed与primer24.bed查看覆盖情况，将覆盖上的引物挑出，<strong>此时原则是目标区域即使有某条引物能全部覆盖，但为了测序数据更加准确，一个位置保证2-3个引物覆盖为好</strong></li>
<li>将A组合B组引物保留的部分引物合并，同时整理出A,B两组引物都没有覆盖的目标区域。</li>
</ol>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#step1</span></div><div class="line">bedtools intersect -a target.bed -b primer20.bed -wao &gt; primer20_result.txt </div><div class="line">awk <span class="string">'$6-$5&gt;250 &#123;print $1,$2,$3&#125;'</span> primer20_result.txt &gt; target_region_of_primer20_up250.bed</div><div class="line"></div><div class="line"><span class="comment">#step2</span></div><div class="line">bedtools intersect -a target_region_of_primer20_up250.bed -b primer24.bed -wao &gt; primer24_result.txt</div><div class="line"></div><div class="line"><span class="comment">#step3</span></div><div class="line">primer20=($(cat primer20_reserved.txt));<span class="keyword">for</span> primer20 <span class="keyword">in</span> <span class="variable">$&#123;primer20[@]&#125;</span>; <span class="keyword">do</span> grep -m 1 <span class="string">"<span class="variable">$&#123;primer20&#125;</span>"</span> primer20_original.txt &gt;&gt;primer20_reserved_result.txt;<span class="keyword">done</span></div><div class="line"></div><div class="line">primer24=($(cat primer24_reserved.txt));<span class="keyword">for</span> primer24 <span class="keyword">in</span> <span class="variable">$&#123;primer24[@]&#125;</span>; <span class="keyword">do</span> grep -m 1 <span class="string">"<span class="variable">$&#123;primer24&#125;</span>"</span> primer24_original.txt &gt;&gt;primer24_reserved_result.txt;<span class="keyword">done</span></div></pre></td></tr></table></figure>
<h1 id="根据targete-bed和primer20-bed计算覆盖度"><a href="#根据targete-bed和primer20-bed计算覆盖度" class="headerlink" title="根据targete.bed和primer20.bed计算覆盖度"></a>根据targete.bed和primer20.bed计算覆盖度</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">(1)检验bed区间是否有重叠</div><div class="line"></div><div class="line">length_sum1=`awk <span class="string">'BEGIN &#123;x=0&#125;&#123;x=x+$3-$2+1&#125;&#123;print x&#125;'</span> target.bed |tail -n 1`</div><div class="line">length_sum2=`sort -k1,1 -k2,2n target.bed |bedtools merge -i | awk <span class="string">'BEGIN &#123;x=0&#125;&#123;x=x+$3-$2+1&#125;&#123;print x&#125;'</span>|tail -n 1`</div><div class="line"></div><div class="line"><span class="comment">#如果length_sum1 &gt;  length_sum2,有重叠；如果length_sum1 = length_sum2,五重叠</span></div><div class="line"><span class="comment">#所以target.bed无重叠，primer20和primer24有重叠</span></div><div class="line"></div><div class="line">(2)先用bedtools工具得到primer20的merge后的bed文件，然后与target.bed查看覆盖碱基数，并求和</div><div class="line">sort -k1,1 -k2,2n primer20.bed|bedtools merge -i &gt; primer20_merge.bed</div><div class="line">length_sum3=`bedtools intersect -a target.bed -b primer20_merge.bed -wao | awk <span class="string">'BEGIN &#123;x=0&#125;&#123;x=x+$7&#125;&#123;print x&#125;'</span> |tail -n 1`  </div><div class="line"></div><div class="line">coverage = length_sum3/length_sum1*100</div></pre></td></tr></table></figure>
<h2 id="bedtools-merge功能图示（需要先排序，否则报错）"><a href="#bedtools-merge功能图示（需要先排序，否则报错）" class="headerlink" title="bedtools merge功能图示（需要先排序，否则报错）"></a>bedtools merge功能图示（需要先排序，否则报错）</h2><p><img src="https://i.imgur.com/kAcaOMe.jpg" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://blog.sina.com.cn/s/blog_5d5f892a0102v665.html" target="_blank" rel="external">染色体位置overlap的计算–bedtools应用</a></p>
<p>（2）<a href="https://www.biostars.org/p/65558/" target="_blank" rel="external">Tool: Converting Genome Coordinates From One Genome Version To Another (Ucsc Liftover, Ncbi Remap, Ensembl Api)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;使用bedtools进行捕获测序引物的筛选并计算覆盖度&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS实验" scheme="https:///AnJingwd.github.io/categories/NGS%E5%AE%9E%E9%AA%8C/"/>
    
    
      <category term="NGS实验" scheme="https:///AnJingwd.github.io/tags/NGS%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库安装及入门</title>
    <link href="https:///AnJingwd.github.io/2017/10/21/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E5%8F%8A%E5%85%A5%E9%97%A8/"/>
    <id>https:///AnJingwd.github.io/2017/10/21/MySQL数据库安装及入门/</id>
    <published>2017-10-21T10:06:15.000Z</published>
    <updated>2017-11-23T13:46:26.321Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">无root权限，从源码编译安装MySQL数据库，及其简单使用</blockquote>

<a id="more"></a>
<h1 id="科德十二定律"><a href="#科德十二定律" class="headerlink" title="科德十二定律"></a>科德十二定律</h1><p><a href="https://en.wikipedia.org/wiki/Codd%27s_12_rules" target="_blank" rel="external">科德十二定律（Codd’s 12 rules）</a>是由数据库的关系模型的先驱埃德加·科德（EdgarF. Codd）提出的，使数据库管理系统关系化需满足的十三条（从0至12）准则。又称为“黄金十二定律”。</p>
<ul>
<li>准则0:&emsp;一个关系形的关系数据库系统必须能完全通过它的关系能力来管理数据库。</li>
<li>准则1 信息准则: &emsp;关系数据库系统的所有信息都应该在逻辑一级上用表中的值这一种方法显式的表示。</li>
<li>准则2 保证访问准则: &emsp; 依靠表名、主码和列名的组合，保证能以逻辑方式访问关系数据库中的每个数据项。</li>
<li>准则3 空值的系统化处理: &emsp;全关系的关系数据库系统支持空值的概念，并用系统化的方法处理空值。</li>
<li>准则4 基于关系模型的动态的联机数据字典: &emsp;数据库的描述在逻辑级上和普通数据采用同样的表述方式。</li>
<li>准则5 统一的数据子语言: &emsp;一个关系数据库系统可以具有几种语言和多种终端访问方式，但必须有一种语言，它的语句可以表示为严格语法规定的字符串，并能全面的支持各种规则。</li>
<li>准则6 视图更新准则: &emsp;所有理论上可更新的视图也应该允许由系统更新。</li>
<li>准则7 高级的插入、修改和删除操作: &emsp;系统应该对各种操作进行查询优化。</li>
<li>准则8 数据的物理独立性: &emsp;无论数据库的数据在存储表示或存取方法上作任何变化，应用程序和终端活动都保持逻辑上的不变性。</li>
<li>准则9 数据逻辑独立性: &emsp;当对基本关系进行理论上信息不受损害的任何改变时，应用程序和终端活动都保持逻辑上的不变性。</li>
<li>准则10 数据完整的独立性: &emsp;关系数据库的完整性约束条件必须是用数据库语言定义并存储在数据字典中的。</li>
<li>准则11 分布独立性: &emsp;关系数据库系统在引入分布数据或数据重新分布时保持逻辑不变。</li>
<li>准则12 无破坏准则: &emsp;如果一个关系数据库系统具有一个低级语言，那么这个低级语言不能违背或绕过完整性准则。</li>
</ul>
<h1 id="Relational-Database-Management-Systems-RDBMS"><a href="#Relational-Database-Management-Systems-RDBMS" class="headerlink" title="Relational Database Management Systems (RDBMS)"></a>Relational Database Management Systems (RDBMS)</h1><table>
<thead>
<tr>
<th>Commercial products</th>
<th>Open-source offerings</th>
</tr>
</thead>
<tbody>
<tr>
<td>Oracle</td>
<td>MySQL (Oracle)</td>
</tr>
<tr>
<td>DB2 (IBM)</td>
<td>PostgreSQL</td>
</tr>
<tr>
<td>MS SQL Server (Microsoft)</td>
<td>SQLite</td>
</tr>
</tbody>
</table>
<h1 id="下载MySQL"><a href="#下载MySQL" class="headerlink" title="下载MySQL"></a>下载MySQL</h1><p><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="external">下载MySQL源代码</a> </p>
<p><img src="https://i.imgur.com/jm0LLv7.png" alt=""></p>
<p><img src="https://i.imgur.com/1N13zGe.png" alt=""></p>
<h2 id="下载选项："><a href="#下载选项：" class="headerlink" title="下载选项："></a>下载选项：</h2><ul>
<li>Source Code -&gt; 源代码</li>
<li>Generic Linux (Architecture Independent) -&gt; 通用的Linux（独立结构）</li>
<li><p>Compressed TAR Archive，Includes Boost Headers -&gt; 选择带有Boost头的压缩包（MySQL需要Boost C++库构建）</p>
<p>  wget <a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-boost-5.7.20.tar.gz" target="_blank" rel="external">https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-boost-5.7.20.tar.gz</a></p>
</li>
</ul>
<h1 id="从源安装MySQL，需要安装CMake"><a href="#从源安装MySQL，需要安装CMake" class="headerlink" title="从源安装MySQL，需要安装CMake"></a>从源安装MySQL，需要安装CMake</h1><p>cmake，一个跨平台的编译自动配置工具（作用生成makefile 文件）</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!bin/sh</span></div><div class="line">HOME=/home/wangdong</div><div class="line">install_path=<span class="variable">$HOME</span>/<span class="built_in">local</span>/cmake</div><div class="line">mkdir -p <span class="variable">$install_path</span>/.src</div><div class="line"><span class="built_in">cd</span> <span class="variable">$install_path</span>/.src</div><div class="line">wget http://www.cmake.org/files/v2.8/cmake-2.8.12.2.tar.gz</div><div class="line">tar zxvf cmake-2.8.12.2.tar.gz</div><div class="line"><span class="built_in">cd</span> cmake-2.8.12.2</div><div class="line">./configure --prefix=<span class="variable">$install_path</span></div></pre></td></tr></table></figure>
<p>输出 CMake has bootstrapped.  Now run gmake.</p>
<p>#确保cmake没有错误发生</p>
<p>echo $?</p>
<p>0</p>
<p>#下面运行gmake命令</p>
<pre><code>gmake
gmake install
</code></pre><h1 id="编译安装MySQL"><a href="#编译安装MySQL" class="headerlink" title="编译安装MySQL"></a>编译安装MySQL</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">#（1）下载MySQL-5.6及创建相应目录结构</span></div><div class="line">HOME=/home/wangdong</div><div class="line">install_path=<span class="variable">$HOME</span>/<span class="built_in">local</span>/mysql</div><div class="line">mkdir -p /home/wangdong/<span class="built_in">local</span>/mysql</div><div class="line"></div><div class="line">wget https://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.35.tar.gz</div><div class="line">tar zxvf mysql-5.6.35.tar.gz</div><div class="line"><span class="built_in">cd</span> mysql-5.6.35</div><div class="line">mkdir <span class="variable">$install_path</span>/data</div><div class="line"></div><div class="line"><span class="comment">#（2）编译(系统已经安装cmake,此处徐使用上述自己安装的cmake)</span></div><div class="line">/home/wangdong/<span class="built_in">local</span>/cmake/.src/cmake-2.8.12.2/bin/cmake -DCMAKE_INSTALL_PREFIX=<span class="variable">$install_path</span>  \</div><div class="line">-DMYSQL_DATADIR=<span class="variable">$install_path</span>/data  \</div><div class="line">-DMYSQL_UNIX_ADDR=<span class="variable">$install_path</span>/mysql.sock  \</div><div class="line">-DDEFAULT_CHARSET=utf8  \</div><div class="line">-DDEFAULT_COLLATION=utf8_general_ci  \</div><div class="line">-DMYSQL_TCP_PORT=8701  \ </div><div class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1  \ </div><div class="line">-DENABLED_LOCAL_INFILE=1</div><div class="line"></div><div class="line"><span class="comment">#（3)安装</span></div><div class="line">make &amp;&amp; make install</div><div class="line"></div><div class="line"><span class="comment">#(4)配置（找到support-files/my-default.cnf，该文件是一个配置模板，在此基础上自己修改配置）</span></div><div class="line">cp support-files/my-default.cnf my.cnf</div><div class="line"></div><div class="line"><span class="comment">#(5)使用启动my.cnf配置文件中的设置启动mysqld_safe服务和启动mysql</span></div><div class="line"></div><div class="line">bin/mysqld_safe --defaults-file=my.cnf &amp;     <span class="comment">#&amp;表示后台运行</span></div><div class="line">support-files/mysql.server start|stop|restart   <span class="comment">#开始|停止|重启</span></div></pre></td></tr></table></figure>
<h2 id="如果执行成功，会提示如下内容："><a href="#如果执行成功，会提示如下内容：" class="headerlink" title="如果执行成功，会提示如下内容："></a>如果执行成功，会提示如下内容：</h2><p><img src="https://i.imgur.com/ueBDeEE.jpg" alt=""></p>
<p>同时，生成mysql.pid和mysql.sock文件，正常！</p>
<p><img src="https://i.imgur.com/xCmA0K1.jpg" alt=""></p>
<p>以及查看13306端口，正常！</p>
<p><img src="https://i.imgur.com/lQo2XsV.jpg" alt=""></p>
<h2 id="关于配置的注意事项"><a href="#关于配置的注意事项" class="headerlink" title="关于配置的注意事项"></a>关于配置的注意事项</h2><p>（1）最基本的需要修改以下7项（关于my.cnf配置文件的具体解释可以看这里（<a href="http://blog.csdn.net/l1028386804/article/details/50635169" target="_blank" rel="external">MySQL之——MySQL5.6 my.cnf 参数说明(附上自己服务器上真实配置文件</a>)））</p>
<ul>
<li>在[mysqld]里修改port=13306</li>
<li>在[mysqld]里修改sock文件位置（socket）</li>
<li>在[mysqld]里添加MySQL基础目录（basedir）</li>
<li>在[mysqld]里添加MySQL数据存储目录（datadir）</li>
<li>在[mysqld]里添加MySQL日志文件（log-error）</li>
<li>在[mysqld]里添加MySQL进程文件（pid-file）</li>
<li>在[mysqld]里添加指定MySQL数据库所属用户（user -这里填写你所用的linux用户）</li>
</ul>
<p>（2）检查MySQL默认端口3306是否被占用，执行命令：netstat -apn | grep 3306如下图表明3306已经被占用，那么换一个端口，建议端口号在10000以上，比如改成13306，所以可以设置port=13306</p>
<p><img src="https://i.imgur.com/KcpubsU.jpg" alt=""></p>
<p>如下图为my-default.cnf原始文件（模板）</p>
<p><img src="https://i.imgur.com/MVbfLC9.jpg" alt=""></p>
<p>如下图为修改配置后的my.cnf文件</p>
<p><img src="https://i.imgur.com/ZDz01xX.jpg" alt=""></p>
<p><strong>注意：修改好my.cnf文件后，记得创建/home/wangdong/local/mysql/data和/home/wangdong/local/mysql/logs文件目录，否则在第（5）步会报错</strong></p>
<h1 id="启动MySQL"><a href="#启动MySQL" class="headerlink" title="启动MySQL"></a>启动MySQL</h1><h2 id="每次启动MySQL都需要"><a href="#每次启动MySQL都需要" class="headerlink" title="每次启动MySQL都需要"></a>每次启动MySQL都需要</h2><pre><code>bin/mysqld_safe --defaults-file=my.cnf &amp;     #&amp;表示后台运行
support-files/mysql.server start   #开始
support-files/mysql.server stop   #关闭
</code></pre><p><img src="https://i.imgur.com/QQPY7WV.jpg" alt=""></p>
<p>可以看到MySQL正常启动了，但是写入日志时不具有/var/log/mysqld.log的权限，问题是我们之前不是设置了log-error   = /home/wangdong/local/mysql/logs/mysql_error.log吗？原因在于在linux系统中mysql配置文件的读取顺序为:/etc/my.cnf;/etc/mysql/my.cnf;/usr/local/mysql/etc/my.cnf ;~/.my.cnf </p>
<p>我们可以使用locate查找系统已有的my.cnf配置文件，如下图，</p>
<p><img src="https://i.imgur.com/BpkeoHW.jpg" alt=""></p>
<p>网上搜了一下解决办法，删除系统上/etc目录下的my.cnf配置文件，但无root权限做不到的，但还好，写入日志文件无权限并不影响MySQL的正常启动和使用！</p>
<h3 id="MySQL数据库使用"><a href="#MySQL数据库使用" class="headerlink" title="MySQL数据库使用"></a>MySQL数据库使用</h3><h4 id="大致步骤包括："><a href="#大致步骤包括：" class="headerlink" title="大致步骤包括："></a>大致步骤包括：</h4><ol>
<li>第一次访问MySQL数据库的时候要以root进去（及-u root），且没有密码。 </li>
<li>然后使用mysql数据库，修改root密码。 </li>
<li>创建新的用户，以及授权 </li>
<li>正常使用、登录mysql,root进去，且需要密码。</li>
</ol>
<h5 id="第一次访问MySQL数据库"><a href="#第一次访问MySQL数据库" class="headerlink" title="第一次访问MySQL数据库"></a>第一次访问MySQL数据库</h5><p>执行命令格式：bin/mysql –socket=mysql.sock -u root </p>
<p><strong>一定要加上–socket=mysql.sock（mysql安装目录中的mysql.sock，否则提示ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock’ (2)）</strong></p>
<h5 id="查看已有数据库，删除内置的test数据库"><a href="#查看已有数据库，删除内置的test数据库" class="headerlink" title="查看已有数据库，删除内置的test数据库"></a>查看已有数据库，删除内置的test数据库</h5><p>执行命令（注意命令末尾的分号不可少）：</p>
<pre><code>show databases;
drop database test;
</code></pre><p><img src="https://i.imgur.com/7Bl2Jm8.jpg" alt=""></p>
<h5 id="查看内置MySQL用户，删除匿名用户"><a href="#查看内置MySQL用户，删除匿名用户" class="headerlink" title="查看内置MySQL用户，删除匿名用户"></a>查看内置MySQL用户，删除匿名用户</h5><p>执行命令：</p>
<pre><code>use mysql;  #选择mysql数据库
select host, user, password from user; #从mysql数据库中的user表格中选择host, user, password三个字段
delete from user where user = &apos;&apos;;  
</code></pre><p><img src="https://i.imgur.com/XDLMMLx.jpg" alt=""></p>
<h5 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h5><p>执行命令：</p>
<pre><code>update user set password = password(&apos;rootab&apos;);
</code></pre><p><strong>修改密码后需要先关闭mysql服务，然后重新启动my.cnf配置文件中的设置启动mysqld_safe服务和启动mysql，使新密码生效！！</strong></p>
<p>执行命令：</p>
<pre><code>support-files/mysql.server stop
bin/mysqld_safe --defaults-file=my.cnf &amp;         
support-files/mysql.server start     
</code></pre><p><img src="https://i.imgur.com/Dn5ZSW9.jpg" alt=""></p>
<h5 id="正常使用，使用root登陆，并且需要密码登陆"><a href="#正常使用，使用root登陆，并且需要密码登陆" class="headerlink" title="正常使用，使用root登陆，并且需要密码登陆"></a>正常使用，使用root登陆，并且需要密码登陆</h5><p>mysql -u 用户名 -h host_name -P  端口号  -p密码  (<strong>‘-P 端口号’的P大写  ‘-p密码’的p小写，且密码(password)和p之间没有空格</strong>)</p>
<p>如bin/mysql –socket=mysql.sock -u root -h localhost -P 13306 -prootab </p>
<p>也可以这样写：</p>
<pre><code>bin/mysql --socket=mysql.sock -u root -h localhost -P 13306 -p 
</code></pre><p>然后在窗口弹出Enter password:时输入密码即可</p>
<p>（查看mysql命令的帮助: bin/mysql -I）</p>
<h5 id="将bin-mysql加入环境变量"><a href="#将bin-mysql加入环境变量" class="headerlink" title="将bin/mysql加入环境变量"></a>将bin/mysql加入环境变量</h5><pre><code>echo &apos;export PATH=/home/wangdong/local/mysql/bin:$PATH&apos;&gt;&gt;~/.bashrc  

source ~/.bashrc
</code></pre><p>以后登陆直接：</p>
<pre><code>WORKDIR=/home/wangdong/local/mysql/
mysqld_safe --defaults-file=$WORKDIR/my.cnf &amp;
$WORKDIR/support-files/mysql.server start
mysql --socket=$WORKDIR/mysql.sock -u root -h localhost -P 13306 -p 

Do somethings
exit;
$WORKDIR/support-files/mysql.server stop
</code></pre><p>(使用版本：Server version: 5.6.35 Source distribution)</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://segmentfault.com/a/1190000004026950" target="_blank" rel="external">CentOS 6.4编译安装mysql 5.7</a></p>
<p>（2）<a href="https://segmentfault.com/a/1190000010806192" target="_blank" rel="external">从源编译MySQL</a></p>
<p>（3）<a href="http://jingyan.baidu.com/article/ad310e80cf9ce81849f49ea2.html" target="_blank" rel="external">Linux MySQL免安装及配置</a></p>
<p>（4） <a href="http://blog.csdn.net/f229338596/article/details/72575403" target="_blank" rel="external">linux中无root权限，装mysql 于用户目录步骤</a></p>
<p>（5）<a href="https://jingyan.baidu.com/article/3c343ff7ca8eab0d37796317.html" target="_blank" rel="external">非root权限安装mysql</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;无root权限，从源码编译安装MySQL数据库，及其简单使用&lt;/blockquote&gt;
    
    </summary>
    
      <category term="MySQL" scheme="https:///AnJingwd.github.io/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https:///AnJingwd.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>R一页多图</title>
    <link href="https:///AnJingwd.github.io/2017/10/06/R%E4%B8%80%E9%A1%B5%E5%A4%9A%E5%9B%BE/"/>
    <id>https:///AnJingwd.github.io/2017/10/06/R一页多图/</id>
    <published>2017-10-06T13:25:47.000Z</published>
    <updated>2017-10-06T13:43:23.014Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">发表文章一般都要求将多个相关的图组合成单个图，并标上A,B,C等标签。所以总结一下R语言绘图的一页多图，以及多图的拼接，子母图等的各种实现方法，！</blockquote>

<a id="more"></a>
<h1 id="cowplot：基于ggplot的可视化系统"><a href="#cowplot：基于ggplot的可视化系统" class="headerlink" title="cowplot：基于ggplot的可视化系统"></a>cowplot：基于ggplot的可视化系统</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>&emsp;&emsp;cowplot是一个ggplot2包的简单补充，意味着其可以为ggplot2提供出版物级的主题等。更重要的是，这个包可以组合多个”ggplot2”绘制的图为一个图，并且<strong>为每个图加上例如A,B,C等标签，</strong> 这在具体的出版物上通常是要求的。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">require</span>(cowplot)</div><div class="line">  </div><div class="line">plot.iris &lt;- ggplot(iris, aes(Sepal.Length, Sepal.Width)) +</div><div class="line">    geom_point() + facet_grid(. ~ Species) +</div><div class="line">    stat_smooth(method = <span class="string">"lm"</span>) +</div><div class="line">    background_grid(major = <span class="string">'y'</span>, minor = <span class="string">"none"</span>) +</div><div class="line">    panel_border() +</div><div class="line">    labs(title = <span class="string">"dot-line plot"</span>)</div><div class="line"></div><div class="line">plot.mpg &lt;- ggplot(mpg, aes(x = cty, y = hwy, colour = factor(cyl))) +</div><div class="line">    geom_point(size=<span class="number">2.5</span>) +</div><div class="line">    labs(title = <span class="string">"dot plot"</span>)</div><div class="line"></div><div class="line">plot.diamonds &lt;- ggplot(diamonds, aes(clarity, fill = cut)) +</div><div class="line">  geom_bar() +</div><div class="line">  theme(axis.text.x = element_text(angle=<span class="number">70</span>, vjust=<span class="number">0.5</span>)) +</div><div class="line">  labs(title = <span class="string">"bar plot"</span>)</div><div class="line"></div><div class="line">ggdraw() +</div><div class="line">  draw_plot(plot.iris, <span class="number">0</span>, <span class="number">.5</span>, <span class="number">1</span>, <span class="number">.5</span>) +</div><div class="line">  draw_plot(plot.mpg, <span class="number">0</span>, <span class="number">0</span>, <span class="number">.5</span>, <span class="number">.5</span>) +</div><div class="line">  draw_plot(plot.diamonds, <span class="number">.5</span>, <span class="number">0</span>, <span class="number">.5</span>, <span class="number">.5</span>) +</div><div class="line">  draw_plot_label(c(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>), c(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>), c(<span class="number">1</span>, <span class="number">0.5</span>, <span class="number">0.5</span>), size = <span class="number">15</span>)</div></pre></td></tr></table></figure>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.imgur.com/pA8y2pR.png" alt=""></p>
<p><strong>注意：其中draw_plot(plot, x = 0, y = 0, width = 1, height = 1, scale = 1)，坐标参数范围为0-1，相当于每幅图占画布长宽的百分比</strong></p>
<h1 id="rmisc包中的multiplot函数实现上述相同效果"><a href="#rmisc包中的multiplot函数实现上述相同效果" class="headerlink" title="rmisc包中的multiplot函数实现上述相同效果"></a>rmisc包中的multiplot函数实现上述相同效果</h1><p>简单高效，一句话搞定！可以实现上述同样的结果。</p>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">library</span>(<span class="string">"Rmisc"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"lattice"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div><div class="line">multiplot(plot.iris,plot.mpg,plot.diamonds, layout = matrix(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), nrow=<span class="number">2</span>, byrow=<span class="literal">TRUE</span>))</div></pre></td></tr></table></figure>
<p><strong>下面看看源码中multiplot函数，本质是grid包！！</strong></p>
<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">multiplot &lt;- <span class="keyword">function</span>(<span class="keyword">...</span>, plotlist=<span class="literal">NULL</span>, file, cols=<span class="number">1</span>, layout=<span class="literal">NULL</span>) &#123;</div><div class="line">  <span class="keyword">library</span>(grid)</div><div class="line"></div><div class="line">  <span class="comment"># Make a list from the ... arguments and plotlist</span></div><div class="line">  plots &lt;- c(list(<span class="keyword">...</span>), plotlist)</div><div class="line"></div><div class="line">  numPlots = length(plots)</div><div class="line"></div><div class="line">  <span class="comment"># If layout is NULL, then use 'cols' to determine layout</span></div><div class="line">  <span class="keyword">if</span> (is.null(layout)) &#123;</div><div class="line">    <span class="comment"># Make the panel</span></div><div class="line">    <span class="comment"># ncol: Number of columns of plots</span></div><div class="line">    <span class="comment"># nrow: Number of rows needed, calculated from # of cols</span></div><div class="line">    layout &lt;- matrix(seq(<span class="number">1</span>, cols * ceiling(numPlots/cols)),</div><div class="line">                    ncol = cols, nrow = ceiling(numPlots/cols))</div><div class="line">  &#125;</div><div class="line"></div><div class="line"> <span class="keyword">if</span> (numPlots==<span class="number">1</span>) &#123;</div><div class="line">    print(plots[[<span class="number">1</span>]])</div><div class="line"></div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="comment">###新建图表版面</span></div><div class="line">    grid.newpage() </div><div class="line">    <span class="comment">####将版面分成nrow(layout)*ncol(layout)的矩阵</span></div><div class="line">    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))</div><div class="line"></div><div class="line">    <span class="comment"># Make each plot, in the correct location</span></div><div class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:numPlots) &#123;</div><div class="line">      <span class="comment"># Get the i,j matrix positions of the regions that contain this subplot</span></div><div class="line">      matchidx &lt;- as.data.frame(which(layout == i, arr.ind = <span class="literal">TRUE</span>))</div><div class="line"></div><div class="line">      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,</div><div class="line">                                      layout.pos.col = matchidx$col))</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="grid包实现上述相同效果"><a href="#grid包实现上述相同效果" class="headerlink" title="grid包实现上述相同效果"></a>grid包实现上述相同效果</h1><h2 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">grid.newpage()  <span class="comment">###新建图表版面</span></div><div class="line">grid.text(<span class="string">"title of this panel"</span>, vp = viewport(layout.pos.row = <span class="number">1</span>, layout.pos.col = <span class="number">1</span>:<span class="number">2</span>))</div><div class="line">pushViewport(viewport(layout = grid.layout(<span class="number">2</span>,<span class="number">2</span>))) <span class="comment">####将版面分成2*2矩阵</span></div><div class="line">vplayout &lt;- <span class="keyword">function</span>(x,y)&#123;viewport(layout.pos.row = x, layout.pos.col = y)&#125;</div><div class="line">print(plot.iris, vp = vplayout(<span class="number">1</span>,<span class="number">1</span>:<span class="number">2</span>))   <span class="comment">###将（1,1)和(1,2)的位置画图plot.iris</span></div><div class="line">print(plot.mpg, vp = vplayout(<span class="number">2</span>,<span class="number">1</span>))     <span class="comment">###将(2,1)的位置画图plot.mpg         </span></div><div class="line">print(plot.diamonds , vp = vplayout(<span class="number">2</span>,<span class="number">2</span>))    <span class="comment">###将（2,2)的位置画图plot.diamonds</span></div></pre></td></tr></table></figure>
<h1 id="使用gridExtra包实现上述相同效果"><a href="#使用gridExtra包实现上述相同效果" class="headerlink" title="使用gridExtra包实现上述相同效果"></a>使用gridExtra包实现上述相同效果</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">grid.arrange( arrangeGrob(plot.iris,left=<span class="string">"A"</span>), arrangeGrob(plot.mpg, left=<span class="string">"B"</span>), arrangeGrob(plot.diamonds, left=<span class="string">"C"</span>),</div><div class="line">              layout_matrix = matrix(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), ncol=<span class="number">2</span>, byrow=<span class="literal">TRUE</span>), </div><div class="line">              top = <span class="string">"Title"</span>,left = <span class="string">"This is my global Y-axis title"</span>)</div></pre></td></tr></table></figure>
<h2 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.imgur.com/UXOj7ad.png" alt=""></p>
<p><strong>单个图的标签（A,B,C）位置和属性不是很方便调整</strong></p>
<h1 id="使用gridExtra包实现多图的轴向组合"><a href="#使用gridExtra包实现多图的轴向组合" class="headerlink" title="使用gridExtra包实现多图的轴向组合"></a>使用gridExtra包实现多图的轴向组合</h1><h2 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">hist_top &lt;- ggplot()+geom_histogram(aes(mtcars$mpg)) <span class="comment">#绘制上方条形图</span></div><div class="line"></div><div class="line">empty &lt;- ggplot()+geom_point(aes(<span class="number">1</span>,<span class="number">1</span>), colour=<span class="string">"white"</span>)+</div><div class="line">  theme(axis.ticks=element_blank(), </div><div class="line">        panel.background=element_blank(), </div><div class="line">        axis.line =element_blank(),</div><div class="line">        axis.text.x=element_blank(), axis.text.y=element_blank(),           </div><div class="line">        axis.title.x=element_blank(), axis.title.y=element_blank())</div><div class="line"></div><div class="line">scatter &lt;- ggplot()+geom_point(aes(mtcars$mpg, mtcars$qsec)) <span class="comment">#绘制主图散点图</span></div><div class="line">hist_right &lt;- ggplot()+geom_histogram(aes(mtcars$qsec))+coord_flip() <span class="comment">#绘制右侧条形图</span></div><div class="line"></div><div class="line"><span class="comment">#最终组合，由四个图拼图而成，只是右上角的图已经将各种标注去除了</span></div><div class="line">grid.arrange(hist_top, empty, scatter, hist_right, ncol=<span class="number">2</span>, nrow=<span class="number">2</span>, </div><div class="line">             widths=c(<span class="number">4</span>, <span class="number">1</span>), heights=c(<span class="number">1</span>, <span class="number">4</span>))</div></pre></td></tr></table></figure>
<h2 id="结果-2"><a href="#结果-2" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.imgur.com/hfO2XZ7.png" alt=""></p>
<h1 id="其实绘制这种组合图已经有相应的R包了–ggExtra"><a href="#其实绘制这种组合图已经有相应的R包了–ggExtra" class="headerlink" title="其实绘制这种组合图已经有相应的R包了–ggExtra"></a>其实绘制这种组合图已经有相应的R包了–ggExtra</h1><h2 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line">df &lt;- data.frame(x = mtcars$mpg, y = mtcars$qsec)</div><div class="line">p &lt;- ggplot(df, aes(x, y)) + geom_point() + theme_classic()</div><div class="line">ggExtra::ggMarginal(p, type = <span class="string">"histogram"</span>)</div></pre></td></tr></table></figure>
<p><strong>ggExtra包中最主要的函数ggMarginal - Add marginal histograms/boxplots/density plots to ggplot2 scatterplots</strong></p>
<h1 id="子母图"><a href="#子母图" class="headerlink" title="子母图"></a>子母图</h1><h2 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h2><p>&emsp;&emsp;当做分组条形图时，有时碰到一组数据特北大，其他组数据特别小，这时候就不太美观了。可能你想到的第一个办法是截断，但其实还可以用字母图，形成局部放大的效果，既可以从整体上对比，又兼顾特别小的数据组可以轻松查看，而没必要单独做两张图。</p>
<h2 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 载入需要的包</span></div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(Rmisc)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(grid)</div><div class="line"></div><div class="line"><span class="comment">#创建数据</span></div><div class="line">A &lt;- rnorm(<span class="number">10</span>,<span class="number">75</span>,<span class="number">10</span>)</div><div class="line">B &lt;- rnorm(<span class="number">10</span>,<span class="number">12</span>,<span class="number">5</span>)</div><div class="line">C &lt;- rnorm(<span class="number">10</span>,<span class="number">4</span>,<span class="number">3</span>)</div><div class="line">Group &lt;- c(rep(<span class="string">'A'</span>,<span class="number">10</span>),rep(<span class="string">'B'</span>,<span class="number">10</span>),rep(<span class="string">'C'</span>,<span class="number">10</span>))</div><div class="line">Value &lt;- c(A,B,C)</div><div class="line">D &lt;- data.frame(Group,Value)</div><div class="line"></div><div class="line"><span class="comment"># 求标准差，后面画误差要用</span></div><div class="line">DSe &lt;- summarySE(D,measurevar = <span class="string">'Value'</span>,groupvars = <span class="string">'Group'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 把组别转化成因子</span></div><div class="line">D$Group &lt;- factor(D$Group)</div><div class="line"></div><div class="line"><span class="comment"># 挑三种颜色</span></div><div class="line">C &lt;- c(<span class="string">'#55a0fb'</span>,<span class="string">'#ff8080'</span>,<span class="string">'#c5944e'</span>)</div><div class="line"></div><div class="line"><span class="comment">#画大图</span></div><div class="line">p1 &lt;- ggplot(DSe,aes(Group,Value)) + <span class="comment"># 定义环境</span></div><div class="line">  geom_bar(aes(Group,Value,fill = Group),stat = <span class="string">'identity'</span>,width = <span class="number">0.5</span>,show.legend = <span class="literal">T</span>) + <span class="comment"># 画条形图</span></div><div class="line">  geom_errorbar(aes(ymin = Value-se, ymax = Value+se),width = <span class="number">.2</span>) + <span class="comment">#加误差线</span></div><div class="line">  scale_fill_manual(values = C) + <span class="comment"># 配色</span></div><div class="line">  labs(x=<span class="string">'修改X轴为Group'</span>,y=<span class="string">'修改Y轴为Value'</span>,title = <span class="string">'添加标题'</span>)+</div><div class="line">  theme(axis.title = element_text(face = <span class="string">'bold'</span>),<span class="comment"># 定义主題，如坐标轴，标题样式、背景等</span></div><div class="line">        axis.text = element_text(face = <span class="string">'bold'</span>,colour = <span class="string">'black'</span>),</div><div class="line">        plot.title = element_text(face = <span class="string">'bold'</span>,colour = <span class="string">'black'</span>,hjust = <span class="number">0.5</span>,size = <span class="number">20</span>),</div><div class="line">        legend.background = element_rect(I(<span class="number">0</span>),linetype = <span class="number">1</span>))</div><div class="line"></div><div class="line">p1 <span class="comment"># 看下效果</span></div><div class="line"></div><div class="line"><span class="comment"># 选择小数据集、小颜色集</span></div><div class="line"></div><div class="line">DSe2 &lt;- DSe[<span class="number">2</span>:<span class="number">3</span>,]</div><div class="line"></div><div class="line">C2 &lt;- C[<span class="number">2</span>:<span class="number">3</span>]</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 画小图，基本和大图一樣，后面要背景透明、显示坐标轴</span></div><div class="line"></div><div class="line">p2 &lt;- ggplot(DSe2,aes(Group,Value)) + </div><div class="line">  geom_bar(aes(Group,Value,fill = Group), stat = <span class="string">'identity'</span>,width = <span class="number">0.5</span>) + </div><div class="line">  geom_errorbar(aes(ymin = Value-se, ymax = Value+se),width = <span class="number">.2</span>)+</div><div class="line">  scale_fill_manual(values = C2)+</div><div class="line">  guides(fill = <span class="literal">F</span>)+</div><div class="line">  theme(axis.text = element_text(face = <span class="string">'bold'</span>,colour = <span class="string">'black'</span>),</div><div class="line">        axis.title.y = element_blank(),</div><div class="line">        axis.line = element_line(linetype = <span class="number">1</span>,colour = <span class="string">'black'</span>), <span class="comment"># 显示坐标轴</span></div><div class="line">        plot.background = element_rect(I(<span class="number">0</span>),linetype = <span class="number">0</span>), <span class="comment"># 背景透明</span></div><div class="line">        panel.background = element_rect(I(<span class="number">0</span>)),</div><div class="line">        panel.grid.major = element_line(colour = <span class="literal">NA</span>),</div><div class="line">        panel.grid.minor = element_line(colour = <span class="literal">NA</span>))</div><div class="line"></div><div class="line">p2 <span class="comment"># 看下效果</span></div><div class="line"></div><div class="line"><span class="comment"># 嵌套</span></div><div class="line">sub &lt;- viewport(width = <span class="number">0.5</span>,height = <span class="number">0.4</span>,x = <span class="number">0.64</span>,y = <span class="number">0.6</span>) </div><div class="line"><span class="comment"># 配置环境。前兩個是子图的大小比例，后两个是位置，可自行调整到好看位置。</span></div><div class="line">p1 <span class="comment"># 上大图</span></div><div class="line">print(p2,vp = sub) <span class="comment"># 加小图</span></div></pre></td></tr></table></figure>
<h2 id="结果-3"><a href="#结果-3" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.imgur.com/km9h5k5.png" alt=""></p>
<p><strong>关键代码就是利用了grid包的viewport函数，viewport简单说就是图形中一块矩形区域（类似于图层），是在这个区域中进一步绘图的基础。所以我们可以利用viewport函数在任意指定位置将两个或者多个图进行拼接~</strong></p>
<hr>
<h1 id="ggplot2之分组和分面（利用facet-grid）"><a href="#ggplot2之分组和分面（利用facet-grid）" class="headerlink" title="ggplot2之分组和分面（利用facet_grid）"></a>ggplot2之分组和分面（利用facet_grid）</h1><p><strong>&emsp;&emsp;以上是不同数据来源的图，以不同展现形式组合成一个图，另外ggplot2对一个数据集合进行分组，通过分面绘图，也算是实现一页多图的效果吧~</strong></p>
<h2 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">setwd(<span class="string">"F:/R working directory/GO enrichment"</span>)</div><div class="line">data&lt;-read.csv(<span class="string">"GO.csv"</span>,header=<span class="literal">TRUE</span>,check.names = <span class="literal">FALSE</span>)</div><div class="line">data_new&lt;-subset(data,data$FDR&lt;<span class="number">0.5</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line">ggplot(data=data_new)+</div><div class="line">  theme(plot.margin=unit(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>),<span class="string">"cm"</span>))+  <span class="comment">#调整作图边距，上，右，下，左</span></div><div class="line">  geom_bar(aes(x=Term,y=Count,fill=-log10(Pvalue)),stat=<span class="string">"identity"</span>)+ <span class="comment">#指定横纵变量，stat指定统计变换</span></div><div class="line">  scale_fill_gradient(low=<span class="string">'red'</span>,high=<span class="string">'blue'</span>)+xlab(<span class="string">''</span>)+ylab(<span class="string">''</span>)+   <span class="comment">#指定注释条带</span></div><div class="line">  <span class="comment">#指定横纵标签的大小，角度，距离等细节</span></div><div class="line">  theme(axis.text.x = element_text(color=<span class="string">'black'</span>,size = <span class="number">5</span>,angle=<span class="number">90</span>, hjust=<span class="number">1</span>),</div><div class="line">        axis.text.y = element_text(color=<span class="string">'black'</span>,size=<span class="number">10</span>))+   </div><div class="line">        facet_grid(.~Type)  <span class="comment">#根据Type划分作图区块</span></div></pre></td></tr></table></figure>
<h2 id="结果-4"><a href="#结果-4" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.imgur.com/IZVQf7A.png" alt=""></p>
<p><strong>可以看到结果并不是很好，横轴标签每个分组（BP,CC,MF）均含有13个通路，这是三个分组富集到的GO通路的交集，空值显示出来并不太美观</strong></p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"F:/R working directory/GO enrichment"</span>)</div><div class="line">data&lt;-read.csv(<span class="string">"GO.csv"</span>,header=<span class="literal">TRUE</span>,check.names = <span class="literal">FALSE</span>)</div><div class="line">data_new&lt;-subset(data,data$FDR&lt;<span class="number">0.5</span>) <span class="comment">#过滤数据</span></div><div class="line">Order &lt;-<span class="number">1</span>:dim(data_new)[<span class="number">1</span>]    <span class="comment">#生成横坐标输出顺序</span></div><div class="line">data_order&lt;-cbind(data_new,Order) <span class="comment">#数据框添加一列</span></div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line">ggplot(data=data_order,aes(x=reorder(Term,data_order$Order),y=-log10(Pvalue),fill=Type))+</div><div class="line">       coord_flip()+ <span class="comment">#将图横向</span></div><div class="line">       xlab(<span class="string">''</span>)+  <span class="comment">#覆盖横坐标</span></div><div class="line">       theme(plot.margin=unit(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>),<span class="string">"cm"</span>))+  <span class="comment">#调整作图边距，上，右，下，左</span></div><div class="line">       geom_bar(stat=<span class="string">"identity"</span>)</div></pre></td></tr></table></figure>
<h2 id="结果-5"><a href="#结果-5" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.imgur.com/tLa7iuG.png" alt=""></p>
<p><strong>主要通过给数据框加一列来对每一组进行排序输出</strong></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://www.jianshu.com/p/ff05c07d42d7" target="_blank" rel="external">【R:ggplot2】同时绘制多个图</a> </p>
<p>（2）<a href="https://m.baidu.com/from=1099a/bd_page_type=1/ssid=0/uid=0/baiduid=146473DA1CD71725A4D168787307B578/w=0_10_/t=zbios/l=3/tc?ref=www_zbios&amp;pu=sz%401320_480%2Ccuid%407978D81D6BE37659D768D6902731891FF2458FDB3ORAQMNFTPI%2Ccua%40640_1136_iphone_9.3.0.11_0%2Ccut%40iPhone8%252C4_10.3.3%2Cosname%40baiduboxapp%2Cctv%401%2Ccfrom%401099a%2Ccsrc%40bdbox_tserch_txt%2Ccud%40RTMzOUY0NTItQzMwRC00OUNFLTk0MDgtM0Q0MjgyQUVBODNG%2Cta%40zbios_1_10.3_6_9.3%2Cusm%402%2Cvmgdb%400020100228y&amp;lid=13001167334004924177&amp;order=1&amp;fm=alop&amp;tj=www_normal_1_0_10_title&amp;vit=osres&amp;m=8&amp;srd=1&amp;cltj=cloud_title&amp;asres=1&amp;title=cowplot%3A%E5%9F%BA%E4%BA%8Eggplot%E7%9A%84%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F%3F%3FBiostack.org&amp;dict=32&amp;w_qd=IlPT2AEptyoA_yi7I6SxJywg&amp;sec=24387&amp;di=0f2e3ebca79135a3&amp;bdenc=1&amp;tch=124.316.52.125.2.530659&amp;nsrc=IlPT2AEptyoA_yixCFOxXnANedT62v3IEQGG_yxR0SmanEqwxPvxJxEsRHKgVmfTUCGcczO&amp;eqid=b46d6ccea0c6a0001000000559d1b6ab&amp;wd=&amp;clk_info=%7B%22srcid%22%3A%221599%22%2C%22tplname%22%3A%22www_normal%22%2C%22t%22%3A1506916022048%2C%22sig%22%3A%229731%22%2C%22xpath%22%3A%22div-a-h3%22%7D&amp;sfOpen=1" target="_blank" rel="external">cowplot：基于ggplot的可视化系统</a></p>
<p>（3）<a href="http://raindu.com/2017/06/17/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E5%9B%BE%E8%A1%A8%E6%8E%92%E7%89%88%E4%B9%8B%E4%B8%80%E9%A1%B5%E5%A4%9A%E5%9B%BE/" target="_blank" rel="external">R语言可视化——图表排版之一页多图</a></p>
<p>（4）<a href="https://stackoverflow.com/questions/38867430/add-labels-to-a-plot-made-by-grid-arrange-from-multiple-plots" target="_blank" rel="external">Add labels to a plot made by grid.arrange from multiple plots
</a></p>
<p>（5）<a href="http://blog.csdn.net/vivihe0/article/details/47188329" target="_blank" rel="external">R语言grid包使用笔记——viewport</a></p>
<p>（6）<a href="https://www.plob.org/article/3579.html" target="_blank" rel="external">利用ggplot将多个图形组合在一起（推荐-置信椭圆）</a></p>
<p>（7）<a href="https://stackoverflow.com/questions/8545035/scatterplot-with-marginal-histograms-in-ggplot2" target="_blank" rel="external">Scatterplot with marginal histograms in ggplot2（推荐）</a></p>
<p>（8）<a href="https://weiwenku.net/d/102185281" target="_blank" rel="external">你終於會做截斷圖了，可審稿人說不讓做，怎麼破？</a></p>
<p>（9）<a href="http://blog.sina.com.cn/s/blog_15ff3b88f0102wk0r.html" target="_blank" rel="external">ggplot2之分组和分面</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;发表文章一般都要求将多个相关的图组合成单个图，并标上A,B,C等标签。所以总结一下R语言绘图的一页多图，以及多图的拼接，子母图等的各种实现方法，！&lt;/blockquote&gt;
    
    </summary>
    
      <category term="R绘图" scheme="https:///AnJingwd.github.io/categories/R%E7%BB%98%E5%9B%BE/"/>
    
    
      <category term="R绘图" scheme="https:///AnJingwd.github.io/tags/R%E7%BB%98%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>文本挖掘与展示之文献关键词</title>
    <link href="https:///AnJingwd.github.io/2017/10/01/%E6%96%87%E6%9C%AC%E6%8C%96%E6%8E%98%E4%B8%8E%E5%B1%95%E7%A4%BA%E4%B9%8B%E6%96%87%E7%8C%AE%E5%85%B3%E9%94%AE%E8%AF%8D/"/>
    <id>https:///AnJingwd.github.io/2017/10/01/文本挖掘与展示之文献关键词/</id>
    <published>2017-10-01T12:35:02.000Z</published>
    <updated>2017-10-01T13:37:22.588Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">文本挖掘与展示之文献关键词</blockquote>

<a id="more"></a>
<p>&emsp;&emsp;想看看Biotechnology and bioengineering杂志上最新的研究方向及研究热点，通过对文献的keywords进行统计分析，然后用词云进行可视化展示，似乎可行。</p>
<h1 id="文献检索"><a href="#文献检索" class="headerlink" title="文献检索"></a>文献检索</h1><p><img src="https://i.imgur.com/4H6vt8n.png" alt=""></p>
<p><img src="https://i.imgur.com/1WLX7Cd.png" alt=""></p>
<p><strong>可以看到我们需要的keywords在\<div>标签下的\<p>段落内，可以通过class = “keywords”进行定位。</p></div></strong></p>
<p><strong>火狐浏览器另存页面为PubMed-NCBI.html</strong></p>
<h1 id="利用python的bs4模块解析html文件"><a href="#利用python的bs4模块解析html文件" class="headerlink" title="利用python的bs4模块解析html文件"></a>利用python的bs4模块解析html文件</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># coding=utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line">os.chdir(<span class="string">r'F:\pycharm_project\bs4'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 读取html文件并生成Soup对象</span></div><div class="line">File = open(<span class="string">'PubMed-NCBI.html'</span>,encoding=<span class="string">'UTF-8'</span>)</div><div class="line">Soup = BeautifulSoup(File,<span class="string">"lxml"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 使用finfAll方法定位class属性为keywords的div块，存入列表</span></div><div class="line">divs = Soup.findAll(<span class="string">'div'</span>, &#123;<span class="string">'class'</span>:<span class="string">'keywords'</span>&#125;)</div><div class="line"></div><div class="line">resultFile = open(<span class="string">r'.\keywords_result.txt'</span>, <span class="string">'w'</span>,encoding=<span class="string">'UTF-8'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 遍历列表divs，将结果keywords写入文件</span></div><div class="line"><span class="keyword">for</span> div <span class="keyword">in</span> divs:</div><div class="line">	resultFile.write(div.p.string + <span class="string">'\n'</span>)</div><div class="line">resultFile.close()</div></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/y03jEpN.png" alt=""></p>
<h1 id="利用R绘制词云进行展示"><a href="#利用R绘制词云进行展示" class="headerlink" title="利用R绘制词云进行展示"></a>利用R绘制词云进行展示</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">#第一步：读取</span></div><div class="line">setwd(<span class="string">"F:/R working directory/wordcloud"</span>)</div><div class="line">text&lt;-scan(<span class="string">"keywords_result.txt"</span>,what=<span class="string">''</span>)</div><div class="line"></div><div class="line"><span class="comment">#第二步：分词</span></div><div class="line"><span class="keyword">library</span>(jiebaR) <span class="comment">##加载包</span></div><div class="line">engine_s&lt;-worker() <span class="comment">##初始化分词器</span></div><div class="line"></div><div class="line">seg&lt;-segment(text,engine_s)   <span class="comment">##分词</span></div><div class="line">head(seg)</div><div class="line"></div><div class="line">f1&lt;-freq(seg)   <span class="comment">##统计词频</span></div><div class="line">head(f1)</div><div class="line"></div><div class="line">f2&lt;-f1[order((f1)[<span class="number">2</span>],decreasing=<span class="literal">TRUE</span>),]</div><div class="line"><span class="comment">##根据词频降序排列</span></div><div class="line">head(f2) </div><div class="line"></div><div class="line"><span class="comment"># 第三步：绘图</span></div><div class="line"><span class="keyword">library</span>(wordcloud2)<span class="comment">#加载wordcloud2包</span></div><div class="line">wordcloud2(f2, size = <span class="number">0.8</span> ,shape=<span class="string">'star'</span>)<span class="comment">#绘制成五角形状词云</span></div><div class="line"></div><div class="line">letterCloud(f2, size=<span class="number">1</span>, word=<span class="string">"生信学习"</span>) <span class="comment">#绘制成字符</span></div></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/hHs8QWY.jpg" alt=""></p>
<p><img src="https://i.imgur.com/gDAHtyk.jpg" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）python网络数据采集.pdf</p>
<p>（2）<a href="https://mp.weixin.qq.com/s/Zhq7ysZ5wAvWNhPEauhRsQ" target="_blank" rel="external">https://mp.weixin.qq.com/s/Zhq7ysZ5wAvWNhPEauhRsQ</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;文本挖掘与展示之文献关键词&lt;/blockquote&gt;
    
    </summary>
    
      <category term="python" scheme="https:///AnJingwd.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https:///AnJingwd.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pandas使用入门</title>
    <link href="https:///AnJingwd.github.io/2017/10/01/pandas%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/"/>
    <id>https:///AnJingwd.github.io/2017/10/01/pandas使用入门/</id>
    <published>2017-09-30T16:26:24.000Z</published>
    <updated>2017-10-01T08:00:29.192Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">pandas使用入门</blockquote>

<a id="more"></a>
<h1 id="pandas从文件读写数据"><a href="#pandas从文件读写数据" class="headerlink" title="pandas从文件读写数据"></a>pandas从文件读写数据</h1><h2 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h2><ul>
<li><p>读取txt数据（read_table默认以tab键分割数据）</p>
<p>  Exp_matrix = pd.read_table(r’.\data\game_of_thrones_geneExp.txt’)</p>
</li>
<li><p>读取csv数据（read_csv默认以逗号分割数据）</p>
<p>  Exp_matrix = pd.read_csv(r’.\data\game_of_thrones_geneExp.csv’)</p>
</li>
<li><p>读取数量不定的空白符分割的txt文件</p>
<p>  Exp_matrix = pd.read_table(r’.\data\game_of_thrones_geneExp.txt’,sep=’\s+’)</p>
</li>
<li><p>读取Excel文件数据</p>
<p>  xls_file = pd.ExcelFile(‘data.xls’)&emsp;&emsp; #创建ExcelFile实例</p>
<p>  table = xls_file.parse( ‘Sheet1’)  &emsp;&emsp; #通过parse读取到DataFrame</p>
</li>
</ul>
<p>（对于使用复杂分隔符或多字符串分隔符的文件，csv模块就无能为力了。这种情况下，就只能使用字符串的split方法或者正则表达式的re.split进行拆分和整理了）</p>
<h3 id="读数据时关于行列名选项"><a href="#读数据时关于行列名选项" class="headerlink" title="读数据时关于行列名选项"></a>读数据时关于行列名选项</h3><ul>
<li>header=None  &emsp;&emsp; #指定列名从0开始增长的数</li>
<li>names=[‘a’,’b’,’c’,’d’,’e’]    &emsp;&emsp; #用names参数指定列名</li>
<li>index_col=’e’   &emsp;&emsp; #用指定的列作为行名（index）</li>
</ul>
<h3 id="逐块读取文本文件"><a href="#逐块读取文本文件" class="headerlink" title="逐块读取文本文件"></a>逐块读取文本文件</h3><ul>
<li>nrows = 5  &emsp;&emsp; #只读取文件前5行</li>
</ul>
<h3 id="其他参数"><a href="#其他参数" class="headerlink" title="其他参数"></a>其他参数</h3><ul>
<li><p>使用skiprows跳过文件的某些行</p>
<p>  skiprows = [0,2,3]</p>
</li>
</ul>
<h2 id="写数据至文件"><a href="#写数据至文件" class="headerlink" title="写数据至文件"></a>写数据至文件</h2><ul>
<li><p>写入csv文件</p>
<p>  result.to_csv(‘D:\data\out1.csv’)</p>
</li>
</ul>
<h3 id="写数据时关于行列名选项"><a href="#写数据时关于行列名选项" class="headerlink" title="写数据时关于行列名选项"></a>写数据时关于行列名选项</h3><ul>
<li>index=False  &emsp;&emsp; #舍弃行名</li>
<li>header=False  &emsp;&emsp; #舍弃列名</li>
</ul>
<h3 id="其他参数-1"><a href="#其他参数-1" class="headerlink" title="其他参数"></a>其他参数</h3><ul>
<li>sep = ‘|’   &emsp;&emsp; #指定分隔符</li>
<li>na_rep = ‘NULL’ &emsp;&emsp; #指定缺失值表示符号</li>
</ul>
<hr>
<h1 id="数据规整化：清理，转换，合并，重塑"><a href="#数据规整化：清理，转换，合并，重塑" class="headerlink" title="数据规整化：清理，转换，合并，重塑"></a>数据规整化：清理，转换，合并，重塑</h1><h2 id="pandas访问元素"><a href="#pandas访问元素" class="headerlink" title="pandas访问元素"></a>pandas访问元素</h2><ul>
<li><p>取前8行</p>
<p>  Exp_matrix_class_3 = Exp_matrix[0:8]</p>
</li>
<li><p>取前8列</p>
<p>  Exp_matrix_class_3 = Exp_matrix[Exp_matrix.columns[0:8]]</p>
</li>
<li><p>取前8行，及1-3列</p>
<p>  Exp_matrix_class_3 = Exp_matrix.iloc[0:8,1:4]</p>
</li>
<li><p>根据条件筛选行</p>
<p>  Exp_matrix[Exp_matrix[‘Class’] == 3]</p>
</li>
<li><p>数据框转置</p>
<p>  Exp_matrix_class_3_T = Exp_matrix_class_3.T</p>
</li>
</ul>
<p>注意：</p>
<p>(1)行列最小从0开始</p>
<p>(2)取值区间左闭右开</p>
<h2 id="Dataframe-排序"><a href="#Dataframe-排序" class="headerlink" title="Dataframe 排序"></a>Dataframe 排序</h2><ul>
<li>逆序<br>   Exp_matrix_T.sort_values([‘abs_dif_3_5’], ascending=False)</li>
</ul>
<h2 id="轴向连接"><a href="#轴向连接" class="headerlink" title="轴向连接"></a>轴向连接</h2><ul>
<li><p>行合并</p>
<p>  result = pd.concat([Exp_matrix_T[1:2],result_gene])</p>
</li>
<li><p>增加一列</p>
<p>  Exp_matrix_T[‘abs_dif_3_5’] = abs_dif_3_5</p>
</li>
</ul>
<h1 id="计算描述统计：统计函数"><a href="#计算描述统计：统计函数" class="headerlink" title="计算描述统计：统计函数"></a>计算描述统计：统计函数</h1><table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>count</td>
<td>非NA值的数量</td>
</tr>
<tr>
<td>describe</td>
<td>针对Series或各DataFrame列计算汇总统计</td>
</tr>
<tr>
<td>min,max</td>
<td>计算最小值和最大值</td>
</tr>
<tr>
<td>argmin,argmax</td>
<td>计算能够获取到最小值和最大值的索引位置（整数)</td>
</tr>
<tr>
<td>idxmin,idxmax</td>
<td>计算能够获取到最小值和最大值的索引值</td>
</tr>
<tr>
<td>quantile</td>
<td>计算样本的分位数（0到 1） </td>
</tr>
<tr>
<td>sum</td>
<td>值的总和</td>
</tr>
<tr>
<td>mean</td>
<td>值的平均数， a.mean() 默认对每一列的数据求平均值；若加上参数a.mean(1)则对每一行求平均值</td>
</tr>
<tr>
<td>media</td>
<td>值的算术中位数（50%分位数)</td>
</tr>
<tr>
<td>mad</td>
<td>根据平均值计算平均绝对离差</td>
</tr>
<tr>
<td>var</td>
<td>样本值的方差 </td>
</tr>
<tr>
<td>std</td>
<td>样本值的标准差</td>
</tr>
<tr>
<td>skew</td>
<td>样本值的偏度（三阶矩）</td>
</tr>
<tr>
<td>kurt</td>
<td>样本值的峰度（四阶矩）</td>
</tr>
<tr>
<td>cumsum</td>
<td>样本值的累计和</td>
</tr>
<tr>
<td>cummin,cummax</td>
<td>样本值的累计最大值和累计最小</td>
</tr>
<tr>
<td>cumprod</td>
<td>样本值的累计积</td>
</tr>
<tr>
<td>diff</td>
<td>计算一阶差分（对时间序列很有用) </td>
</tr>
<tr>
<td>pct_change</td>
<td>计算百分数变化</td>
</tr>
</tbody>
</table>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://blog.csdn.net/stevenkwong/article/details/52528616" target="_blank" rel="external">PANDAS 数据合并与重塑（concat篇）</a></p>
<p>（2）<a href="http://www.cnblogs.com/pengsixiong/p/5050833.html" target="_blank" rel="external">pandas数据的导入与导出</a></p>
<p>（3）<a href="http://bluewhale.cc/2016-08-06/use-pandas-filter-and-sort.html" target="_blank" rel="external">使用Pandas对数据进行筛选和排序</a></p>
<p>（4）<a href="http://blog.csdn.net/pipisorry/article/details/25625799" target="_blank" rel="external">pandas小记：pandas计算工具-汇总统计</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;pandas使用入门&lt;/blockquote&gt;
    
    </summary>
    
      <category term="python" scheme="https:///AnJingwd.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https:///AnJingwd.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>linux的CPU拓扑结构（Topology）</title>
    <link href="https:///AnJingwd.github.io/2017/09/17/linux%E7%9A%84CPU%E6%8B%93%E6%89%91%E7%BB%93%E6%9E%84%EF%BC%88Topology%EF%BC%89/"/>
    <id>https:///AnJingwd.github.io/2017/09/17/linux的CPU拓扑结构（Topology）/</id>
    <published>2017-09-17T07:46:01.000Z</published>
    <updated>2017-09-17T10:11:19.431Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">由一次教训驱动的学习</blockquote>

<p>&emsp;&emsp;“用服务器的同学注意下，以后请尽量不要在登录节点（frontend）提交任务，实在需要提交任务请注意任务消耗的资源情况，以免内存耗尽导致服务器死机！因为登录节点死机的话其他节点就都无法使用了！”</p>
<a id="more"></a>
<p>登陆节点frontend：</p>
<pre><code>[wangdong@frontend ~]$
</code></pre><p><img src="https://i.imgur.com/UAY0Lsw.jpg" alt=""></p>
<h1 id="查看某一节点cpu使用情况"><a href="#查看某一节点cpu使用情况" class="headerlink" title="查看某一节点cpu使用情况"></a>查看某一节点cpu使用情况</h1><p>例如第6节点：</p>
<pre><code>ssh node6 &apos;top -n 1 -b&apos;| head
</code></pre><p><img src="https://i.imgur.com/2iByJW3.jpg" alt=""></p>
<h1 id="批量查看节点cpu使用情况"><a href="#批量查看节点cpu使用情况" class="headerlink" title="批量查看节点cpu使用情况"></a>批量查看节点cpu使用情况</h1><pre><code>for((i=2;i&lt;=8;i++));do ssh node${i} &apos;top -n 1 -b&apos;| head ;done
</code></pre><h1 id="更换节点"><a href="#更换节点" class="headerlink" title="更换节点"></a>更换节点</h1><p>例如更换至6节点：</p>
<pre><code>ssh node6
</code></pre><p>[wangdong@node6 ~]$</p>
<p><img src="https://i.imgur.com/bQQnZuf.jpg" alt=""></p>
<p>具体含义：<a href="http://jingyan.baidu.com/article/4d58d5412917cb9dd4e9c0ed.html" target="_blank" rel="external">参考</a></p>
<h1 id="不切换当前节点，在其他节点运行命令"><a href="#不切换当前节点，在其他节点运行命令" class="headerlink" title="不切换当前节点，在其他节点运行命令"></a>不切换当前节点，在其他节点运行命令</h1><p>直接把命令写在ssh nodeX后面，然后是我习惯于加引号</p>
<pre><code>ssh nodeX &apos;command&apos;
</code></pre><p>注意：</p>
<ul>
<li>登录节点主要用于日常操作，如提交作业、查看作业运行情况、编辑、编译、压缩/解压缩等</li>
<li>不要在登录节点不通过作业调度系统直接运行作业，以免影响其余用户的正常使用</li>
</ul>
<p>&emsp;&emsp;一般跑小程序不用考虑这些，但大程序消耗内存很大，所以尽量不要在登录节点（frontend）提交任务，实在需要提交任务请注意任务消耗的资源情况，以免内存耗尽导致服务器死机！因为登录节点死机的话其他节点就都无法使用了。</p>
<hr>
<h1 id="补充命令"><a href="#补充命令" class="headerlink" title="补充命令"></a>补充命令</h1><h2 id="top查看当前运行的任务情况"><a href="#top查看当前运行的任务情况" class="headerlink" title="top查看当前运行的任务情况"></a>top查看当前运行的任务情况</h2><p>&emsp;&emsp;<strong>linux下用top命令查看cpu利用率超过100%。这里显示的所有的cpu加起来的使用率，说明你的CPU是多核，你运行top后按大键盘1看看，可以显示每个cpu的使用率，top里显示的是把所有使用率加起来。</strong></p>
<p><img src="https://i.imgur.com/eGIFLwf.png" alt=""></p>
<p>注意：</p>
<ul>
<li><p>按下1后可以看到我的机器的CPU是16核的。%Cpu0,,,,,,%Cpu15。</p>
</li>
<li><p><strong>若是 0 代表目前该核心空闲， 可以运算作业。 100代表 cpu核心满负荷运算。若某个节点 16 个 CPU 负荷已很高， 换至其余空闲节点运算作业。 建议一个计算节点核心数最多使用 15 核。</strong></p>
</li>
</ul>
<h2 id="查看-CPU-Topology（拓扑结构）："><a href="#查看-CPU-Topology（拓扑结构）：" class="headerlink" title="查看 CPU Topology（拓扑结构）："></a>查看 CPU Topology（拓扑结构）：</h2><pre><code>cat /proc/cpuinfo 
</code></pre><p><img src="https://i.imgur.com/nmPkqRq.jpg" alt=""></p>
<p>具体含义：<a href="http://blog.sina.com.cn/s/blog_4a6151550100iowl.html" target="_blank" rel="external">参考</a></p>
<ul>
<li><p>逻辑CPU个数：</p>
<p>  cat /proc/cpuinfo | grep ‘processor’ | wc -l</p>
</li>
<li><p>物理CPU个数：</p>
<p>  cat /proc/cpuinfo | grep ‘physical id’ | sort | uniq | wc -l</p>
</li>
<li><p>每个物理CPU中Core的个数：</p>
<p>  cat /proc/cpuinfo | grep ‘cpu cores’ | wc -l</p>
</li>
</ul>
<p><img src="https://i.imgur.com/xACj6do.jpg" alt=""></p>
<h2 id="查看内存的总量及消耗"><a href="#查看内存的总量及消耗" class="headerlink" title="查看内存的总量及消耗"></a>查看内存的总量及消耗</h2><pre><code>free -g 
</code></pre><p><img src="https://i.imgur.com/wAobMtr.jpg" alt=""></p>
<p>具体含义  <a href="http://blog.csdn.net/gxl0805/article/details/39393709" target="_blank" rel="external">参考</a></p>
<h1 id="补充知识"><a href="#补充知识" class="headerlink" title="补充知识"></a>补充知识</h1><h2 id="NUNA与SMP"><a href="#NUNA与SMP" class="headerlink" title="NUNA与SMP"></a>NUNA与SMP</h2><p>&emsp;&emsp;NUMA(Non-Uniform Memory Access，非一致性内存访问)和SMP(Symmetric Multi-Processor，对称多处理器系统)是两种不同的CPU硬件体系架构。</p>
<p>&emsp;&emsp;SMP的主要特征是共享，所有的CPU共享使用全部资源，例如内存、总线和I/O，多个CPU对称工作，彼此之间没有主次之分，平等地访问共享的资源，这样势必引入资源的竞争问题，从而导致它的扩展内力非常有限。</p>
<p>&emsp;&emsp;NUMA技术将CPU划分成不同的组（Node)，每个Node由多个CPU组成，并且有独立的本地内存、I/O等资源。Node之间通过互联模块连接和沟通，因此除了本地内存外，每个CPU仍可以访问远端Node的内存，只不过效率会比访问本地内存差一些，我们用Node之间的距离（Distance，抽象的概念）来定义各个Node之间互访资源的开销。</p>
<p>&emsp;&emsp;如果你只知道CPU这么一个概念，那么是无法理解CPU的拓扑的。<strong>事实上，在NUMA架构下，CPU的概念从大到小依次是：Node、Socket、Core、Processor（Node-&gt;Socket-&gt;Core-&gt;Processor）</strong></p>
<p>&emsp;&emsp;<strong>随着多核技术的发展，我们将多个CPU封装在一起，这个封装一般被称为Socket（插槽的意思，也有人称之为Packet，不知到哪个更加准确？），而Socket中的每个核心被称为Core。为了进一步提升CPU的处理能力，Intel又引入了HT（Hyper-Threading，超线程)的技术，一个Core打开HT之后，在OS看来就是两个核，当然这个核是逻辑上的概念，所以也被称为Logical Processor，本文简称为Processor。</strong></p>
<p>&emsp;&emsp;综上所述，<strong>一个NUMA Node可以有一个或者多个Socket，一个多核Socket显然包含多个Core，一个Core如果打开HT则变成两个Logical Processor。</strong> Logical processor只是OS内部看到的，实际上两个Processor还是位于同一个Core上，所以频繁的调度仍可能导致资源竞争，影响性能。</p>
<h2 id="查看Numa-Node"><a href="#查看Numa-Node" class="headerlink" title="查看Numa Node"></a>查看Numa Node</h2><p>numactl是设定进程NUMA策略的命令行工具，也可以用来查看当前的Nuwa node:</p>
<pre><code>numactl --hardware
</code></pre><p><img src="https://i.imgur.com/TCYq3bu.jpg" alt=""></p>
<p>从上面可以看出本机有两个Numa node，如果要进一步知道一个Node包含哪几个CPU，该怎么办？</p>
<p>一种方法是通过查看ls /sys/devices/system/node/目录下的信息，例如：</p>
<p><img src="https://i.imgur.com/3pOcus6.jpg" alt=""></p>
<p>cpu0  cpu1  cpu10  cpu11  cpu2  cpu3  cpu8  cpu9  cpumap  distance  meminfo  numastat</p>
<p><strong>可见, node0包含4/5/6/7/12/13/14/15八个Processor（刚好是一个Socket）。</strong></p>
<h2 id="查看Socket"><a href="#查看Socket" class="headerlink" title="查看Socket"></a>查看Socket</h2><p>&emsp;&emsp;<strong>一个Socket对应主板上的一个插槽，在本文中是指一个CPU封装。在/proc/cpuinfo中的physical id就是Socket的ID，可以从中找到本机到底有多少个Socket，并且每个Socket有那几个Processor。</strong></p>
<p>1) 查看有几个Socket</p>
<pre><code>$ grep &apos;physical id&apos; /proc/cpuinfo | awk -F: &apos;{print $2 | &quot;sort -un&quot;}&apos;
0
1
$ grep &apos;physical id&apos; /proc/cpuinfo | awk -F: &apos;{print $2 | &quot;sort -un&quot;}&apos; | wc -l
2
</code></pre><p>2) 查看每个Socket有几个Processor</p>
<pre><code>$ grep &apos;physical id&apos; /proc/cpuinfo | awk -F: &apos;{print $2}&apos; | sort | uniq -c
8  0
8  1
</code></pre><p>3) 查看Socket对应那几个Processor</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">awk -F: <span class="string">'&#123; </span></div><div class="line"><span class="string">    if ($1 ~ /processor/) &#123;</span></div><div class="line"><span class="string">        gsub(/ /,"",$2);</span></div><div class="line"><span class="string">        p_id=$2;</span></div><div class="line"><span class="string">    &#125; else if ($1 ~ /physical id/)&#123;</span></div><div class="line"><span class="string">        gsub(/ /,"",$2);</span></div><div class="line"><span class="string">        s_id=$2;</span></div><div class="line"><span class="string">        arr[s_id]=arr[s_id] " " p_id</span></div><div class="line"><span class="string">    &#125;</span></div><div class="line"><span class="string">&#125; </span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">END&#123;</span></div><div class="line"><span class="string">    for (i in arr) </span></div><div class="line"><span class="string">        print arr[i];</span></div><div class="line"><span class="string">&#125;'</span> /proc/cpuinfo | cut -c2-</div></pre></td></tr></table></figure>
<p>0 1 2 3 8 9 10 11<br>4 5 6 7 12 13 14 15</p>
<h2 id="查看Core"><a href="#查看Core" class="headerlink" title="查看Core"></a>查看Core</h2><p><strong>/proc/cpuinfo文件中的cpu cores表明一个socket中有几个cores，</strong>例如：</p>
<pre><code>cat /proc/cpuinfo | grep &apos;core&apos;  | sort -u
</code></pre><p><img src="https://i.imgur.com/acrKbul.jpg" alt=""></p>
<p><strong>上面的结果说明一个socket有4个cores，它们的id分别为0/1/9/10，根据之前查到的我们的机器有2个socket，所以总共有8个core。</strong></p>
<h2 id="查看Processor"><a href="#查看Processor" class="headerlink" title="查看Processor"></a>查看Processor</h2><p>&emsp;&emsp;查看Processors的个数就比较简单了，从上面的统计结果中我们已经可以知道有16个Logical processor，不过也可以直接从/proc/cpuinfo文件中获取：</p>
<pre><code>$ grep &apos;processor&apos; /proc/cpuinfo | wc -l
16
</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://www.bio-info-trainee.com/1028.html" target="_blank" rel="external">http://www.bio-info-trainee.com/1028.html</a></p>
<p>（2）<a href="http://www.iwhgao.com/2-5-%E9%9B%86%E7%BE%A4%E4%BD%9C%E4%B8%9A%E6%8F%90%E4%BA%A4%E7%AE%A1%E7%90%86%E7%AE%80%E4%BB%8B/" target="_blank" rel="external">rabbit gao’s blog</a></p>
<p>（3）<a href="http://blog.csdn.net/huangshanchun/article/details/44397581" target="_blank" rel="external">http://blog.csdn.net/huangshanchun/article/details/44397581</a></p>
<p>（4）<a href="http://kodango.com/cpu-topology" target="_blank" rel="external">团子的小窝</a> （推荐）</p>
<p>（5）<a href="http://tieba.baidu.com/p/1285719732?red_tag=s0690960116" target="_blank" rel="external">http://tieba.baidu.com/p/1285719732?red_tag=s0690960116</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;由一次教训驱动的学习&lt;/blockquote&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;“用服务器的同学注意下，以后请尽量不要在登录节点（frontend）提交任务，实在需要提交任务请注意任务消耗的资源情况，以免内存耗尽导致服务器死机！因为登录节点死机的话其他节点就都无法使用了！”&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="https:///AnJingwd.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https:///AnJingwd.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>R语言之批量导入csv文件，并以文件名作为变量名</title>
    <link href="https:///AnJingwd.github.io/2017/09/04/R%E8%AF%AD%E8%A8%80%E4%B9%8B%E6%89%B9%E9%87%8F%E5%AF%BC%E5%85%A5csv%E6%96%87%E4%BB%B6%EF%BC%8C%E5%B9%B6%E4%BB%A5%E6%96%87%E4%BB%B6%E5%90%8D%E4%BD%9C%E4%B8%BA%E5%8F%98%E9%87%8F%E5%90%8D/"/>
    <id>https:///AnJingwd.github.io/2017/09/04/R语言之批量导入csv文件，并以文件名作为变量名/</id>
    <published>2017-09-04T05:29:34.000Z</published>
    <updated>2017-09-04T07:19:35.807Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;当要处理一批csv文件时，一个一个读入就太麻烦而且太low了。那么如何一次将工作路径的csv文件读入当前环境空间（Environment），并且使用文件名作为变量名，使用时直接调用即可呢??</p>
<a id="more"></a>
<h1 id="批量读入csv文件"><a href="#批量读入csv文件" class="headerlink" title="批量读入csv文件"></a>批量读入csv文件</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#将列表中文件读入环境空间，并以文件名作为变量名</span></div><div class="line">mycsvfile = list.files(pattern=<span class="string">"*.csv"</span>)   <span class="comment">#生成.csv文件的列表</span></div><div class="line">list2env(</div><div class="line">  lapply(setNames(mycsvfile, make.names(gsub(<span class="string">"*.csv$"</span>, <span class="string">""</span>, mycsvfile))),</div><div class="line">         read.csv,header=<span class="literal">TRUE</span>,check.names=<span class="literal">FALSE</span>), envir = .GlobalEnv)</div></pre></td></tr></table></figure>
<h1 id="当然，上述语句也可以用于批量读入txt文件"><a href="#当然，上述语句也可以用于批量读入txt文件" class="headerlink" title="当然，上述语句也可以用于批量读入txt文件"></a>当然，上述语句也可以用于批量读入txt文件</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mytxtfile = list.files(pattern=<span class="string">"*.txt"</span>)</div><div class="line">list2env(</div><div class="line">  lapply(setNames(mytxtfile, make.names(gsub(<span class="string">"*.txt$"</span>, <span class="string">""</span>, mytxtfile))),</div><div class="line">         read.table,header=<span class="literal">TRUE</span>,sep=<span class="string">"\t"</span>), envir = .GlobalEnv)</div></pre></td></tr></table></figure>
<h1 id="批量读入自定义函数"><a href="#批量读入自定义函数" class="headerlink" title="批量读入自定义函数"></a>批量读入自定义函数</h1><p>对于自定义的函数，可以通过source函数导入环境空间，然后才能调用，当然也可以写个函数，调用此函数批量导入罗！！！</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">sourceDir &lt;- <span class="keyword">function</span>(path, trace = <span class="literal">TRUE</span>, <span class="keyword">...</span>) &#123;</div><div class="line">  <span class="keyword">for</span> (nm <span class="keyword">in</span> list.files(path, pattern = <span class="string">"[.][RrSsQq]$"</span>)) &#123;</div><div class="line">    <span class="keyword">if</span>(trace) cat(nm,<span class="string">":"</span>)</div><div class="line">    <span class="keyword">source</span>(file.path(path, nm), <span class="keyword">...</span>)</div><div class="line">    <span class="keyword">if</span>(trace) cat(<span class="string">"\n"</span>)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">sourceDir(<span class="string">"自定义函数所在文件夹的完整路径"</span>)</div></pre></td></tr></table></figure>
<h1 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h1><p>涉及到的语法，包括R语言的环境空间，正则表达式。</p>
<p>1.R语言的环境空间</p>
<p>在R语言中，不管是变量，对象，或者函数，都存在于R的环境空间中，R程序在运行时都有自己的运行空间。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 当前环境空间</span></div><div class="line">&gt; .GlobalEnv</div><div class="line"></div><div class="line"><span class="comment"># 列出当前环境中的变量 </span></div><div class="line">&gt; ls()</div><div class="line"><span class="comment"># 查看环境空间加载的包</span></div><div class="line">&gt; search()</div></pre></td></tr></table></figure>
<p>2.正则表达式</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pattern=<span class="string">"*.csv"</span>  <span class="comment">#list.files函数中用正则表达式匹配文件名的一个选项</span></div><div class="line">gsub(<span class="string">"*.txt$"</span>, <span class="string">""</span>, mytxtfile)  <span class="comment">#匹配以.txt结尾的文件名，将其替换为空，也就是去掉.txt，只留文件名作为变量名</span></div></pre></td></tr></table></figure>
<p>3.lapply函数用于对mytxtfile列表中的文件，都应用read.csv函数，从而实现批量读取文件</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;当要处理一批csv文件时，一个一个读入就太麻烦而且太low了。那么如何一次将工作路径的csv文件读入当前环境空间（Environment），并且使用文件名作为变量名，使用时直接调用即可呢??&lt;/p&gt;
    
    </summary>
    
      <category term="R" scheme="https:///AnJingwd.github.io/categories/R/"/>
    
    
      <category term="R" scheme="https:///AnJingwd.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>python实现excel二维表格格式化</title>
    <link href="https:///AnJingwd.github.io/2017/09/02/python%E5%AE%9E%E7%8E%B0excel%E4%BA%8C%E7%BB%B4%E8%A1%A8%E6%A0%BC%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    <id>https:///AnJingwd.github.io/2017/09/02/python实现excel二维表格格式化/</id>
    <published>2017-09-02T03:40:51.000Z</published>
    <updated>2017-09-02T04:45:33.389Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;Excel 是 Windows 环境下流行的、强大的电子表格应用。openpyxl 模块让 Python 程序能读取和修改 Excel 电子表格文<br>件。例如，可能有一个无聊的任务，需要从一个电子表格拷贝一些数据，粘贴到另一个电子表格中。或者可能需要从几千行中挑选几行，根据某种条件稍作修改。或者需要查看几百份部门预算电子表格，寻找其中的赤字。正是这种无聊无脑的电子表格任务，可以通过 Python 来完成。</p>
<p>&emsp;&emsp;同时，发现之前写了很多小脚本，但代码的复用率极低。因此，今后的代码得更加注意用函数进行代码的封装。EXCEL中行的排序及筛选比较容易，但对于列比较麻烦。在此，通过一个对EXCEL列排序及筛选（取子列）的例子进行演示。</p>
<a id="more"></a>
<h1 id="sort-column-py"><a href="#sort-column-py" class="headerlink" title="sort_column.py"></a>sort_column.py</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding:utf-8 -*-</span></div><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">EXCEL文件列根据自定义规则排序</span></div><div class="line"><span class="string">'''</span></div><div class="line"></div><div class="line">__file__    = <span class="string">'sort_column.py'</span></div><div class="line">__date__    = <span class="string">'2017-9-2'</span></div><div class="line">__version__ = <span class="string">'0.1'</span></div><div class="line">__author__  = <span class="string">'anjing'</span></div><div class="line">__blog__    = <span class="string">'https://anjingwd.github.io/'</span></div><div class="line">__license__ = <span class="string">'GPL v3 License'</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort_column</span><span class="params">(file, row1, column1_letter ,column2_letter)</span>:</span></div><div class="line"></div><div class="line">	<span class="keyword">import</span> openpyxl</div><div class="line">	<span class="keyword">from</span> openpyxl.cell <span class="keyword">import</span> column_index_from_string</div><div class="line"></div><div class="line">	<span class="comment">#列字母和数字之间的转换</span></div><div class="line">	column1_num = column_index_from_string(str(column1_letter))</div><div class="line">	column2_num = column_index_from_string(str(column2_letter))</div><div class="line"></div><div class="line">	<span class="comment">#从工作簿中取得工作表</span></div><div class="line">	wb = openpyxl.load_workbook(file)</div><div class="line">	sheet1 = wb.get_sheet_by_name(<span class="string">'Sheet1'</span>)</div><div class="line">	sheet2 = wb.get_sheet_by_name(<span class="string">'Sheet2'</span>)</div><div class="line">	sheet3 = wb.create_sheet(<span class="string">'result_sorted'</span>)</div><div class="line"></div><div class="line">	<span class="comment">#按顺序记录下待排序列的列号</span></div><div class="line">	order = []</div><div class="line">	<span class="comment">#注意range范围是左闭区间，右开区间</span></div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,sheet2.max_row+<span class="number">1</span>):</div><div class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> range(column1_num, column2_num+<span class="number">1</span>):</div><div class="line">			<span class="keyword">if</span> sheet2.cell(row=i, column=<span class="number">1</span>).value == sheet1.cell(row=row1, column=j).value:</div><div class="line">				order.append(j)</div><div class="line"></div><div class="line">	<span class="comment">#将排序结果写入新的sheet3</span></div><div class="line">	count = column1_num</div><div class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> order:</div><div class="line">		<span class="keyword">for</span> i <span class="keyword">in</span> range(row1, sheet1.max_row+<span class="number">1</span>):</div><div class="line">			sheet3.cell(row=i, column=count).value = sheet1.cell(row=i, column=j).value</div><div class="line">		count += <span class="number">1</span></div><div class="line"></div><div class="line">	<span class="comment">#将起始列之前的列写入，一般是行名等</span></div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(row1, sheet1.max_row+<span class="number">1</span>):</div><div class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, column1_num):</div><div class="line">			sheet3.cell(row=i, column=j).value = sheet1.cell(row=i, column=j).value</div><div class="line"></div><div class="line">	<span class="comment"># 写入之后需要保存</span></div><div class="line">	wb.save(file)</div><div class="line">	print(<span class="string">"Everything has been done"</span>)</div><div class="line"></div><div class="line"><span class="comment">######################################################################################################</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line"></div><div class="line">	print(<span class="string">'对excel文件指定列区间排序，sheet1为数据，sheet2为自定义顺序顺序。'</span>)</div><div class="line">	print(<span class="string">'四个参数：输入excel绝对路径，需排序列的标题，列的起始列，终止列'</span>)</div><div class="line">	print(<span class="string">r'用法例如：python sort_column.py F:\pycharm_project\excel_format\new1.xlsx 1 H AU'</span>)</div><div class="line"></div><div class="line">	<span class="comment">#Sys.argv是一个元组，里边的项为用户从程序外部输入的参数</span></div><div class="line">	<span class="keyword">import</span> sys</div><div class="line">	file = sys.argv[<span class="number">1</span>]</div><div class="line">	row1 = int(sys.argv[<span class="number">2</span>])</div><div class="line">	column1_letter = sys.argv[<span class="number">3</span>]</div><div class="line">	column2_letter = sys.argv[<span class="number">4</span>]</div><div class="line">	sort_column(file, row1, column1_letter, column2_letter)</div></pre></td></tr></table></figure>
<h1 id="测试数据-new1-xlsx"><a href="#测试数据-new1-xlsx" class="headerlink" title="测试数据 new1.xlsx"></a>测试数据 new1.xlsx</h1><p>Sheet1</p>
<p><img src="https://i.imgur.com/fm8rjs8.png" alt=""></p>
<p>Sheet2</p>
<p><img src="https://i.imgur.com/tme2ia3.png" alt=""></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>在cmd下进入脚本sort_column.py和测试数据new1.xlsx所在目录，运行：</p>
<pre><code>python sort_column.py F:\pycharm_project\excel_format\new1.xlsx 1 B S
</code></pre><h1 id="结果result-sorted"><a href="#结果result-sorted" class="headerlink" title="结果result_sorted"></a>结果result_sorted</h1><p><img src="https://i.imgur.com/wlUd4Ky.png" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）书籍-Python编程快速上手让繁琐工作自动化–第12章处理 Excel 电子表格</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;Excel 是 Windows 环境下流行的、强大的电子表格应用。openpyxl 模块让 Python 程序能读取和修改 Excel 电子表格文&lt;br&gt;件。例如，可能有一个无聊的任务，需要从一个电子表格拷贝一些数据，粘贴到另一个电子表格中。或者可能需要从几千行中挑选几行，根据某种条件稍作修改。或者需要查看几百份部门预算电子表格，寻找其中的赤字。正是这种无聊无脑的电子表格任务，可以通过 Python 来完成。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;同时，发现之前写了很多小脚本，但代码的复用率极低。因此，今后的代码得更加注意用函数进行代码的封装。EXCEL中行的排序及筛选比较容易，但对于列比较麻烦。在此，通过一个对EXCEL列排序及筛选（取子列）的例子进行演示。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https:///AnJingwd.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https:///AnJingwd.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>解决ggplot 作图x轴和y轴不重合问题</title>
    <link href="https:///AnJingwd.github.io/2017/09/01/%E8%A7%A3%E5%86%B3ggplot-%E4%BD%9C%E5%9B%BEx%E8%BD%B4%E5%92%8Cy%E8%BD%B4%E4%B8%8D%E9%87%8D%E5%90%88%E9%97%AE%E9%A2%98/"/>
    <id>https:///AnJingwd.github.io/2017/09/01/解决ggplot-作图x轴和y轴不重合问题/</id>
    <published>2017-09-01T04:43:03.000Z</published>
    <updated>2017-09-01T04:54:22.189Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">解决ggplot 作图x轴和y轴不重合问题</blockquote>

<a id="more"></a>
<p>只需要在作图时加上加上一下代码，即可即可让x轴和y轴在坐标原点重合：</p>
<pre><code>scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
</code></pre><p>现在用测试代码看看前后变化：</p>
<pre><code>library(ggplot2)
df &lt;- data.frame(x = 1:5, y = 1:5)
p1 &lt;- ggplot(df, aes(x, y)) + geom_point()
p1 &lt;- p1 + expand_limits(x = 0, y = 0)
p1
</code></pre><p><img src="http://i.imgur.com/c0EnfOi.png" alt=""></p>
<pre><code>library(ggplot2)
df &lt;- data.frame(x = 1:5, y = 1:5)
p2 &lt;- ggplot(df, aes(x, y)) + geom_point()
p2 &lt;- p2 + expand_limits(x = 0, y = 0)+ scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
p2
</code></pre><p><img src="http://i.imgur.com/2GNk480.png" alt=""></p>
<p>参考：</p>
<p>（1）<a href="http://stackoverflow.com/questions/36669095/y-axis-wont-start-at-0-in-ggplot" target="_blank" rel="external">http://stackoverflow.com/questions/36669095/y-axis-wont-start-at-0-in-ggplot</a></p>
<p>（2）<a href="http://stackoverflow.com/questions/13701347/force-the-origin-to-start-at-0-in-ggplot2-r" target="_blank" rel="external">http://stackoverflow.com/questions/13701347/force-the-origin-to-start-at-0-in-ggplot2-r</a></p>
<p>（3）<a href="http://stackoverflow.com/questions/29955618/starting-y-axis-at-0-using-ggplot-and-facet-wrap" target="_blank" rel="external">http://stackoverflow.com/questions/29955618/starting-y-axis-at-0-using-ggplot-and-facet-wrap</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;解决ggplot 作图x轴和y轴不重合问题&lt;/blockquote&gt;
    
    </summary>
    
      <category term="R-绘图" scheme="https:///AnJingwd.github.io/categories/R-%E7%BB%98%E5%9B%BE/"/>
    
    
      <category term="R-绘图" scheme="https:///AnJingwd.github.io/tags/R-%E7%BB%98%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>批量fastqc</title>
    <link href="https:///AnJingwd.github.io/2017/08/30/%E6%89%B9%E9%87%8Ffastqc/"/>
    <id>https:///AnJingwd.github.io/2017/08/30/批量fastqc/</id>
    <published>2017-08-30T01:26:21.000Z</published>
    <updated>2017-09-01T03:16:09.393Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">分别介绍使用循环和MultiQC软件两种方式批量进行fastqc</blockquote>

<a id="more"></a>
<h1 id="方法一：循环与命令并行"><a href="#方法一：循环与命令并行" class="headerlink" title="方法一：循环与命令并行"></a>方法一：循环与命令并行</h1><p>问：</p>
<p>我当前文件夹下面有100个fastq测序文件，我要批量对他们运行fastqc软件（软件安装目录：~/biosoft/fastqc ）来处理，所以写了脚本<br>    ls *fastq | while read id ; do ~/biosoft/fastqc $id;done</p>
<p>但是这样有一个弊端，就是这100个fastq测序文件是一个个被运行，这样耗时太长！<br>所以我稍作修改：</p>
<pre><code>ls *fastq | while read id ; do nohup ~/biosoft/fastqc $id &amp; ;done
</code></pre><p>这样又一下子把100个fastqc任务提交了，我的服务器根本受不了。</p>
<p>所以需要修改修改脚本，让它一下子并行提交10个任务，因为我服务器限制。</p>
<p>该如何最简单的完成呢？</p>
<p>答：加个参数-p</p>
<pre><code>ls *fastq | xargs -n 1 -p 10 -i FQ ~/biosoft/fastqc FQ
</code></pre><p>每次最多提交10个文件，加-p就可以并行计算啦</p>
<h1 id="方法二：MultiQC"><a href="#方法二：MultiQC" class="headerlink" title="方法二：MultiQC"></a>方法二：MultiQC</h1><p>homepage: <a href="http://multiqc.info" target="_blank" rel="external">http://multiqc.info</a></p>
<p>功能：把多个测序结果的qc结果整合成一个报告。支持fastqc、trimmomatic、bowtie、STAR等多种软件结果的整合。</p>
<h2 id="Installation-安装"><a href="#Installation-安装" class="headerlink" title="Installation 安装"></a>Installation 安装</h2><pre><code>conda install -c bioconda multiqc
</code></pre><h2 id="Run-MultiQC-运行"><a href="#Run-MultiQC-运行" class="headerlink" title="Run MultiQC 运行"></a>Run MultiQC 运行</h2><p>安装好后，进入你要分析的测序文件所在的文件夹，直接输入multiqc加要扫描的目录即可运行，如果要扫描当前文件夹，直接输入”multiqc .”即可</p>
<pre><code>multiqc .
multiqc /data/mydir/
multiqc /data/*fastqc.zip
multiqc /data/sanple_1*
</code></pre><h2 id="相关参数"><a href="#相关参数" class="headerlink" title="相关参数"></a>相关参数</h2><h3 id="使用“–ignore”参数忽略某些文件"><a href="#使用“–ignore”参数忽略某些文件" class="headerlink" title="使用“–ignore”参数忽略某些文件"></a>使用“–ignore”参数忽略某些文件</h3><pre><code>multiqc . --ingore *_R2*
multiqc . --ignore run_two/
multiqc . --ignore */run_three/*/fastqc/*.zip
</code></pre><h3 id="使用文本指定要分析的文件的路径"><a href="#使用文本指定要分析的文件的路径" class="headerlink" title="使用文本指定要分析的文件的路径"></a>使用文本指定要分析的文件的路径</h3><pre><code>multiqc --file-list_my_file_list.txt
</code></pre><h3 id="重命名输出结果"><a href="#重命名输出结果" class="headerlink" title="重命名输出结果"></a>重命名输出结果</h3><p>分析结果默认命名为“multiqc_report.html”，相关的以tab风格的data file保存在“multiqc_data”文件夹下。可以用“-n”参数改变结果文件的名字，用“-o”改变输出文件的位置。</p>
<h3 id="覆盖已存在的结果"><a href="#覆盖已存在的结果" class="headerlink" title="覆盖已存在的结果"></a>覆盖已存在的结果</h3><p>添加参数“-f”，输出结果时会自动覆盖同名文件。</p>
<h3 id="更换报告模板"><a href="#更换报告模板" class="headerlink" title="更换报告模板"></a>更换报告模板</h3><p>添加参数“-t”或者“–template”可以选择不同风格的报告模板，具体内容请查看帮助文档“multiqc –help”。同时，MultiQC也支持自行创作结果文件的模板。</p>
<h3 id="输出图片Exporting-plot"><a href="#输出图片Exporting-plot" class="headerlink" title="输出图片Exporting plot"></a>输出图片Exporting plot</h3><p>除了直接输出html文件外，Multiqc还可以直接保存图片文件。用以下参数进行保存：</p>
<pre><code>multiqc -p/--export
</code></pre><p>默认设置下，图片会保存在“multiqc_plots”文件夹中，以.png/.svg或者pdf格式保存。</p>
<p>同时，也可以直接在html文件中使用“toolbox”中的Export 保存图片。</p>
<h2 id="报告正文"><a href="#报告正文" class="headerlink" title="报告正文"></a>报告正文</h2><p>报告页面分为三部分，左边是导航页面，中间是报告正文，右边是toolbox</p>
<p><img src="http://i.imgur.com/VCs7xMz.png" alt=""></p>
<ol>
<li>General Statistics</li>
</ol>
<p>（Configure Conlumns）可选择需要展示的列名</p>
<p><img src="http://i.imgur.com/r6rkXjl.png" alt=""></p>
<p>点击列名可进行排序</p>
<p><img src="http://i.imgur.com/LPpyikL.png" alt=""></p>
<p>(plot)可选择任意两列进行plot</p>
<p>Toolbox</p>
<p>工具栏主要有Hightlight Samples、Rename Samples、Show/Hide Samples、Export Plots、Saving Setting以及帮助等功能。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://mp.weixin.qq.com/s/tuGWPqCAG4TvIxpGsYWIDA" target="_blank" rel="external">https://mp.weixin.qq.com/s/tuGWPqCAG4TvIxpGsYWIDA</a><br>（2）<a href="http://www.cnblogs.com/leezx/p/7360668.html" target="_blank" rel="external">http://www.cnblogs.com/leezx/p/7360668.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;分别介绍使用循环和MultiQC软件两种方式批量进行fastqc&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>修复Chrome浏览器崩溃</title>
    <link href="https:///AnJingwd.github.io/2017/08/28/%E4%BF%AE%E5%A4%8DChrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B4%A9%E6%BA%83/"/>
    <id>https:///AnJingwd.github.io/2017/08/28/修复Chrome浏览器崩溃/</id>
    <published>2017-08-28T03:18:41.000Z</published>
    <updated>2017-08-28T04:15:04.508Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Chrome浏览器一进入就全面崩溃，包括设置页面！</blockquote>

<a id="more"></a>
<p>解决办法：</p>
<p>原因就是 C:\Windows\System32\drivers\bd0001.sys 这个文件</p>
<ul>
<li>首先可以把这个文件利用360杀毒工具强力删除。</li>
<li>因为书签路径是 C:\Users\Administrator\AppData\Local\Google\Chrome\User Data,所以然后将原Google删除（C:\Program Files (x86)\Google）并不会删除书签。</li>
<li>重新安装Chrome稳定版<a href="https://www.baidu.com/link?url=MkVpzj1gf1_OJ3mxcnzzssfMv7eMA0dXfUgyoqlNDFcZZ1kUW9XJCbRwHqpRSrhcS3HVGx4Wm78JNaYFHj6qaqlM7iSxJyjH_PE7s99egGy&amp;wd=&amp;eqid=a1e33f840000f6e30000000359a38cae" target="_blank" rel="external">ChromeStandalone_60.0.3112.101_Setup.exe</a></li>
<li>重启电脑即可！</li>
</ul>
<p>&emsp;&emsp;win7不能删除文件提示(您需要来自administrators的权限才能对此文件夹进行更改）该如何解决呢？</p>
<p>可以使用360杀毒–功能大全-文件粉碎机</p>
<p><img src="http://i.imgur.com/qfrctqm.png" alt=""></p>
<p><img src="http://i.imgur.com/h6Ub9xV.png" alt=""></p>
<p><img src="http://i.imgur.com/ceKPi1J.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Chrome浏览器一进入就全面崩溃，包括设置页面！&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术" scheme="https:///AnJingwd.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="https:///AnJingwd.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>使用bash脚本下载和处理基因表达数据</title>
    <link href="https:///AnJingwd.github.io/2017/08/25/%E4%BD%BF%E7%94%A8bash%E8%84%9A%E6%9C%AC%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%A4%84%E7%90%86%E5%9F%BA%E5%9B%A0%E8%A1%A8%E8%BE%BE%E6%95%B0%E6%8D%AE/"/>
    <id>https:///AnJingwd.github.io/2017/08/25/使用bash脚本下载和处理基因表达数据/</id>
    <published>2017-08-25T12:21:17.000Z</published>
    <updated>2017-08-25T13:12:28.046Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">使用bash脚本从ArrayExpress下载和处理基因表达数据（去接头和质控），也就是练习写生信分析pipline</blockquote>

<a id="more"></a>
<h1 id="ArrayExpress数据库简介"><a href="#ArrayExpress数据库简介" class="headerlink" title="ArrayExpress数据库简介"></a>ArrayExpress数据库简介</h1><p>&emsp;&emsp;<strong>ArrayExpress是EBI的微阵列实验和基因表达谱的公共数据库</strong>，它是一个一般的基因表达数据库，设计用来保存来自所有微阵列平台的数据。ArrayExpress使用MIAME(Minimum Information About a Microarray Experiment，有关微阵列实验的最小化信息)注释标准及相关的XML数据交换格式MAGE-ML(Microarray Gene Expression Markup Language，微阵列基因表达标记语言)，它被设计成以结构化的方式来存储良好注释的数据。ArrayExpress基础结构由数据库本身，以MAGE-ML格式的数据提交或通过在线的提交工具MIAMExpress，在线数据库查询接口，Expression Profiler在线分析工具组成。<strong>ArrayExpress提供三种类型的提交，阵列，实验和实验方案，它们中的每一个都分配一个登录号。</strong>数据提交和注释的帮助由监管小组提供。<strong>数据库可以用诸如作者，实验室，物种，试验或阵列类型等参数进行查询。</strong> 随着越来越多的(an increasing number of)组织采用MAGE-ML标准，提交到ArrayExpress的量在快速增长着。</p>
<h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><p>1.AEArrayExpress主页搜索E-MTAB-567</p>
<p><a href="https://www.ebi.ac.uk/arrayexpress/" target="_blank" rel="external">https://www.ebi.ac.uk/arrayexpress/</a></p>
<p><img src="http://i.imgur.com/BwlwiUS.png" alt=""></p>
<p>点击Export table in Tab-delimited format，下载E-MTAB-567.sdrf.txt</p>
<p><img src="http://i.imgur.com/RP1Th6u.png" alt=""></p>
<p>2.提取status,ID,link</p>
<pre><code>grep &apos;fastq.gz&apos; E-MTAB-567.sdrf.txt | head -2 | awk &apos;{print $39&quot;,&quot;$21&quot;,&quot;$35}&apos; &gt; status,ID,link.csv
</code></pre><p>输出:<br><img src="http://i.imgur.com/9AkTi6g.png" alt=""></p>
<p>3.mainPipeline.sh</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="built_in">set</span> -u</div><div class="line"><span class="built_in">set</span> -e</div><div class="line"><span class="built_in">set</span> -o pipefail</div><div class="line"></div><div class="line"><span class="comment">################################################################################################################################################</span></div><div class="line"><span class="comment">####################################################################</span></div><div class="line"><span class="comment">#使用bash脚本从ArrayExpress下载和处理基因表达数据（去接头和质控）</span></div><div class="line"><span class="comment">####################################################################</span></div><div class="line"></div><div class="line"><span class="comment">#软件安装</span></div><div class="line"><span class="comment">##安装fastx_toolkit</span></div><div class="line">conda install fastx_toolkit </div><div class="line"></div><div class="line"><span class="comment">##安装FastQ</span></div><div class="line">conda install fastqc</div><div class="line"></div><div class="line"><span class="comment">################################################################################################################################################</span></div><div class="line"></div><div class="line"><span class="comment">#提取相关信息（extract.sh）</span></div><div class="line"><span class="keyword">for</span> LINE <span class="keyword">in</span> $(cat status,ID,link.csv)</div><div class="line"><span class="keyword">do</span></div><div class="line">    <span class="built_in">echo</span> <span class="variable">$LINE</span></div><div class="line">    STATUS=$(<span class="built_in">echo</span> <span class="variable">$LINE</span>|cut -d, -f1)</div><div class="line">    ID=$(<span class="built_in">echo</span> <span class="variable">$LINE</span>|cut -d, -f2)</div><div class="line">    LINK=$(<span class="built_in">echo</span> <span class="variable">$LINE</span>|cut -d, -f3)</div><div class="line"></div><div class="line">    FILE=$(basename <span class="variable">$LINK</span>)</div><div class="line">    STEM=$(basename <span class="variable">$LINK</span> .gz)</div><div class="line"></div><div class="line">    NEWID=<span class="variable">$STATUS</span>.<span class="variable">$ID</span></div><div class="line"></div><div class="line">    <span class="built_in">echo</span> <span class="variable">$STATUS</span>, <span class="variable">$ID</span>, <span class="variable">$LINK</span>, <span class="variable">$STEM</span>, <span class="variable">$FILE</span>, <span class="variable">$NEWID</span></div><div class="line"><span class="comment">#############################################################################################</span></div><div class="line"><span class="comment">#输出：</span></div><div class="line"><span class="comment">#u641750@GenekServer:~$ ./extract.sh </span></div><div class="line"><span class="comment">#Normal,10N_1,ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR031/ERR031017/ERR031017_1.fastq.gz</span></div><div class="line"><span class="comment">#Normal, 10N_1, ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR031/ERR031017/ERR031017_1.fastq.gz, ERR031017_1.fastq, ERR031017_1.fastq.gz, Normal.10N_1</span></div><div class="line"><span class="comment">#Normal,10N_2,ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR031/ERR031017/ERR031017_2.fastq.gz</span></div><div class="line"><span class="comment">#Normal, 10N_2, ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR031/ERR031017/ERR031017_2.fastq.gz, ERR031017_2.fastq, ERR031017_2.fastq.gz, Normal.10N_2</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#例如：$STATUS：Normal, $ID:10N_1, $LINK:ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR031/ERR031017/ERR031017_1.fastq.gz , $STEM:ERR031017_1.fastq, $FILE:ERR031017_1.fastq.gz, $NEWID:Normal.10N_1</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">################################################################################################################################################</span></div><div class="line">[ -d ./fastqFiles ]|| mkdir -p ./fastqFiles</div><div class="line"><span class="comment">#下载数据</span></div><div class="line">    <span class="keyword">if</span> [ ! -f ./fastqFiles/<span class="variable">$NEWID</span>.<span class="variable">$STEM</span> ];<span class="keyword">then</span></div><div class="line">        wget <span class="variable">$LINK</span></div><div class="line">        gunzip <span class="variable">$FILE</span></div><div class="line">        mv <span class="variable">$STEM</span> ./fastqFiles/<span class="variable">$NEWID</span>.<span class="variable">$STEM</span>  <span class="comment">#移动并改名</span></div><div class="line">    <span class="keyword">fi</span></div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line"><span class="comment">#############################################################################################</span></div><div class="line"></div><div class="line"><span class="comment">#输出：</span></div><div class="line"><span class="comment">#u641750@GenekServer:~/fastqFiles$ ls -l</span></div><div class="line"><span class="comment">#total 16341536</span></div><div class="line"><span class="comment">#-rw-r--r-- 1 u641750 GenekVIP 8358690360 Aug 22 21:29 Normal.10N_1.ERR031017_1.fastq</span></div><div class="line"><span class="comment">#-rw-r--r-- 1 u641750 GenekVIP 8358690360 Aug 25 13:20 Normal.10N_2.ERR031017_2.fastq</span></div><div class="line"></div><div class="line"><span class="comment">################################################################################################################################################</span></div><div class="line"></div><div class="line"><span class="comment">#质量控制(修剪)</span></div><div class="line">[ -d ./trimmed/fastQC ]||mkdir -p ./trimmed/fastQC</div><div class="line"></div><div class="line"><span class="keyword">for</span> FILE <span class="keyword">in</span> ./fastqFiles/*.fastq</div><div class="line"><span class="keyword">do</span></div><div class="line">    ls -lh <span class="variable">$FILE</span></div><div class="line">    STEM=$(basename <span class="variable">$FILE</span> .fastq)</div><div class="line">    <span class="keyword">if</span> [ ! -f ./trimmed/<span class="variable">$STEM</span>.trimmed.fastaq ];<span class="keyword">then</span></div><div class="line">        fastq_quality_trimmer -v -t 20 -l 20 -Q 33 -i <span class="variable">$FILE</span> -o ./trimmed/<span class="variable">$STEM</span>.trimmed.fastq</div><div class="line">    <span class="keyword">fi</span></div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line"><span class="comment">#############################################################################################</span></div><div class="line"></div><div class="line"><span class="comment">#结果</span></div><div class="line"><span class="comment">#u641750@GenekServer:~/trimmed$ ls</span></div><div class="line"><span class="comment">#fastQC	Normal.10N_1.ERR031017_1.trimmed.fastq Normal.10N_2.ERR031017_2.trimmed.fastq</span></div><div class="line"></div><div class="line"><span class="comment">#输出：</span></div><div class="line"><span class="comment">#-rw-r--r-- 1 u641750 GenekVIP 7.8G Aug 22 21:29 ./fastqFiles/#Normal.10N_1.ERR031017_1.fastq</span></div><div class="line"><span class="comment">#Minimum Quality Threshold: 20</span></div><div class="line"><span class="comment">#Minimum Length: 20</span></div><div class="line"><span class="comment">#Input: 34536162 reads.</span></div><div class="line"><span class="comment">#Output: 34458851 reads.</span></div><div class="line"><span class="comment">#discarded 77311 (0%) too-short reads.</span></div><div class="line"><span class="comment">#-rw-r--r-- 1 u641750 GenekVIP 7.8G Aug 25 13:20 ./fastqFiles/#Normal.10N_2.ERR031017_2.fastq</span></div><div class="line"><span class="comment">#Minimum Quality Threshold: 20</span></div><div class="line"><span class="comment">#Minimum Length: 20</span></div><div class="line"><span class="comment">#Input: 34536162 reads.</span></div><div class="line"><span class="comment">#Output: 33968272 reads.</span></div><div class="line"><span class="comment">#discarded 567890 (1%) too-short reads.</span></div><div class="line"></div><div class="line"><span class="comment">################################################################################################################################################</span></div><div class="line"></div><div class="line"><span class="comment">#质量控制（评估）</span></div><div class="line"></div><div class="line">[ -d ./trimmed/fastQC ]||mkdir -p ./trimmed/fastQC</div><div class="line"></div><div class="line">FASTQC=/home/u641750/miniconda3/bin/fastqc</div><div class="line"></div><div class="line"><span class="keyword">for</span> FILE <span class="keyword">in</span> ./trimmed/*.trimmed.fastq</div><div class="line"><span class="keyword">do</span></div><div class="line"></div><div class="line">    ls -lh <span class="variable">$FILE</span></div><div class="line">    STEM=$(basename <span class="variable">$FILE</span> .fastq)</div><div class="line">    <span class="keyword">if</span> [ ! -d ./trimmed/fastQC/<span class="variable">$STEM_fastqc</span> ]; <span class="keyword">then</span></div><div class="line">        <span class="variable">$FASTQC</span> -o ./trimmed/fastQC <span class="variable">$FILE</span></div><div class="line">    <span class="keyword">fi</span></div><div class="line"><span class="keyword">done</span></div><div class="line"><span class="comment">#############################################################################################</span></div><div class="line"><span class="comment">#结果：</span></div><div class="line"><span class="comment">#u641750@GenekServer:~/trimmed/fastQC$ ls</span></div><div class="line"><span class="comment">#Normal.10N_1.ERR031017_1.trimmed_fastqc.html</span></div><div class="line"><span class="comment">#Normal.10N_1.ERR031017_1.trimmed_fastqc.zip</span></div><div class="line"><span class="comment">#Normal.10N_2.ERR031017_2.trimmed_fastqc.html</span></div><div class="line"><span class="comment">#Normal.10N_2.ERR031017_2.trimmed_fastqc.zip</span></div><div class="line"></div><div class="line"><span class="comment">################################################################################################################################################</span></div><div class="line"></div><div class="line"><span class="comment">#改名</span></div><div class="line"><span class="keyword">for</span> FILEONE <span class="keyword">in</span> ./trimmed/*_1.trimmed.fastq</div><div class="line"><span class="keyword">do</span></div><div class="line">    STEM=$(basename <span class="variable">$FILEONE</span> _1.trimmed.fastq | sed <span class="string">''</span> s/_1//g<span class="string">')</span></div><div class="line"><span class="string">    FILETWO=$(echo $FILEONE | sed '</span>s/_1./_2./g<span class="string">')</span></div><div class="line"><span class="string">    ls -lh $FILEONE</span></div><div class="line"><span class="string">    ls -lh $FILETWO</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    echo stem $STEM</span></div><div class="line"><span class="string">exit </span></div><div class="line"><span class="string">done</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">#############################################################################################</span></div><div class="line"><span class="string">#输出</span></div><div class="line"><span class="string">#-rw-r--r-- 1 u641750 GenekVIP 7.5G Aug 25 15:29 ./trimmed/Normal.10N_1.ERR031017_1.trimmed.fastq</span></div><div class="line"><span class="string">#-rw-r--r-- 1 u641750 GenekVIP 7.5G Aug 25 15:44 ./trimmed/Normal.10N_2.ERR031017_2.trimmed.fastq</span></div><div class="line"><span class="string">#stem Normal.10N.ERR031017</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">################################################################################################################################################</span></div></pre></td></tr></table></figure>
<p>在后台运行脚本nohup ./mainPipeline.sh &gt; outMainPipeline.log &amp;</p>
<h1 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h1><p>1.基本命令：basename </p>
<p>用途:返回一个字符串参数的基本文件名称</p>
<p>语法:basename String [ Suffix ]</p>
<p>描述:basename 命令读取 String 参数，删除以 /(斜杠) 结尾的前缀以及任何指定的 Suffix 参数，并将剩余的基本文件名称写至标准输出。</p>
<ul>
<li><p>（截取文件名）例如，输入：</p>
<p>  basename Normal.10N_1.ERR031017_1.trimmed.fastq _1.trimmed.fastq</p>
</li>
</ul>
<p>结果是：Normal.10N_1.ERR031017</p>
<ul>
<li><p>例如，输入：</p>
<p>  basename /u/dee/desktop/cns.boo cns.boo</p>
</li>
</ul>
<p>结果是：cns.boo</p>
<ul>
<li><p>如果指定 Suffix（后缀名）参数，且它和字符串中所有字符都不相同，但和字符串的后缀相同，则除去指定后缀。例如，输入：</p>
<p>   basename /u/dee/desktop/cns.boo .boo</p>
</li>
</ul>
<p>结果是：cns</p>
<p>2.fastq_quality_trimmer</p>
<ul>
<li>fastq_quality_trimmer [-h] [-v] [-t N] [-l N] [-z] [-i INFILE] [-o OUTFILE] 修剪reads的末端</li>
<li>[-t N] = 从5’端开始，低与N的质量的碱基将被修剪掉</li>
<li>[-l N] = 修建之后的reads的长度允许的最短值</li>
<li>[-z]   = 压缩输出</li>
<li>[-v]   =详细-报告序列编号，如果使用了-o则报告会直接在STDOUT，如果没有则输入到STDERR</li>
</ul>
<p>3.以下代码段用于脚本的分步测试</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#########################################################</span></div><div class="line"><span class="comment">#用于测试</span></div><div class="line">STATUS=<span class="string">"do"</span></div><div class="line"><span class="comment">#STATUS="done"</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="variable">$STATUS</span> !=<span class="string">"done"</span> ];<span class="keyword">then</span></div><div class="line"> </div><div class="line"> <span class="keyword">do</span> something</div><div class="line"></div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment">#########################################################</span></div></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h1><p>（1）Bash scripting for Bioinformatics</p>
<p><a href="https://www.youtube.com/watch?v=3ME7gayYeUQ" target="_blank" rel="external">https://www.youtube.com/watch?v=3ME7gayYeUQ</a></p>
<p>（2）Linux命令之basename 命令 </p>
<p><a href="http://blog.sina.com.cn/s/blog_5f70c7060100ukyh.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_5f70c7060100ukyh.html</a></p>
<p>（3）高通量测序数据的质控工具—fastx_toolkit软件使用说明</p>
<p><a href="http://blog.sciencenet.cn/blog-1509670-848270.html" target="_blank" rel="external">http://blog.sciencenet.cn/blog-1509670-848270.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;使用bash脚本从ArrayExpress下载和处理基因表达数据（去接头和质控），也就是练习写生信分析pipline&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>linux命令之nohup</title>
    <link href="https:///AnJingwd.github.io/2017/08/25/linux%E5%91%BD%E4%BB%A4%E4%B9%8Bnohup/"/>
    <id>https:///AnJingwd.github.io/2017/08/25/linux命令之nohup/</id>
    <published>2017-08-25T08:49:13.000Z</published>
    <updated>2017-09-01T03:17:00.417Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">命令后台运行及相关操作</blockquote>

<a id="more"></a>
<h1 id="nohup命令参考"><a href="#nohup命令参考" class="headerlink" title="nohup命令参考"></a>nohup命令参考</h1><p>用途：该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( no hang up)</p>
<ul>
<li>语法：nohup Command [ Arg … ] [　&amp; ]</li>
<li>描述：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，<strong>添加 &amp; （ 表示”and”的符号）到命令的尾部</strong></li>
</ul>
<h1 id="将任务移至后台"><a href="#将任务移至后台" class="headerlink" title="将任务移至后台"></a>将任务移至后台</h1><p>在应用Unix/Linux时，我们一般想让某个程序在后台运行，于是我们将常会用 &amp; 在程序结尾来让程序自动运行。比如我们要在后台运行一个aaa.sh的脚本：</p>
<pre><code>./test2.sh &amp;                                                             
</code></pre><p><strong>可是当我们注销或者屏保后，这个脚本就会自动停止，这时我们就需要nohup命令，</strong> 怎样使用nohup命令呢？请看:</p>
<pre><code>[wangdong@frontend ~]$ nohup ./test2.sh &amp;
[1] 18569    
[wangdong@frontend ~]$ nohup: ignoring input and appending output to `nohup.out&apos;
</code></pre><h1 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h1><ul>
<li><strong>只有当虚拟终端是 $ 或者 # 时候（如下图所示），才可关闭此终端，否则可能导致已经启动的进程被关闭</strong>（如果程序持续输出信息而没有出现 $ 或 #，按一下enter即可）</li>
</ul>
<p><img src="http://i.imgur.com/Rw7hIG7.png" alt=""></p>
<ul>
<li><p>后台执行脚本（<strong>有多个脚本，每个窗口最好只执行一个</strong>），如果在同一个窗口执行，下个执行命令需要等待前面一个执行完成才能执行，这种效率不是我们要的。</p>
</li>
<li><p>无论是否将 nohup 命令的输出重定向到终端，输出都将附加到当前目录的 nohup.out 文件中，起到了log的作用。</p>
</li>
<li><strong>如果当前目录的 nohup.out 文件不可写，输出重定向到 $HOME/nohup.out 文件中。除非另外指定了输出文件：nohup command &gt; myout.file 2&gt;&amp;1 &amp;</strong> </li>
<li>/dev/null 是黑洞路径， 可用于用于丢弃输出，例如nohup COMMAND &gt; /dev/null &amp;</li>
</ul>
<h1 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h1><h2 id="用-jobs-命令可以查看当前Screen中的后台任务。"><a href="#用-jobs-命令可以查看当前Screen中的后台任务。" class="headerlink" title="用 jobs 命令可以查看当前Screen中的后台任务。"></a>用 jobs 命令可以查看当前Screen中的后台任务。</h2><pre><code>jobs
[1]+  Done                    nohup ./test2.sh
</code></pre><p>（1）jobs命令执行的结果，＋表示是一个当前的作业，减号表是是一个当前作业之后的一个作业。</p>
<p>（2）jobs -l 选项可显示所有任务的PID,</p>
<p>（3）jobs的状态可以是running, stopped, Terminated</p>
<p><strong>但当关闭该窗口在打开查看，这时候jobs已经不能使用，只能通过以下方式查看后台执行的脚本是否正在执行</strong></p>
<pre><code>ps -ef | grep conda 
</code></pre><p>#grep conda用于过滤命令</p>
<p><img src="http://i.imgur.com/P1zghVP.png" alt=""></p>
<h2 id="用-fg-JOBID-命令可以将后台的任务调入前台继续运行（Foreground）。"><a href="#用-fg-JOBID-命令可以将后台的任务调入前台继续运行（Foreground）。" class="headerlink" title="用 fg JOBID 命令可以将后台的任务调入前台继续运行（Foreground）。"></a>用 fg JOBID 命令可以将后台的任务调入前台继续运行（Foreground）。</h2><p>&emsp;&emsp;如果执行完后台脚本命令，当前窗口没有关闭，可以执行jobs查看当前窗口运行的后台进程的进程号，再通过fg n，将此后台进程调到前台执行。</p>
<p><img src="http://i.imgur.com/n78JTfz.png" alt=""></p>
<h2 id="命令在前台执行一半了，想转入后台执行"><a href="#命令在前台执行一半了，想转入后台执行" class="headerlink" title="命令在前台执行一半了，想转入后台执行"></a>命令在前台执行一半了，想转入后台执行</h2><ul>
<li>首先用 ctrl + z 快捷键可以将一个正在前台执行的命令放到后台，并且暂停  </li>
<li>接着用 bg JOBID 命令可以将一个在后台暂停的命令，变成继续执行（Background）。 </li>
</ul>
<h2 id="进程的终止"><a href="#进程的终止" class="headerlink" title="进程的终止"></a>进程的终止</h2><p>前台进程的终止：ctrl+c</p>
<p>后台进程的终止：</p>
<p>方法一：通过jobs命令查看job号（假设为num），然后执行kill num</p>
<p>方法二：通过ps命令查看job的进程号（PID，假设为pid），然后执行kill pid
　　</p>
<h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><h2 id="概念：当前任务"><a href="#概念：当前任务" class="headerlink" title="概念：当前任务"></a>概念：当前任务</h2><p>&emsp;&emsp;如果后台的任务号有2个，[1],[2]；如果当第一个后台任务顺利执行完毕，第二个后台任务还在执行中时，当前任务便会自动变成后台任务号码“[2]”的后台任务。所以可以得出一点，<strong>即当前任务是会变动的。当用户输入“fg”、“bg”和“stop”等命令时，如果未指定jobsid，则所变动的均是当前任务。</strong></p>
<h2 id="ps-ef-是用标准的格式显示进程的"><a href="#ps-ef-是用标准的格式显示进程的" class="headerlink" title="ps -ef 是用标准的格式显示进程的"></a>ps -ef 是用标准的格式显示进程的</h2><p><img src="http://i.imgur.com/QfGAegr.png" alt=""></p>
<p>其中各列的内容意思如下</p>
<pre><code>UID    //用户ID、但输出的是用户名 
PID    //进程的ID 
PPID    //父进程ID 
C      //进程占用CPU的百分比 
STIME  //进程启动到现在的时间 
TTY    //该进程在那个终端上运行，若与终端无关，则显示? 若为pts/0等，则表示由网络连接主机进程。 
CMD    //命令的名称和参数
</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="http://rajaruan.blog.51cto.com/2771737/822199" target="_blank" rel="external">http://rajaruan.blog.51cto.com/2771737/822199</a></p>
<p>（2）<a href="https://wenku.baidu.com/view/28863c79581b6bd97f19ead8.html" target="_blank" rel="external">https://wenku.baidu.com/view/28863c79581b6bd97f19ead8.html</a></p>
<p>（3）<a href="http://blog.sina.com.cn/s/blog_673ee2b50100iywr.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_673ee2b50100iywr.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;命令后台运行及相关操作&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https:///AnJingwd.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https:///AnJingwd.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>创建生信分析pipline（dna-seq/rna-seq）-基础版</title>
    <link href="https:///AnJingwd.github.io/2017/08/22/%E5%88%9B%E5%BB%BA%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90pipline(DNA-seq,RNA-seq)-%E5%9F%BA%E7%A1%80%E7%89%88/"/>
    <id>https:///AnJingwd.github.io/2017/08/22/创建生信分析pipline(DNA-seq,RNA-seq)-基础版/</id>
    <published>2017-08-22T02:04:43.000Z</published>
    <updated>2017-08-25T13:40:40.419Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">创建生信分析pipline（dna-seq/rna-seq）-基础版</blockquote>

<a id="more"></a>
<h1 id="dna-seq"><a href="#dna-seq" class="headerlink" title="dna-seq"></a>dna-seq</h1><h2 id="建立项目文件系统-step1-prep-mkdir-cp-sh"><a href="#建立项目文件系统-step1-prep-mkdir-cp-sh" class="headerlink" title="建立项目文件系统(step1-prep_mkdir_cp.sh)"></a>建立项目文件系统(step1-prep_mkdir_cp.sh)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">#建立合理的文件结构</span></div><div class="line"><span class="built_in">cd</span></div><div class="line">mkdir bin proj1 tools</div><div class="line"><span class="built_in">cd</span> proj1</div><div class="line">mkdir reads fastqc ref snp-calling</div><div class="line"></div><div class="line"><span class="comment">#拷贝相关的分析工具</span></div><div class="line">cp -r /home/training/tools/bwa ./tools/</div><div class="line">cp -r /home/training/tools/fastqc ./tools/</div><div class="line">cp -r /home/training/tools/samtools ./tools/</div><div class="line"></div><div class="line"><span class="comment">#执行程序路径</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:~/bin/</div></pre></td></tr></table></figure>
<hr>
<h2 id="安装软件（step2-install-software-sh）"><a href="#安装软件（step2-install-software-sh）" class="headerlink" title="安装软件（step2-install_software.sh）"></a>安装软件（step2-install_software.sh）</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">#安装FastQC</span></div><div class="line"><span class="built_in">cd</span> ~/tools/fastqc/</div><div class="line">unzip fastqc_v0.10.1.zip</div><div class="line"><span class="built_in">cd</span> FastQC</div><div class="line">chmod +x fastqc</div><div class="line"><span class="built_in">cd</span> ~/bin/</div><div class="line">ln -s ~/tools/fastqc/FastQC/fastqc ./</div><div class="line"><span class="built_in">cd</span></div><div class="line">fastqc -h</div><div class="line"></div><div class="line"><span class="comment">#安装BWA</span></div><div class="line"><span class="built_in">cd</span> ~/tools/bwa/</div><div class="line">tar -jxvf bwa-0.7.3a.tar.bz2</div><div class="line"><span class="built_in">cd</span> bwa-0.7.3a/</div><div class="line">make</div><div class="line">cp bwa ~/bin/</div><div class="line"><span class="built_in">cd</span></div><div class="line">bwa</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#安装samtools</span></div><div class="line"><span class="built_in">cd</span> ~/tools/samtools/</div><div class="line">tar -jxvf samtools-0.1.19.tar.bz2</div><div class="line"><span class="built_in">cd</span> samtools-0.1.19/</div><div class="line">make</div><div class="line">cp samtools ~/bin/</div><div class="line">cp bcftools/vcfutils.pl ~/bin/</div><div class="line">cp bcftools/bcftools ~/bin/</div><div class="line"><span class="built_in">cd</span></div><div class="line">samtools</div><div class="line">vcfutils.pl</div></pre></td></tr></table></figure>
<hr>
<h2 id="step3-snp-calling-sh"><a href="#step3-snp-calling-sh" class="headerlink" title="step3-snp_calling.sh"></a>step3-snp_calling.sh</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">#测序数据质量控制</span></div><div class="line">cp /home/training/data/DNA-Seq/example1.* ~/proj1/reads/</div><div class="line"><span class="built_in">cd</span> ~/proj1/fastqc/</div><div class="line">fastqc -f fastq -o ./ ../reads/example1.*</div><div class="line"></div><div class="line"><span class="comment">#建立参考基因组索引</span></div><div class="line"></div><div class="line">cp /home/training/data/DNA-Seq/ref1.fa ~/proj1/ref/</div><div class="line"><span class="built_in">cd</span> ~/proj1/ref/</div><div class="line">bwa index -a is ref1.fa</div><div class="line"></div><div class="line"><span class="comment">#拼接组装</span></div><div class="line"><span class="comment">##生成sai文件</span></div><div class="line"><span class="built_in">cd</span> ~/proj1/</div><div class="line">bwa aln ref/ref1.fa reads/example1.L.fq &gt; aln_example1.L.sai</div><div class="line">bwa aln ref/ref1.fa reads/example1.R.fq &gt; aln_example1.R.sai</div><div class="line"></div><div class="line"><span class="comment">##生成sam文件</span></div><div class="line">bwa sampe ref/ref1.fa aln_example1.L.sai aln_example1.R.sai reads/example1.L.fq reads/example1.R.fq &gt; aln_example1.sam</div><div class="line"></div><div class="line">生成bam文件</div><div class="line">samtools view -bS aln_example1.sam | samtools sort - aln_example1_sorted</div><div class="line"></div><div class="line"><span class="comment">#生成bcf文件</span></div><div class="line"><span class="built_in">cd</span> ~/proj1/</div><div class="line">samtools mpileup -ugf ref/ref1.fa aln_example1_sorted.bam | bcftools view -bvcg - &gt; snp-calling/var_example1_sorted.raw.bcf</div><div class="line"></div><div class="line"><span class="comment">#生成vcf文件</span></div><div class="line">bcftools view snp-calling/var_example1_sorted.raw.bcf | vcfutils.pl varFilter -D100 &gt; snp-calling/var_example1_sorted.flt.vcf</div></pre></td></tr></table></figure>
<hr>
<h1 id="rna-seq"><a href="#rna-seq" class="headerlink" title="rna-seq"></a>rna-seq</h1><h2 id="建立项目文件系统及软件安装（step1-prep-install-sh）"><a href="#建立项目文件系统及软件安装（step1-prep-install-sh）" class="headerlink" title="建立项目文件系统及软件安装（step1-prep_install.sh）"></a>建立项目文件系统及软件安装（step1-prep_install.sh）</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># generate folder</span></div><div class="line"><span class="built_in">cd</span> ~/</div><div class="line">mkdir proj2</div><div class="line"><span class="built_in">cd</span> proj2</div><div class="line">mkdir reads fastqc ref tophat</div><div class="line"></div><div class="line"><span class="comment"># copy tools</span></div><div class="line"><span class="built_in">cd</span> ~/</div><div class="line">cp -fr /home/training/tools/bowtie ./tools/</div><div class="line">cp -fr /home/training/tools/tophat ./tools/</div><div class="line">cp -fr /home/training/tools/cufflinks ./tools/</div><div class="line"></div><div class="line"><span class="comment"># change path</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:~/bin/</div><div class="line"></div><div class="line"><span class="comment"># install bowtie</span></div><div class="line"><span class="built_in">cd</span> ~/tools/bowtie/</div><div class="line">unzip bowtie2-2.0.5-linux-x86_64.zip</div><div class="line"><span class="built_in">cd</span> bowtie2-2.0.5/</div><div class="line">cp bowtie2* ~/bin/</div><div class="line"></div><div class="line"><span class="comment"># install tophat</span></div><div class="line"><span class="built_in">cd</span> ~/tools/tophat/</div><div class="line">tar -zxvf tophat-2.0.8.Linux_x86_64.tar.gz</div><div class="line"><span class="built_in">cd</span> tophat-2.0.8.Linux_x86_64/</div><div class="line">cp * ~/bin/</div><div class="line"></div><div class="line"><span class="comment"># install cufflinks</span></div><div class="line"><span class="built_in">cd</span> ~/tools/cufflinks/</div><div class="line">tar -zxvf cufflinks-2.0.2.Linux_x86_64.tar.gz</div><div class="line"><span class="built_in">cd</span> cufflinks-2.0.2.Linux_x86_64/</div><div class="line">cp * ~/bin/</div><div class="line"></div><div class="line"><span class="comment"># back to workpath</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"preparation and install complete..."</span></div><div class="line"><span class="built_in">cd</span> ~/</div></pre></td></tr></table></figure>
<h2 id="测序数据质量评估-step2-quality-control-sh"><a href="#测序数据质量评估-step2-quality-control-sh" class="headerlink" title="测序数据质量评估(step2-quality_control.sh)"></a>测序数据质量评估(step2-quality_control.sh)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># quality control</span></div><div class="line">cp /home/training/data/RNA-Seq/example2-* ~/proj2/reads/</div><div class="line"><span class="built_in">cd</span> ~/proj2/fastqc/</div><div class="line">fastqc -f fastq -o ./ ../reads/example2-*</div><div class="line"></div><div class="line"><span class="comment"># back to workpath</span></div><div class="line"><span class="built_in">cd</span> ~/</div></pre></td></tr></table></figure>
<h2 id="step3-tophat-cuffdiff-sh"><a href="#step3-tophat-cuffdiff-sh" class="headerlink" title="(step3-tophat_cuffdiff.sh)"></a>(step3-tophat_cuffdiff.sh)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">#拷贝参考基因组数据</span></div><div class="line">cp /home/training/data/RNA-Seq/ref2.fa ~/proj2/ref/</div><div class="line">cp /home/training/data/RNA-Seq/ann2.gtf ~/proj2/ref/</div><div class="line"></div><div class="line"><span class="comment">#建立基因组索引</span></div><div class="line"><span class="built_in">cd</span> ~/proj2/ref/</div><div class="line">bowtie2-build ref2.fa ref2</div><div class="line"></div><div class="line"><span class="comment">#生成bam文件</span></div><div class="line"><span class="built_in">cd</span> ~/proj2/tophat/</div><div class="line">tophat2 -o E2-1-thout ../ref/ref2 ../reads/example2-1.L.fq ../reads/example2-1.R.fq</div><div class="line">tophat2 -o E2-2-thout ../ref/ref2 ../reads/example2-2.L.fq ../reads/example2-2.R.fq</div><div class="line"></div><div class="line"><span class="comment"># 生成gtf文件</span></div><div class="line"><span class="built_in">cd</span> ~/proj2/tophat/</div><div class="line">cufflinks -o E2-1-clout E2-1-thout/accepted_hits.bam</div><div class="line">cufflinks -o E2-2-clout E2-2-thout/accepted_hits.bam</div><div class="line"></div><div class="line"><span class="comment"># 生成assemblies.txt文件</span></div><div class="line">touch assemblies.txt</div><div class="line"><span class="built_in">echo</span> <span class="string">"./E2-1-clout/transcripts.gtf"</span> &gt;&gt; assemblies.txt</div><div class="line"><span class="built_in">echo</span> <span class="string">"./E2-2-clout/transcripts.gtf"</span> &gt;&gt; assemblies.txt</div><div class="line"></div><div class="line"><span class="comment">#生成注释文件</span></div><div class="line"><span class="built_in">cd</span> ~/proj2/tophat/</div><div class="line">cuffmerge -s ../ref/ref2.fa assemblies.txt</div><div class="line"></div><div class="line"><span class="comment"># 基于注释文件比较E2-1和E2-2表达差异</span></div><div class="line">cuffdiff -o diff_out1 -b ../ref/ref2.fa -L E2-1,E2-2 -u merged_asm/merged.gtf ./E2-1-thout/accepted_hits.bam ./E2-2-thout/accepted_hits.bam</div><div class="line"></div><div class="line"><span class="comment"># 基于参考注释比较E2-1和E2-2表达差异</span></div><div class="line">cuffdiff -o diff_out2 -b ../ref/ref2.fa -L E2-1,E2-2 -u ../ref/ann2.gtf ./E2-1-thout/accepted_hits.bam ./E2-2-thout/accepted_hits.bam</div></pre></td></tr></table></figure>
<p>注意：</p>
<ol>
<li>建立合理的文件结构</li>
</ol>
<ul>
<li>bin目录的创建利于管理不同项目，使用不同软件版本</li>
<li><p>使用sh脚本</p>
<p>  source step1-prep_mkdir_cp.sh</p>
</li>
</ul>
<p><strong>（用source而不用sh是因为step1-prep_mkdir_cp.sh有添加环境变量的步骤，sh 对添加环境变量没用）</strong></p>
<ol>
<li>安装相关的分析工具</li>
</ol>
<ul>
<li><p>使用sh脚本安装软件</p>
<p>  sh step2-install_software.sh</p>
</li>
<li><p>验证是否安装成功</p>
<p>  ls bin</p>
</li>
<li><p>基因组比对用BWA,转录组比对用tophat</p>
</li>
</ul>
<ol>
<li>数据分析</li>
</ol>
<ul>
<li>上述命令是软件最初版本用法，软件版本更新用法会变化</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;创建生信分析pipline（dna-seq/rna-seq）-基础版&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/categories/NGS/"/>
    
    
      <category term="NGS" scheme="https:///AnJingwd.github.io/tags/NGS/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅的生成及遍历python嵌套字典</title>
    <link href="https:///AnJingwd.github.io/2017/08/19/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%94%9F%E6%88%90python%E5%B5%8C%E5%A5%97%E5%AD%97%E5%85%B8/"/>
    <id>https:///AnJingwd.github.io/2017/08/19/如何优雅的生成python嵌套字典/</id>
    <published>2017-08-19T07:41:32.000Z</published>
    <updated>2017-08-19T10:56:56.020Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">如何优雅的生成及遍历python嵌套字典</blockquote>

<a id="more"></a>
<h1 id="嵌套字典生成"><a href="#嵌套字典生成" class="headerlink" title="嵌套字典生成"></a>嵌套字典生成</h1><h2 id="方法一-定义类"><a href="#方法一-定义类" class="headerlink" title="方法一:定义类"></a>方法一:定义类</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vividict</span><span class="params">(dict)</span>:</span></div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">__missing__</span><span class="params">(self, key)</span>:</span></div><div class="line">		value = self[key] = type(self)()</div><div class="line">		<span class="keyword">return</span> value</div></pre></td></tr></table></figure>
<p>解释：</p>
<ul>
<li>第一行：class后面紧接着是类名，即Vividict，类名通常是大写开头的单词，紧接着是(dict)，表示该类是dict类继承下来的。</li>
</ul>
<p>我们可以使用dir(dict）查看dict的方法<br><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">In[<span class="number">22</span>]: print(dir(dict))</div><div class="line">[<span class="string">'__class__'</span>, <span class="string">'__contains__'</span>, <span class="string">'__delattr__'</span>, <span class="string">'__delitem__'</span>, <span class="string">'__dir__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__eq__'</span>, <span class="string">'__format__'</span>, <span class="string">'__ge__'</span>, <span class="string">'__getattribute__'</span>, <span class="string">'__getitem__'</span>, <span class="string">'__gt__'</span>, <span class="string">'__hash__'</span>, <span class="string">'__init__'</span>, <span class="string">'__iter__'</span>, <span class="string">'__le__'</span>, <span class="string">'__len__'</span>, <span class="string">'__lt__'</span>, <span class="string">'__ne__'</span>, <span class="string">'__new__'</span>, <span class="string">'__reduce__'</span>, <span class="string">'__reduce_ex__'</span>, <span class="string">'__repr__'</span>, <span class="string">'__setattr__'</span>, <span class="string">'__setitem__'</span>, <span class="string">'__sizeof__'</span>, <span class="string">'__str__'</span>, <span class="string">'__subclasshook__'</span>, <span class="string">'clear'</span>, <span class="string">'copy'</span>, <span class="string">'fromkeys'</span>, <span class="string">'get'</span>, <span class="string">'items'</span>, <span class="string">'keys'</span>, <span class="string">'pop'</span>, <span class="string">'popitem'</span>, <span class="string">'setdefault'</span>, <span class="string">'update'</span>, <span class="string">'values'</span>]</div></pre></td></tr></table></figure></p>
<p>同理，可以查看Vividict的方法<br><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">In[<span class="number">23</span>]: print(dir(Vividict))</div><div class="line">[<span class="string">'__class__'</span>, <span class="string">'__contains__'</span>, <span class="string">'__delattr__'</span>, <span class="string">'__delitem__'</span>, <span class="string">'__dict__'</span>, <span class="string">'__dir__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__eq__'</span>, <span class="string">'__format__'</span>, <span class="string">'__ge__'</span>, <span class="string">'__getattribute__'</span>, <span class="string">'__getitem__'</span>, <span class="string">'__gt__'</span>, <span class="string">'__hash__'</span>, <span class="string">'__init__'</span>, <span class="string">'__iter__'</span>, <span class="string">'__le__'</span>, <span class="string">'__len__'</span>, <span class="string">'__lt__'</span>, <span class="string">'__missing__'</span>, <span class="string">'__module__'</span>, <span class="string">'__ne__'</span>, <span class="string">'__new__'</span>, <span class="string">'__reduce__'</span>, <span class="string">'__reduce_ex__'</span>, <span class="string">'__repr__'</span>, <span class="string">'__setattr__'</span>, <span class="string">'__setitem__'</span>, <span class="string">'__sizeof__'</span>, <span class="string">'__str__'</span>, <span class="string">'__subclasshook__'</span>, <span class="string">'__weakref__'</span>, <span class="string">'clear'</span>, <span class="string">'copy'</span>, <span class="string">'fromkeys'</span>, <span class="string">'get'</span>, <span class="string">'items'</span>, <span class="string">'keys'</span>, <span class="string">'pop'</span>, <span class="string">'popitem'</span>, <span class="string">'setdefault'</span>, <span class="string">'update'</span>, <span class="string">'values'</span>]</div></pre></td></tr></table></figure></p>
<p>比较两者可以发现，Vividict的方法比dict的方法多了一个<strong>missing</strong>方法，也就是我们添加的方法。所以这就是继承，继承最大的好处是子类获得了父类的全部功能，而不必重新造轮子。</p>
<ul>
<li><p>第二行：python魔法方法中的自定义序列，类似于定义一个函数。<strong>missing</strong> 在字典的子类中使用，它定义了当试图访问一个字典中不存在的键时的行为（目前为止是指字典的实例，例如我有一个字典 d ， “george” 不是字典中的一个键，当试图访问 d[‘george’] 时就会调用 d.<strong>missing</strong>(“george”)，结果为{} ）。</p>
</li>
<li><p>第三行，第四行：访问字典中不存在的键(key)时，返回空字典作为其返回值（value）</p>
</li>
</ul>
<p>例如：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">In[<span class="number">17</span>]: a = dict()</div><div class="line">In[<span class="number">18</span>]: type(a)()</div><div class="line">Out[<span class="number">18</span>]: </div><div class="line">&#123;&#125;</div></pre></td></tr></table></figure></p>
<p>注意：</p>
<ul>
<li>特殊方法“missing”前后有两个下划线！！！</li>
<li>和普通的函数相比，在类中定义的函数只有一点不同，就是第一个参数永远是实例变量self，并且，调用时，不用传递该参数。除此之外，类的方法和普通函数没有什么区别，所以，你仍然可以用默认参数、可变参数、关键字参数和命名关键字参数。</li>
</ul>
<p>使用：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># coding=utf-8</span></div><div class="line"></div><div class="line"><span class="comment">#导入模块</span></div><div class="line"><span class="keyword">import</span> os, openpyxl</div><div class="line"><span class="keyword">import</span> pprint</div><div class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> DataFrame</div><div class="line"></div><div class="line"><span class="comment">#pprint模块可以输出漂亮的字典结构，但是不利于后期利用R作图</span></div><div class="line"><span class="comment">#DataFrame可以将字典结构转为数据框输出，方便后期利用R作图</span></div><div class="line"></div><div class="line"><span class="comment">#切换工作路径</span></div><div class="line">os.chdir(<span class="string">r'F:\pycharm_project\mutation_count'</span>)</div><div class="line"></div><div class="line"><span class="comment">#读取excel表格</span></div><div class="line">wb = openpyxl.load_workbook(<span class="string">'东方肝胆数据综合.xlsx'</span>)</div><div class="line">sheet = wb.active</div><div class="line"></div><div class="line"><span class="comment">#定义类</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vividict</span><span class="params">(dict)</span>:</span></div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">__missing__</span><span class="params">(self, key)</span>:</span></div><div class="line">		value = self[key] = type(self)()</div><div class="line">		<span class="keyword">return</span> value</div><div class="line"></div><div class="line"><span class="comment">#实例化</span></div><div class="line">d = Vividict()</div><div class="line"></div><div class="line"><span class="comment">#字典初始化，赋初值0</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,sheet.max_row+<span class="number">1</span>):</div><div class="line">	d[sheet.cell(row=i, column=<span class="number">1</span>).value][sheet.cell(row=i, column=<span class="number">15</span>).value] = <span class="number">0</span></div><div class="line"></div><div class="line"><span class="comment">#累加统计各个样本各种突变类型的数目</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,sheet.max_row+<span class="number">1</span>):</div><div class="line">	d[sheet.cell(row=i, column=<span class="number">1</span>).value][sheet.cell(row=i, column=<span class="number">15</span>).value] +=<span class="number">1</span></div><div class="line"></div><div class="line">pprint.pprint(d)</div><div class="line"></div><div class="line"><span class="comment">#输出字典结构</span></div><div class="line"></div><div class="line">pprint.pprint(d)</div><div class="line"></div><div class="line">&#123;<span class="string">'PDC1279A_vs_PDC1279'</span>: &#123;<span class="string">'UTR3'</span>: <span class="number">9</span>,</div><div class="line">                         <span class="string">'UTR5'</span>: <span class="number">4</span>,</div><div class="line">                         <span class="string">'downstream'</span>: <span class="number">5</span>,</div><div class="line">                         <span class="string">'exonic'</span>: <span class="number">149</span>,</div><div class="line">                         <span class="string">'intergenic'</span>: <span class="number">170</span>,</div><div class="line">                         <span class="string">'intronic'</span>: <span class="number">163</span>,</div><div class="line">                         <span class="string">'ncRNA_exonic'</span>: <span class="number">17</span>,</div><div class="line">                         <span class="string">'ncRNA_intronic'</span>: <span class="number">23</span>,</div><div class="line">                         <span class="string">'splicing'</span>: <span class="number">2</span>,</div><div class="line">                         <span class="string">'upstream;downstream'</span>: <span class="number">2</span>&#125;,</div><div class="line"> <span class="string">'PDC1279C_vs_PDC1279'</span>: &#123;<span class="string">'UTR3'</span>: <span class="number">11</span>,</div><div class="line">                         <span class="string">'UTR5'</span>: <span class="number">13</span>,</div><div class="line">                         <span class="string">'downstream'</span>: <span class="number">1</span>,</div><div class="line">                         <span class="string">'exonic'</span>: <span class="number">174</span>,</div><div class="line">                         <span class="string">'intergenic'</span>: <span class="number">189</span>,</div><div class="line">                         <span class="string">'intronic'</span>: <span class="number">172</span>,</div><div class="line">                         <span class="string">'ncRNA_exonic'</span>: <span class="number">24</span>,</div><div class="line">                         <span class="string">'ncRNA_intronic'</span>: <span class="number">36</span>,</div><div class="line">                         <span class="string">'splicing'</span>: <span class="number">4</span>,</div><div class="line">                         <span class="string">'upstream'</span>: <span class="number">2</span>,</div><div class="line">                         <span class="string">'upstream;downstream'</span>: <span class="number">2</span>&#125;&#125;</div><div class="line"></div><div class="line"><span class="comment">#输出数据框结构，缺损的元素用 NaN补齐</span></div><div class="line"></div><div class="line">frame = DataFrame(d)</div><div class="line">print(frame)</div><div class="line"></div><div class="line">                     PDC1279A_vs_PDC1279  PDC1279C_vs_PDC1279  \</div><div class="line">UTR3                                 <span class="number">9.0</span>                 <span class="number">11.0</span>   </div><div class="line">UTR5                                 <span class="number">4.0</span>                 <span class="number">13.0</span>   </div><div class="line">downstream                           <span class="number">5.0</span>                  <span class="number">1.0</span>   </div><div class="line">exonic                             <span class="number">149.0</span>                <span class="number">174.0</span>   </div><div class="line">exonic;splicing                      NaN                  NaN   </div><div class="line">intergenic                         <span class="number">170.0</span>                <span class="number">189.0</span>   </div><div class="line">intronic                           <span class="number">163.0</span>                <span class="number">172.0</span>   </div><div class="line">ncRNA_exonic                        <span class="number">17.0</span>                 <span class="number">24.0</span>   </div><div class="line">ncRNA_intronic                      <span class="number">23.0</span>                 <span class="number">36.0</span>   </div><div class="line">ncRNA_splicing                       NaN                  NaN   </div><div class="line">splicing                             <span class="number">2.0</span>                  <span class="number">4.0</span>   </div><div class="line">upstream                             NaN                  <span class="number">2.0</span>   </div><div class="line">upstream;downstream                  <span class="number">2.0</span>                  <span class="number">2.0</span></div></pre></td></tr></table></figure>
<h2 id="方法二：使用defaultdict"><a href="#方法二：使用defaultdict" class="headerlink" title="方法二：使用defaultdict()"></a>方法二：使用defaultdict()</h2><p>两个维度字典：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</div><div class="line"></div><div class="line">d = defaultdict(defaultdict)</div><div class="line">d[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">3</span></div></pre></td></tr></table></figure></p>
<p>等价于：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">nested_dict_factory</span><span class="params">()</span>:</span> </div><div class="line">    <span class="keyword">return</span> defaultdict(int)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">nested_dict_factory2</span><span class="params">()</span>:</span> </div><div class="line">    <span class="keyword">return</span> defaultdict(nested_dict_factory)</div><div class="line"></div><div class="line">db = defaultdict(nested_dict_factory2)</div></pre></td></tr></table></figure>
<p>当然，第一种方法简洁的多！</p>
<p>要获得更多维度，你可以（三维）：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</div><div class="line">d = defaultdict(<span class="keyword">lambda</span> :defaultdict(defaultdict))</div><div class="line">d[<span class="number">1</span>][<span class="number">2</span>][<span class="number">3</span>] = <span class="number">4</span></div></pre></td></tr></table></figure>
<p>使用defaultdict任何未定义的key都会默认返回一个根据method_factory参数不同的默认值, 而相同情况下dict()会返回KeyError.</p>
<p>python中lambda存在意义就是对简单函数的简洁表示</p>
<p>实际上 defaultdict也是通过<strong>missing</strong>方法实现的。defaultdict在dict的基础上添加了一个missing(key)方法, 在调用一个不存的key的时候, defaultdict会调用<strong>missing</strong>, 返回一个根据default_factory参数的默认值, 所以不会返回Keyerror.</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">In[<span class="number">35</span>]: print(dir(defaultdict))</div><div class="line">[<span class="string">'__class__'</span>, <span class="string">'__contains__'</span>, <span class="string">'__copy__'</span>, <span class="string">'__delattr__'</span>, <span class="string">'__delitem__'</span>, <span class="string">'__dir__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__eq__'</span>, <span class="string">'__format__'</span>, <span class="string">'__ge__'</span>, <span class="string">'__getattribute__'</span>, <span class="string">'__getitem__'</span>, <span class="string">'__gt__'</span>, <span class="string">'__hash__'</span>, <span class="string">'__init__'</span>, <span class="string">'__iter__'</span>, <span class="string">'__le__'</span>, <span class="string">'__len__'</span>, <span class="string">'__lt__'</span>, <span class="string">'__missing__'</span>, <span class="string">'__ne__'</span>, <span class="string">'__new__'</span>, <span class="string">'__reduce__'</span>, <span class="string">'__reduce_ex__'</span>, <span class="string">'__repr__'</span>, <span class="string">'__setattr__'</span>, <span class="string">'__setitem__'</span>, <span class="string">'__sizeof__'</span>, <span class="string">'__str__'</span>, <span class="string">'__subclasshook__'</span>, <span class="string">'clear'</span>, <span class="string">'copy'</span>, <span class="string">'default_factory'</span>, <span class="string">'fromkeys'</span>, <span class="string">'get'</span>, <span class="string">'items'</span>, <span class="string">'keys'</span>, <span class="string">'pop'</span>, <span class="string">'popitem'</span>, <span class="string">'setdefault'</span>, <span class="string">'update'</span>, <span class="string">'values'</span>]</div></pre></td></tr></table></figure>
<h1 id="嵌套字典的遍历"><a href="#嵌套字典的遍历" class="headerlink" title="嵌套字典的遍历"></a>嵌套字典的遍历</h1><h2 id="方法一：一层一层的嵌套迭代-从而实现遍历"><a href="#方法一：一层一层的嵌套迭代-从而实现遍历" class="headerlink" title="方法一：一层一层的嵌套迭代,从而实现遍历"></a>方法一：一层一层的嵌套迭代,从而实现遍历</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> d.items():</div><div class="line">    <span class="keyword">for</span> key2, val2 <span class="keyword">in</span> value.items():</div><div class="line">        <span class="keyword">print</span> (key2, val2)</div></pre></td></tr></table></figure>
<h1 id="在类中定义walk方法实现嵌套字典的遍历"><a href="#在类中定义walk方法实现嵌套字典的遍历" class="headerlink" title="在类中定义walk方法实现嵌套字典的遍历"></a>在类中定义walk方法实现嵌套字典的遍历</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vividict</span><span class="params">(dict)</span>:</span></div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">__missing__</span><span class="params">(self, key)</span>:</span></div><div class="line">		value = self[key] = type(self)()</div><div class="line">		<span class="keyword">return</span> value</div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">walk</span><span class="params">(self)</span>:</span></div><div class="line">		<span class="keyword">for</span> key, value <span class="keyword">in</span> self.items():</div><div class="line">			<span class="keyword">if</span> isinstance(value, Vividict):</div><div class="line">				<span class="keyword">for</span> tup <span class="keyword">in</span> value.walk():</div><div class="line">					<span class="keyword">yield</span> (key,) + tup</div><div class="line">			<span class="keyword">else</span>:</div><div class="line">				<span class="keyword">yield</span> key, value</div></pre></td></tr></table></figure>
<p>解释:<br>第1-4行：上面已经解释过了<br>第5-11行：定义一个walk函数，并对字典items对象的key和value进行遍历，isinstance用于判断对象类型，如果value是一个字典，那么对value调用walk（）方法继续进行遍历，一层一层将key,value存储在元祖中（）。当最里面一层，即else情况，输出key,value。整个过程即<strong>将字典数据结构扁平化为元祖</strong></p>
<p>此时，我们可以这样来遍历字典（输出元祖）</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">#打印整个元祖</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> tup <span class="keyword">in</span> d.walk():</div><div class="line">	print(tup)</div><div class="line"></div><div class="line">(<span class="string">'PDC1279_vs_PDC1279C6'</span>, <span class="string">'downstream'</span>, <span class="number">3</span>)</div><div class="line">(<span class="string">'PDC1279_vs_PDC1279C6'</span>, <span class="string">'UTR3'</span>, <span class="number">11</span>)</div><div class="line">(<span class="string">'PDC1279_vs_PDC1279C6'</span>, <span class="string">'intronic'</span>, <span class="number">164</span>)</div><div class="line">(<span class="string">'PDC1279_vs_PDC1279C6'</span>, <span class="string">'splicing'</span>, <span class="number">4</span>)</div><div class="line"></div><div class="line">**这就是扁平化的字典**</div><div class="line"></div><div class="line"><span class="comment">#打印元祖的第3列</span></div><div class="line"><span class="keyword">for</span> tup <span class="keyword">in</span> d.walk():</div><div class="line">	print(tup[<span class="number">2</span>])</div></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>（1）<a href="https://ask.helplib.com/229754" target="_blank" rel="external">https://ask.helplib.com/229754</a></p>
<p>（2）Python魔法方法指南（推荐阅读）</p>
<p><a href="http://pyzh.readthedocs.io/en/latest/python-magic-methods-guide.html" target="_blank" rel="external">http://pyzh.readthedocs.io/en/latest/python-magic-methods-guide.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;如何优雅的生成及遍历python嵌套字典&lt;/blockquote&gt;
    
    </summary>
    
      <category term="python" scheme="https:///AnJingwd.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https:///AnJingwd.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>常用链接（持续更新）</title>
    <link href="https:///AnJingwd.github.io/2017/08/19/%E5%B8%B8%E7%94%A8%E9%93%BE%E6%8E%A5%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <id>https:///AnJingwd.github.io/2017/08/19/常用链接（持续更新）/</id>
    <published>2017-08-19T06:51:52.000Z</published>
    <updated>2017-11-23T17:01:28.930Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">常用链接（持续更新）</blockquote>

<a id="more"></a>
<h1 id="论坛"><a href="#论坛" class="headerlink" title="论坛"></a>论坛</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://www.cmt.com.cn/" target="_blank" rel="external">医学论坛网</a></td>
<td>医学资讯及文献导读</td>
</tr>
<tr>
<td><a href="http://www.seqanswers.com/" target="_blank" rel="external">seqanswer</a></td>
<td>关于测序的一个论坛</td>
</tr>
<tr>
<td><a href="https://www.plob.org/" target="_blank" rel="external">PLoB</a></td>
<td>Public Library of Bioinformatics (中文博客)</td>
</tr>
<tr>
<td><a href="http://www.rna-seqblog.com/" target="_blank" rel="external">rna-seqblog</a></td>
<td>RNA-seq英文博客</td>
</tr>
<tr>
<td><a href="http://www.biotrainee.com/forum.php" target="_blank" rel="external"> biotrainee</a></td>
<td>生信技能树</td>
</tr>
<tr>
<td><a href="http://www.oschina.net/" target="_blank" rel="external">oschina</a></td>
<td>开源中国</td>
</tr>
<tr>
<td><a href="https://d.cosx.org/" target="_blank" rel="external">Capital of Statistics, COS</a></td>
<td>统计之都</td>
</tr>
<tr>
<td><a href="http://shujuren.org/" target="_blank" rel="external">数据人网 </a></td>
<td>大数据</td>
</tr>
<tr>
<td><a href="http://qgenomics.org/" target="_blank" rel="external">Qgenomics</a></td>
<td>人基因组学与生物信息学(推荐)</td>
</tr>
</tbody>
</table>
<h1 id="学术导航"><a href="#学术导航" class="headerlink" title="学术导航"></a>学术导航</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://sxwldh.scholarnet.cn/" target="_blank" rel="external">学术网</a></td>
<td>文献，科技部，工程院，基金，论坛</td>
</tr>
<tr>
<td><a href="http://www.6453.net/" target="_blank" rel="external">龙猫学术导航</a></td>
<td>国内外文献图书，科研工具，专利标准导航，信息交流等</td>
</tr>
<tr>
<td><a href="http://www.gaokeyan.com/" target="_blank" rel="external">搞科研</a></td>
<td>学术圈新闻，科研工具，生活小工具，在线小工具等</td>
</tr>
<tr>
<td><a href="http://kbs.cnki.net/" target="_blank" rel="external">学术网站大全</a></td>
<td>cnki 官方，绝对够全</td>
</tr>
</tbody>
</table>
<h1 id="linux及数据分析"><a href="#linux及数据分析" class="headerlink" title="linux及数据分析"></a>linux及数据分析</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://man.linuxde.net/" target="_blank" rel="external">Linux命令大全</a></td>
<td>linux命令搜索，查看帮助</td>
</tr>
<tr>
<td><a href="http://dongweiming.github.io/sed_and_awk/#/2" target="_blank" rel="external">awk &amp; sed</a></td>
<td>awk &amp;sed ppt教程</td>
</tr>
<tr>
<td><a href="http://userweb.eng.gla.ac.uk/umer.ijaz/bioinformatics/linux.html" target="_blank" rel="external">Linux command line exercises for NGS data processing</a></td>
<td>NGS数据处理实践过程中的linux命令行知识点</td>
</tr>
<tr>
<td><a href="http://wiki.bits.vib.be/index.php/Introduction_to_Linux_for_bioinformatics" target="_blank" rel="external">Introduction to Linux for bioinformatics</a></td>
<td>VIB Bioinformatics Core Wiki</td>
</tr>
<tr>
<td><a href="https://github.com/qiwsir/ITArticles/tree/master/Linux" target="_blank" rel="external">ITArticles/Linux/</a></td>
<td>linux技术文章</td>
</tr>
</tbody>
</table>
<h1 id="分析流程"><a href="#分析流程" class="headerlink" title="分析流程"></a>分析流程</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://userweb.eng.gla.ac.uk/umer.ijaz/bioinformatics/Illumina_workflow.html" target="_blank" rel="external">Illumina Amplicons Processing Workflow</a></td>
<td>16S pipelines</td>
</tr>
<tr>
<td><a href="http://www.jianshu.com/p/938d362fc48d" target="_blank" rel="external">bio简书</a></td>
<td>bwa+samtools+picardtools+GATK call SNP 流程</td>
</tr>
</tbody>
</table>
<h1 id="生信数据库"><a href="#生信数据库" class="headerlink" title="生信数据库"></a>生信数据库</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description </th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://www.snpedia.com" target="_blank" rel="external">SNPedia</a></td>
<td>SNP与人类疾病，人群频率，文献报道</td>
</tr>
<tr>
<td><a href="https://link.zhihu.com/?target=http%3A//www.ebi.ac.uk/gwas/" target="_blank" rel="external">GWAS Catalog </a></td>
<td>GWAS研究的SNP,triat,Study等</td>
</tr>
<tr>
<td><a href="https://link.zhihu.com/?target=http%3A//www.mirbase.org/" target="_blank" rel="external">miRBase</a></td>
<td>miRNA “官方”列表。</td>
</tr>
<tr>
<td><a href="http://timetree.org/" target="_blank" rel="external">TimeTree</a></td>
<td>进化树的时间尺度。</td>
</tr>
<tr>
<td><a href="http://pdgenetics.org/" target="_blank" rel="external">IPDGC</a></td>
<td>International Parkinson Disease Genomics Consortium</td>
</tr>
<tr>
<td><a href="http://portals.broadinstitute.org/collaboration/giant/index.php/GIANT_consortium" target="_blank" rel="external">GIANT</a></td>
<td>Genetic Investigation of Anthropometric Traits)</td>
</tr>
<tr>
<td><a href="https://wy2160640.github.io/%E8%B5%84%E6%BA%90%E9%93%BE%E6%8E%A5/2017/10/26/databases-and-webserver.html" target="_blank" rel="external">2017NAR发布的收录数据库和web应用网站</a></td>
<td>十分全面（推荐）</td>
</tr>
</tbody>
</table>
<h1 id="开发社区"><a href="#开发社区" class="headerlink" title="开发社区"></a>开发社区</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.biostars.org/" target="_blank" rel="external">Biostars</a></td>
<td>专注于生物信息学，计算基因组学和生物数据分析的问答社区</td>
</tr>
<tr>
<td><a href="https://segmentfault.com/" target="_blank" rel="external">Segmentfault</a></td>
<td>一个专注于解决编程问题，提高开发技能的社区</td>
</tr>
<tr>
<td><a href="https://stackoverflow.com/" target="_blank" rel="external">Stackoverflow</a></td>
<td>编程相关的IT技术问答网站</td>
</tr>
<tr>
<td><a href="https://github.com/" target="_blank" rel="external">GitHub</a></td>
<td>面向开源及私有软件项目的git托管平台</td>
</tr>
<tr>
<td><a href="https://www.gitbook.com/explore" target="_blank" rel="external">Gitbook</a></td>
<td>电子书搜索下载与diy</td>
</tr>
</tbody>
</table>
<h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://pymotw.com/2/py-modindex.html" target="_blank" rel="external">PYMOTW</a></td>
<td>Python2标准库的使用</td>
</tr>
<tr>
<td><a href="https://github.com/jorvis/biocode" target="_blank" rel="external">Bioinformatics code libraries and scripts</a></td>
<td>常遇到的问题都有脚本（py/pl）</td>
</tr>
<tr>
<td><a href="http://simple-is-better.com/sites/" target="_blank" rel="external">Python4cn(news, jobs)</a></td>
<td>Python商业网站,技术博客,开源项目,图书 ,教程,讨论区等</td>
</tr>
<tr>
<td><a href="http://www.503error.com/category/python" target="_blank" rel="external">张志明的个人博客</a></td>
<td>python，shell,运维（推荐）</td>
</tr>
<tr>
<td><a href="http://cuiqingcai.com/" target="_blank" rel="external">静觅 崔庆才的个人博客</a></td>
<td>python 爬虫</td>
</tr>
<tr>
<td><a href="https://inventwithpython.com/blog/" target="_blank" rel="external">The Invent with Python Blog</a></td>
<td>python英文博客</td>
</tr>
</tbody>
</table>
<h1 id="在线小工具"><a href="#在线小工具" class="headerlink" title="在线小工具"></a>在线小工具</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://tool.oschina.net/" target="_blank" rel="external">在线工具</a></td>
<td>开源中国开发的，主要面向码农</td>
</tr>
<tr>
<td><a href="https://smallpdf.com/" target="_blank" rel="external">smallpdf</a></td>
<td>pdf转word等，在线工具</td>
</tr>
<tr>
<td><a href="http://tool.oschina.net/regex/" target="_blank" rel="external">正则表达式在线测试</a></td>
<td>检查脚本中使用的正则表达式是否正确，提前发现问题</td>
</tr>
<tr>
<td><a href="http://tool.oschina.net/commons?type=3" target="_blank" rel="external">RGB颜色对照表</a></td>
<td>绘图配色必备</td>
</tr>
<tr>
<td><a href="http://tool.oschina.net/highlight" target="_blank" rel="external">在线代码着色</a></td>
<td>看看就好</td>
</tr>
<tr>
<td><a href="http://tool.oschina.net/markdown" target="_blank" rel="external">在线 Markdown 编译器</a></td>
<td>用着不错</td>
</tr>
<tr>
<td><a href="http://tool.oschina.net/commons?type=4" target="_blank" rel="external">ASCII码对照表</a></td>
<td>速查</td>
</tr>
<tr>
<td><a href="http://cli.im/" target="_blank" rel="external">草料二维码（静态二维码）</a> &emsp;&emsp; <a href="http://www.qmacode.com" target="_blank" rel="external">Q码（动态二维码）</a></td>
<td>比较好玩儿</td>
</tr>
<tr>
<td><a href="http://www.tagxedo.com/" target="_blank" rel="external">Tagxedo</a></td>
<td>词云（不是所有浏览器都可以）</td>
</tr>
<tr>
<td><a href="http://www.pigai.org/" target="_blank" rel="external">批改网</a></td>
<td>英语作文在线免费批改（还阔以）</td>
</tr>
</tbody>
</table>
<h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://www.pdfdrive.net/" target="_blank" rel="external">PDFDRIVE</a></td>
<td>搜索下载免费的pdf电子书</td>
</tr>
<tr>
<td><a href="https://www.slideshare.net/" target="_blank" rel="external">slideshare</a></td>
<td>免费且高质量英文ppt下载与分享</td>
</tr>
<tr>
<td><a href="http://hippter.com/" target="_blank" rel="external">Hi,PPTer</a></td>
<td>PPT资源导航</td>
</tr>
<tr>
<td> <a href="http://gen.lib.rus.ec/" target="_blank" rel="external">Library Genesis</a></td>
<td>外文书籍的超级好用网址,免费下载</td>
</tr>
<tr>
<td><a href="http://www.freebookcentre.net/" target="_blank" rel="external">FreeBookCentre.net</a></td>
<td>英文版电子书分类免费下载</td>
</tr>
<tr>
<td><a href="https://www.gitbook.com/explore" target="_blank" rel="external">Explore · GitBook</a></td>
<td>GitBook开源电子书搜索</td>
</tr>
<tr>
<td><a href="https://www.pipipan.com/dir/1738248-7093330-60a297/" target="_blank" rel="external">PDF电子书基地</a></td>
<td>免费下载，比较全</td>
</tr>
<tr>
<td><a href="https://www.youtube.com/" target="_blank" rel="external">youtube</a></td>
<td>可以搜索很多视频教程（可以设置加字幕和自动翻译）</td>
</tr>
</tbody>
</table>
<h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://www.bingdian001.com/?p=30" target="_blank" rel="external">冰点文库下载器</a></td>
<td>自由下载百度、豆丁、丁香、MBALib、道客巴巴、Book118等文库文档</td>
</tr>
<tr>
<td><a href="http://www.3322.cc/soft/201509041764.html" target="_blank" rel="external">visio</a></td>
<td>专业绘制流程图</td>
</tr>
<tr>
<td><a href="http://www.ggfwzs.com/" target="_blank" rel="external">谷歌访问助手</a></td>
<td>“google/gmail/google scholar”一网打尽</td>
</tr>
<tr>
<td><a href="http://ac.scmor.com/" target="_blank" rel="external">Google和Google学术可用链接汇总</a></td>
<td>能用</td>
</tr>
<tr>
<td><a href="http://www.flvcd.com/" target="_blank" rel="external">硕鼠网络视频下载器</a></td>
<td>爬取网络视频</td>
</tr>
<tr>
<td><a href="https://www.teamviewer.com/zhCN/" target="_blank" rel="external">TeamViewer 12</a></td>
<td>远程控制</td>
</tr>
<tr>
<td><a href="http://www.ddooo.com/softdown/69975.htm" target="_blank" rel="external">iMindMap 8</a></td>
<td>思维导图</td>
</tr>
<tr>
<td><a href="http://portal.rapidbbs.cn/thread-258839-1-1.html" target="_blank" rel="external"> OK</a>  &emsp; <a href="https://www.baidu.com/link?url=hUT9QV7X--KXNTJvmhoEYPeGscqZXjrf4kZ59gTFnbCzPhxhi0MXYMsmj8CcAZf8XFLCtqigWOWlyQONq5fmmxb8EJiyTG9J0oYodIdjP1O&amp;wd=&amp;eqid=a432813800016bba0000000359acf878" target="_blank" rel="external">美化大师</a></td>
<td>PPT特效，模板插件</td>
</tr>
<tr>
<td><a href="https://prezi.com/" target="_blank" rel="external">prize</a> &emsp; <a href="http://www.prezicn.com/portal.php" target="_blank" rel="external">prize中国</a></td>
<td>prezi是一款在线的演讲文稿生成软件,“动态”PPT</td>
</tr>
<tr>
<td><a href="http://www.duokan.com/" target="_blank" rel="external">多看</a></td>
<td>自带取词及字典功能，并且笔记可以直接导入印象笔记（推荐）</td>
</tr>
<tr>
<td><a href="https://laod.cn/tools/pan-download.html" target="_blank" rel="external">Pan Download</a></td>
<td>百度网盘不限速下载软件</td>
</tr>
</tbody>
</table>
<h1 id="谷歌插件"><a href="#谷歌插件" class="headerlink" title="谷歌插件"></a>谷歌插件</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://chrome.google.com/webstore/detail/sci-hub-links/olcgjijbclchlliaffaghajlbfppkbkl?hl=zh-CN" target="_blank" rel="external">Sci-Hub Links</a></td>
<td>转换 DOI 和 Pubmed 位址为 sci-hub 连结</td>
</tr>
<tr>
<td><a href="https://chrome.google.com/webstore/detail/the-paper-link-for-pubmed/kgdcooicefdfjcplcnehfpbngjccncko?hl=zh-CN" target="_blank" rel="external">医学文献助手(有限版) </a></td>
<td>在 PubMed 搜索结果页面，添加 PDF 链接、影响因子、F1000评论、作者发表记录 等</td>
</tr>
<tr>
<td><a href="https://chrome.google.com/webstore/detail/dream-afar-new-tab/henmfoppjjkcencpbjaigfahdjlgpegn?hl=zh-CN" target="_blank" rel="external">远方 New Tab</a></td>
<td>每天打开新页面都是一段不期而遇的旅行</td>
</tr>
<tr>
<td><a href="https://chrome.google.com/webstore/detail/search-by-image-by-google/dajedkncpodkggklbegccjpmnglmnflm" target="_blank" rel="external">Search by Image (by Google) </a></td>
<td>用图片搜索</td>
</tr>
<tr>
<td><a href="https://xmt.cn/plugin/install?from=install" target="_blank" rel="external">新媒体管家</a></td>
<td>微信公众号排版及扩展功能</td>
</tr>
</tbody>
</table>
<h1 id="文献"><a href="#文献" class="headerlink" title="文献"></a>文献</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.researchgate.net/home" target="_blank" rel="external">Researchgate</a> &emsp; <a href="http://www.360doc.com/content/16/1029/00/6943848_602219154.shtml" target="_blank" rel="external">文献鸟</a></td>
<td>文献推送，文献跟踪与速读小工具</td>
</tr>
<tr>
<td><a href="https://apps.webofknowledge.com/UA_GeneralSearch_input.do?product=UA&amp;SID=Z249gIMNTCPIcZBS93N&amp;search_mode=GeneralSearch" target="_blank" rel="external">Web of Science</a></td>
<td>大型综合性、多学科、核心期刊引文索引数据库</td>
</tr>
<tr>
<td><a href="https://www.ncbi.nlm.nih.gov/pubmed/" target="_blank" rel="external">PubMed</a></td>
<td>免费海量英文文献</td>
</tr>
<tr>
<td><a href="http://www.cnki.net/" target="_blank" rel="external">中国知网</a></td>
<td>中文期刊</td>
</tr>
<tr>
<td><a href="http://www.lunwenxiazai.com/zhongwenku/" target="_blank" rel="external">论文下载网</a></td>
<td>中文论文下载，知网，万方</td>
</tr>
<tr>
<td><a href="http://sci-hub.cc/" target="_blank" rel="external">SCI-HUB</a></td>
<td>收费文献免费下载</td>
</tr>
<tr>
<td><a href="http://www.medsci.cn/sci/" target="_blank" rel="external">梅斯医学</a></td>
<td>影响因子查询（APP更好用）</td>
</tr>
<tr>
<td><a href="http://www.howsci.com/" target="_blank" rel="external">科研动力</a></td>
<td>专注EndNote, 关注科研论文写作</td>
</tr>
<tr>
<td><a href="https://www.gcbi.com.cn/gclib/html/index" target="_blank" rel="external">GCBI</a></td>
<td>与PubMed同步并课显示影响因子</td>
</tr>
<tr>
<td><a href="https://pubmedplus.com/#/index" target="_blank" rel="external">pubmedplus</a></td>
<td>文献摘要自动翻译（翻译得比较好）</td>
</tr>
<tr>
<td><a href="http://www.chinapubmed.net/" target="_blank" rel="external">China PubMed</a></td>
<td>英文文献摘要翻译（更新不够快）</td>
</tr>
<tr>
<td><a href="http://pubmed.ict.griffith.edu.au/" target="_blank" rel="external">Article-based PubMed Search Engine</a></td>
<td>快速搜寻到与你的PubMed索引论文所相关的文章</td>
</tr>
<tr>
<td><a href="http://navi.cnki.net/KNavi/ppaper.html" target="_blank" rel="external">CNKI硕博士学位论文搜索</a></td>
<td>根据学位授予单位分类搜索（推荐）</td>
</tr>
<tr>
<td><a href="http://www.lib.sjtu.edu.cn/index.php?m=content&amp;c=index&amp;a=show&amp;catid=283&amp;id=1046" target="_blank" rel="external">SJTU</a></td>
<td>上海交通大学学位论文数据库</td>
</tr>
</tbody>
</table>
<h1 id="论文写作与投稿"><a href="#论文写作与投稿" class="headerlink" title="论文写作与投稿"></a>论文写作与投稿</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.nature.com/scitable/ebooks/english-communication-for-scientists-14053993/contents" target="_blank" rel="external">English Communication for Scientists</a></td>
<td>一本小书（推荐）</td>
</tr>
<tr>
<td><a href="https://www.internationalscienceediting.com/verb-tenses-scientific-manuscripts/" target="_blank" rel="external">International Science Editing</a></td>
<td>文章润色服务，其中writing tips部分很实用</td>
</tr>
<tr>
<td><a href="http://www.ozdic.com/" target="_blank" rel="external">ozdic</a></td>
<td>英语搭配词典（推荐）</td>
</tr>
<tr>
<td><a href="https://owl.english.purdue.edu/" target="_blank" rel="external">Purdue Online Writing Lab</a></td>
<td>普渡大学学术英语写作资源</td>
</tr>
<tr>
<td><a href="https://www.indiana.edu/~academy/firstPrinciples/" target="_blank" rel="external">Plagiarism Certification Tests for Master’s and Doctoral Students</a></td>
<td>印第安纳大学鉴别论文剽窃小测试</td>
</tr>
</tbody>
</table>
<h1 id="生信软件"><a href="#生信软件" class="headerlink" title="生信软件"></a>生信软件</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://tiramisutes.github.io/2015/08/05/bio-online.html#%E8%B7%A8%E8%86%9C%E7%BB%93%E6%9E%84%E5%9F%9F" target="_blank" rel="external">hope的博客总结</a></td>
<td>常用生物信息在线工具</td>
</tr>
<tr>
<td><a href="http://www.bio-info-club.com/?p=95" target="_blank" rel="external">生信客部落总结</a></td>
<td>生物信息工具整合(包含在线工具与离线工具)</td>
</tr>
<tr>
<td><a href="http://espript.ibcp.fr/ESPript/cgi-bin/ESPript.cgi" target="_blank" rel="external">ESPript</a></td>
<td>美得令人心动的序列显示工具</td>
</tr>
<tr>
<td><a href="http://www.uzzf.com/soft/186393.html" target="_blank" rel="external">Pathway Builder Tool</a></td>
<td>零基础也能画出超酷信号通路图</td>
</tr>
<tr>
<td><a href="http://cytoscape.org/" target="_blank" rel="external">cytoscape</a></td>
<td>相互作用网络绘图</td>
</tr>
<tr>
<td><a href="http://itol.embl.de/help.cgi" target="_blank" rel="external">ITOL</a></td>
<td>进化树后期编辑神器</td>
</tr>
<tr>
<td><a href="http://www.evolgenius.info/evolview/#login" target="_blank" rel="external">EVOLVIEW</a></td>
<td>进化树编辑，编程加多层注释圈儿</td>
</tr>
<tr>
<td><a href="http://www.bioconductor.org/packages/stats/data-annotation.html" target="_blank" rel="external"> Bioconductor annotation packages</a></td>
<td>Bioconductor注释文件合集 </td>
</tr>
<tr>
<td><a href="http://bbs.sciencenet.cn/thread-1251889-1-1.html" target="_blank" rel="external">DNAMAN</a></td>
<td>DNAMAN 8 全功能英文版，免序列号（By Raindy）</td>
</tr>
</tbody>
</table>
<h1 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description </th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://mp.aiweibang.com/m/u/299005/a?cid=0" target="_blank" rel="external">实验小白</a></td>
<td>基础实验介绍</td>
</tr>
<tr>
<td><a href="http://www.swwy.com/shengmingkexue.html" target="_blank" rel="external">生物无忧</a></td>
<td>中文实验视频教程</td>
</tr>
<tr>
<td><a href="https://www.jove.com/" target="_blank" rel="external">Journal of Visualized Experiments ( JoVE)</a></td>
<td>JoVE是一份展示可视化实验的期刊，是世界上第一个同行评议的科技视频期刊</td>
</tr>
<tr>
<td><a href="http://www.protocol-online.org/" target="_blank" rel="external">PROTOCAL ONLINE</a></td>
<td>生物医学研究领域的实验protocols以及最新实验方面的文章</td>
</tr>
<tr>
<td><a href="http://www.nature.com/nprot/index.html" target="_blank" rel="external">Nature protocols</a></td>
<td>Nature的实验Protocol,述详细的实验步骤及注意事项</td>
</tr>
<tr>
<td><a href="http://www.nature.com/nmeth/index.html" target="_blank" rel="external">Nature methods</a></td>
<td>主要发表生命科学领域中新的研究方法或对经典方法有显著改进的相关论文</td>
</tr>
<tr>
<td> <a href="http://www.oxfordjournals.org/our_journals/nar/new_nar_methods.html" target="_blank" rel="external">Nucleic Acids Research Methods</a></td>
<td>可按不同研究领域来查找具体的实验技术</td>
</tr>
<tr>
<td><a href="http://link.springer.com" target="_blank" rel="external">Springer出版社的Protocol系列</a></td>
<td>在“Browse by discipline”一栏选择“Life science”,然后在“Content Type”一栏点击protocol,在搜索框输入关键词查询实验方法</td>
</tr>
<tr>
<td><a href="http://cshprotocols.cshlp.org/" target="_blank" rel="external">Cold Spring Harbor Protocols</a></td>
<td>冷泉港实验室Protocols</td>
</tr>
<tr>
<td><a href="http://www.bio-protocol.org/cn/Default.aspx" target="_blank" rel="external">bio-protocol</a></td>
<td>质量非常高，而且全部免费，非常好用</td>
</tr>
</tbody>
</table>
<h1 id="推荐博客"><a href="#推荐博客" class="headerlink" title="推荐博客"></a>推荐博客</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://blog.sciencenet.cn/u/%E6%96%BD%E4%B8%80%E5%85%AC" target="_blank" rel="external">施一公个人博客</a></td>
<td>心灵鸡汤</td>
</tr>
<tr>
<td><a href="https://laod.cn/hosts" target="_blank" rel="external">老D博客</a></td>
<td>网络为主，各种黑科技</td>
</tr>
<tr>
<td><a href="http://blog.sina.com.cn/u/5691553152" target="_blank" rel="external">车小胖的博客</a></td>
<td>网络</td>
</tr>
<tr>
<td><a href="http://raindu.com/" target="_blank" rel="external">raindu’s home</a></td>
<td>R与Excel数据可视化</td>
</tr>
<tr>
<td><a href="http://qinqianshan.com/" target="_blank" rel="external">Sam’s Note</a></td>
<td>专注转化医学，专注生物信息</td>
</tr>
<tr>
<td><a href="http://www.tanboyu.com/" target="_blank" rel="external">Bob’s Blog</a></td>
<td>药学工作者中的极客达人，精通SQL，R，擅长数据分析，数据挖掘。</td>
</tr>
<tr>
<td><a href="http://blog.biochen.com/" target="_blank" rel="external">BioChen生物</a></td>
<td>Lnc RNA , ChiP, Genome（推荐）</td>
</tr>
<tr>
<td><a href="https://guangchuangyu.github.io/cn/" target="_blank" rel="external">Y叔的博客</a></td>
<td>R ，生信 （推荐）</td>
</tr>
<tr>
<td><a href="http://tiramisutes.github.io/" target="_blank" rel="external">hope</a></td>
<td>基因组和转录组方面</td>
</tr>
<tr>
<td><a href="http://blog.sina.com.cn/s/blog_4b55f4130100ir5a.html" target="_blank" rel="external">文字的博客</a></td>
<td>GWAS (推荐)</td>
</tr>
<tr>
<td><a href="http://www.cnblogs.com/freemao/" target="_blank" rel="external">free_mao的博客</a></td>
<td>python, linux ,gwas</td>
</tr>
<tr>
<td><a href="http://www.bio-info-club.com/" target="_blank" rel="external">生信客部落</a></td>
<td>python , R ,工具</td>
</tr>
<tr>
<td><a href="http://bioinformation.cn/" target="_blank" rel="external">生物信息博客</a></td>
<td>生物数据库、软件、程序介绍</td>
</tr>
<tr>
<td><a href="https://hui-liu.github.io/" target="_blank" rel="external">刘辉的博客</a></td>
<td>生信基础</td>
</tr>
<tr>
<td><a href="http://www.bioinfo-scrounger.com/" target="_blank" rel="external">生信笔记</a></td>
<td>生信入门级</td>
</tr>
<tr>
<td><a href="http://shandanxiazi.blog.163.com/" target="_blank" rel="external">花之恋的博客</a></td>
<td>生信工具等</td>
</tr>
<tr>
<td> <a href="http://www.calyx.biz/" target="_blank" rel="external">CALYX&amp;YAMOL 博客</a></td>
<td>WeGene基因一员</td>
</tr>
<tr>
<td><a href="https://zhuanlan.zhihu.com/jacktalk" target="_blank" rel="external">JackTalk</a></td>
<td>生物信息学，计算生物学，python</td>
</tr>
<tr>
<td><a href="http://blog.sina.com.cn/s/articlelist_2214034580_0_1.html" target="_blank" rel="external">fanyucai的博客</a></td>
<td>生信</td>
</tr>
<tr>
<td><a href="http://www.cnblogs.com/emanlee/category/302300.html" target="_blank" rel="external">EmanLee, Eman Lee’s Space (blog, website)</a></td>
<td>生信</td>
</tr>
<tr>
<td><a href="http://jch100.cool.blog.163.com/blog/#m=0&amp;t=1&amp;c=fks_084066081081080069084082094095081085083069083082094069" target="_blank" rel="external">飘的博客</a></td>
<td>生物信息学资料分享，写的比较简单</td>
</tr>
<tr>
<td><a href="http://zuguang.de/" target="_blank" rel="external">Zuguang Gu</a></td>
<td>英文博客，博主在德国</td>
</tr>
<tr>
<td><a href="http://www.chenlianfu.com/" target="_blank" rel="external">陈连福NGS</a></td>
<td>陈连福NGS,开培训班</td>
</tr>
<tr>
<td><a href="http://boyun.sh.cn/bio/" target="_blank" rel="external">博耘生物</a></td>
<td>已经不再更新了</td>
</tr>
<tr>
<td><a href="http://bio-spring.info/category/bio/bioinfo/page/2/" target="_blank" rel="external">Spring‘s info</a></td>
<td>生物信息，已经不再更新</td>
</tr>
<tr>
<td><a href="http://www.iwhgao.com/" target="_blank" rel="external">rabbit gao’s blog</a></td>
<td>计算机、数学、生物混合男，已经不再更新了</td>
</tr>
<tr>
<td><a href="http://bioinformatics.lofter.com/?page=2&amp;t=1383492570403" target="_blank" rel="external">Bioinformatics</a></td>
<td>已经不再更新了</td>
</tr>
<tr>
<td><a href="http://blog.sina.com.cn/tiehan1990" target="_blank" rel="external">铁汉1990的博客</a></td>
<td>已经不再更新了</td>
</tr>
<tr>
<td><a href="http://www.zilhua.com/" target="_blank" rel="external">生物日志-鸣一到</a></td>
<td>生物信息分析教程，数据可视化，已经不再更新了</td>
</tr>
<tr>
<td><a href="http://fhqdddddd.blog.163.com/" target="_blank" rel="external">云之南博客</a></td>
<td>已经不再更新了</td>
</tr>
<tr>
<td><a href="http://www.bioinformaticszen.com/" target="_blank" rel="external">Bioinformatics Zen</a></td>
<td>英文博客，已经不再更新了</td>
</tr>
<tr>
<td><a href="http://shemy.site/" target="_blank" rel="external">沈梦圆博客</a></td>
<td>似乎已经不再更新了</td>
</tr>
</tbody>
</table>
<h1 id="R语言"><a href="#R语言" class="headerlink" title="R语言"></a>R语言</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://ask.hellobi.com/blog/asxinyu/5721" target="_blank" rel="external">awesome-R</a></td>
<td>R包中文介绍【全】</td>
</tr>
<tr>
<td><a href="https://www.bioconductor.org/about/mirrors/" target="_blank" rel="external">Bioconductor - Mirrors</a></td>
<td>Bioconductor镜像汇总</td>
</tr>
<tr>
<td><a href="https://blog.rstudio.com/" target="_blank" rel="external">RStudio Blog</a> &emsp;<a href="https://www.r-bloggers.com/the-r-graphical-manual/" target="_blank" rel="external">R-bloggers</a> &emsp;<a href="https://www.nceas.ucsb.edu/scicomp/software/r" target="_blank" rel="external">R Programming Resource Center</a>&emsp; <a href="http://www.r-china.net/portal.php" target="_blank" rel="external">R China</a></td>
<td>RStudio 博客, R博客,R 编程资源中心（链接），R语言中文网</td>
</tr>
<tr>
<td><a href="http://www.statmethods.net/index.html" target="_blank" rel="external">Quick-R</a> &emsp; <a href="http://cyclismo.org/tutorial/R/input.html" target="_blank" rel="external">R Tutorial</a> &emsp; <a href="https://www.programiz.com/r-programming/if-else-statement" target="_blank" rel="external">R</a> &emsp;</td>
<td>R基础资料</td>
</tr>
<tr>
<td><a href="https://bookdown.org/yihui/r-ninja/" target="_blank" rel="external">R语言忍者秘笈</a> &emsp;</td>
<td>R语言在线电子书</td>
</tr>
<tr>
<td><a href="http://libguides.library.kent.edu/SPSS/home" target="_blank" rel="external">KENT STATE</a></td>
<td>SPSS 教程</td>
</tr>
<tr>
<td><a href="http://libguides.princeton.edu/dss/SPSS" target="_blank" rel="external">PUL</a></td>
<td>Getting Started in Data Analysis: Stata, R, SPSS, Excel: SPSS</td>
</tr>
<tr>
<td><a href="http://cn.mathworks.com/examples/product-group/matlab-computational-biology" target="_blank" rel="external">MATLAB Bioinformatics Toolbox</a></td>
<td>MATLAB生信分析示例</td>
</tr>
<tr>
<td><a href="http://rcourse.iop.kcl.ac.uk/2011/" target="_blank" rel="external">Kings college london</a></td>
<td>R语言课件—伦敦国王大学</td>
</tr>
<tr>
<td><a href="https://togaware.com/onepager/" target="_blank" rel="external">OnePageR</a></td>
<td>A Survival Guide to Data Science with R</td>
</tr>
<tr>
<td><a href="http://a-little-book-of-r-for-bioinformatics.readthedocs.io/en/latest/" target="_blank" rel="external"> R for Bioinformatics</a>  &emsp;<a href="http://a-little-book-of-r-for-biomedical-statistics.readthedocs.io/en/latest/" target="_blank" rel="external">R for Biomedical Statistics</a>  &emsp; <a href="http://a-little-book-of-r-for-time-series.readthedocs.io/en/latest/" target="_blank" rel="external">R for Time Series</a></td>
<td>R语言英文小书</td>
</tr>
<tr>
<td><a href="http://zoonek2.free.fr/UNIX/48_R/all.html?qqdrsign=01768" target="_blank" rel="external">Statistics with R</a> &emsp; <a href="http://www.gardenersown.co.uk/Education/Lectures/R/correl.htm" target="_blank" rel="external">Using R for statistical analyses</a></td>
<td>R统计</td>
</tr>
<tr>
<td><a href="http://www.statsblogs.com/about/" target="_blank" rel="external">StatsBlogs</a></td>
<td>统计相关博客R,SAS等</td>
</tr>
<tr>
<td><a href="http://kasperdanielhansen.github.io/genbioconductor/" target="_blank" rel="external">Bioconductor for Genomic Data Science</a></td>
<td>关于Bioconductor的网络课程，有视频，有材料</td>
</tr>
<tr>
<td><a href="http://blog.fens.me" target="_blank" rel="external">张丹博客</a></td>
<td>原创了大量R语言技术实战文章，包括R的极客理想系列文章，RHadoop实战系列文章，R离间NoSQL系列文章，并写作”R的极客理想”系列图书</td>
</tr>
<tr>
<td><a href="https://yihui.name/cn/" target="_blank" rel="external">谢益辉的个人博客</a></td>
<td>博客主要包括各种有趣的技术和吐槽文章。谢益辉是统计之都的创始人，现任RStudio公司程序员</td>
</tr>
<tr>
<td><a href="http://www.bjt.name/" target="_blank" rel="external">刘思喆的个人博客</a></td>
<td>博客中主要包括R语言企业级应用的文章。刘思喆现任京东推荐算法经历</td>
</tr>
<tr>
<td><a href="http://ww7.jliblog.com/" target="_blank" rel="external">李舰的个人博客</a></td>
<td>博客中主要包括R语言建模的文章。李舰现任Mango Solutions中国区数据总监</td>
</tr>
<tr>
<td><a href="http://www.wentrue.net/blog" target="_blank" rel="external">阿稳的个人博客——不周山</a></td>
<td>博客中主要包括R语言并行技术的文章。</td>
</tr>
<tr>
<td><a href="https://nsaunders.wordpress.com/" target="_blank" rel="external">WHAT YOU’RE DOING IS RATHER DESPERATE-（推荐）</a></td>
<td>作者为澳大利亚悉尼大学的生物信息学家</td>
</tr>
</tbody>
</table>
<h1 id="网络生信课程"><a href="#网络生信课程" class="headerlink" title="网络生信课程"></a>网络生信课程</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.coursera.org/" target="_blank" rel="external">coursera</a></td>
<td>在网上学习全世界最好的课程</td>
</tr>
<tr>
<td><a href="http://mooc.guokr.com/course/575/Bioinformatics--Introduction-and-Methods/" target="_blank" rel="external">Bioinformatics: Introduction and Methods</a></td>
<td>北大MOOK生物信息学导论</td>
</tr>
<tr>
<td><a href="http://www.iqiyi.com/paopao/u/2154955599/playlist/" target="_blank" rel="external">陈魏学基因</a></td>
<td>NGS相关视频</td>
</tr>
<tr>
<td><a href="http://abc.cbi.pku.edu.cn/manuals.php" target="_blank" rel="external">Applied Bioinformatics Course </a></td>
<td>北大罗静初老师abc生信课程</td>
</tr>
<tr>
<td><a href="http://genomicsclass.github.io/book/" target="_blank" rel="external">Biomedical Data Science</a></td>
<td>统计，算法，NGS书籍</td>
</tr>
<tr>
<td><a href="http://www.novocraft.com/documentation/novoalign-2/" target="_blank" rel="external"> NOVOCRAFT</a></td>
<td>NOVOCRAFT 公司NGS资料（干货）</td>
</tr>
<tr>
<td><a href="https://cbsu.tc.cornell.edu/workshops.aspx" target="_blank" rel="external">Workshops</a></td>
<td>康奈尔大学生信课件（2010-2017）</td>
</tr>
<tr>
<td><a href="https://webext.pasteur.fr/tekaia/BGA_courses.html" target="_blank" rel="external">Bioinformatics and Genome Analyses Courses</a></td>
<td>巴斯德研究所2005-2017生信课程全集</td>
</tr>
<tr>
<td><a href="http://petang.cgu.edu.tw/Bioinfomatics/" target="_blank" rel="external">CGU-GIBMS</a></td>
<td>台湾长庚大学生信课件</td>
</tr>
<tr>
<td><a href="https://wikis.utexas.edu/display/bioiteam" target="_blank" rel="external">Bioinformatics Team (BioITeam) at the University of Texas</a></td>
<td>德州大学奥斯丁分校生信课件</td>
</tr>
<tr>
<td><a href="http://tanlab.ucdenver.edu/labHomePage/teaching/CANB7640/" target="_blank" rel="external">CANB7640 COURSE WEBSITE</a></td>
<td>生信课件-按研究内容分</td>
</tr>
<tr>
<td><a href="https://qcb.ucla.edu/collaboratory/workshops/" target="_blank" rel="external">UCLA</a></td>
<td>加利福尼亚大学洛杉矶分校NGS数据处理workshop最全合集</td>
</tr>
<tr>
<td><a href="https://www.bioinformatics.purdue.edu/discoverypark/cyber/bioinformatics/services/workshops.php" target="_blank" rel="external">Purdue university Discovery Park</a></td>
<td>普渡大学生物信息课程</td>
</tr>
<tr>
<td><a href="http://biology.umd.edu/bioinformatics-crash-course---july-2014.html" target="_blank" rel="external">Bioinformatics Crash Course - July 2014</a> &emsp; <a href="http://biology.umd.edu/rna-seq-analysis.html" target="_blank" rel="external">RNA-seq Analysis</a> &emsp; <a href="http://biology.umd.edu/linux-and-hpcc-workshop.html" target="_blank" rel="external">Linux and HPCC</a></td>
<td>马里兰大学的生信中心课程-NGS分析，RNA-seq分析，linux和高性能计算</td>
</tr>
<tr>
<td><a href="https://btiplantbioinfocourse.wordpress.com/" target="_blank" rel="external">BTI Bioinformatics Course 2017</a></td>
<td>美国康奈尔大学博伊斯汤普森植物研究所课件</td>
</tr>
<tr>
<td><a href="https://edu.isb-sib.ch/course/index.php?categoryid=5" target="_blank" rel="external">Swiss Institute of  Bioinformatics</a></td>
<td>瑞士生物信息学研究所8年培训资料</td>
</tr>
<tr>
<td><a href="http://biof-edu.colorado.edu/videos/dowell-short-read-class" target="_blank" rel="external">BioFrontiers Education</a></td>
<td>科罗拉多大学生物信息课程</td>
</tr>
<tr>
<td><a href="https://www.stat.berkeley.edu/~terry/Classes/s246.2006/" target="_blank" rel="external">Statistics 246 Statistical Genetics Spring 2006</a></td>
<td>伯克利大学的遗传统计学课程</td>
</tr>
<tr>
<td><a href="https://ngschool.eu/2016/workshops" target="_blank" rel="external">NGSchool 2016 Workshops</a></td>
<td>NGSchool非常全面的ppt</td>
</tr>
<tr>
<td><a href="http://bioinformatics.mdc-berlin.de/intro2UnixandSGE/index.html" target="_blank" rel="external">BIOINFORMATICS PLATFORM</a></td>
<td>德国柏林医学院中心生物信息学课程资料</td>
</tr>
<tr>
<td><a href="http://compbio.uthscsa.edu/jinlab/courses.shtml" target="_blank" rel="external">UT HEALTH SCIENCE CENTER</a></td>
<td>圣安东尼奥-生命健康中心-jin实验室生物信息学课程ppt</td>
</tr>
<tr>
<td><a href="http://www.mi.fu-berlin.de/w/ABI/Genomics12" target="_blank" rel="external">MSc lecture Genomics</a></td>
<td>柏林自由大学 Genomics12</td>
</tr>
<tr>
<td><a href="http://www.soph.uab.edu/ssg/courses/archives" target="_blank" rel="external">Statistical  Genetics</a> &emsp;<a href="http://www.soph.uab.edu/ssg/nhgri_r25/fifthshortcourse" target="_blank" rel="external">NGS</a> &emsp;<a href="http://www.soph.uab.edu/ssg/nigmsstatgen/fifth" target="_blank" rel="external">Statistical Genetics and Genomics</a></td>
<td>伯明翰阿拉巴马大学-生物信息视频教程</td>
</tr>
<tr>
<td><a href="http://www.bioinformatics.babraham.ac.uk/training.html" target="_blank" rel="external">Babraham Institute the Bioinformatics</a></td>
<td>伯拉罕研究所生信课程</td>
</tr>
<tr>
<td><a href="http://www.personal.psu.edu/iua1/courses/2014-BMMB-852.html" target="_blank" rel="external">Applied Bioinformatics 2014</a></td>
<td>biostar handbook-生信分析 </td>
</tr>
<tr>
<td><a href="https://ocw.mit.edu/courses/biology/7-91j-foundations-of-computational-and-systems-biology-spring-2014/video-lectures/" target="_blank" rel="external">Computational and Systems Biology” Video Lectures</a></td>
<td>MIT计算与系统生物学课程 </td>
</tr>
<tr>
<td><a href="http://manuals.bioinformatics.ucr.edu/home" target="_blank" rel="external">UCR(Institute for In tegrative Genome Biology)</a></td>
<td>Manuals 包括NGS with R/Bioconductor，NGS Analysis with Galaxy and IGV， EMBOSS，Linux 等十分全面。</td>
</tr>
<tr>
<td><a href="https://www.bits.vib.be/training" target="_blank" rel="external">VIB Bioinformatics Core</a></td>
<td>从基础到实践，非常全面</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;常用链接（持续更新）&lt;/blockquote&gt;
    
    </summary>
    
      <category term="常用链接" scheme="https:///AnJingwd.github.io/categories/%E5%B8%B8%E7%94%A8%E9%93%BE%E6%8E%A5/"/>
    
    
      <category term="常用链接" scheme="https:///AnJingwd.github.io/tags/%E5%B8%B8%E7%94%A8%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>bedtools使用教程详解</title>
    <link href="https:///AnJingwd.github.io/2017/08/19/bedtools%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E8%AF%A6%E8%A7%A3/"/>
    <id>https:///AnJingwd.github.io/2017/08/19/bedtools使用教程详解/</id>
    <published>2017-08-19T06:40:56.000Z</published>
    <updated>2017-10-29T12:10:28.348Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;bedtools开发的目的是为了快速，灵活的比较大量的基因组特征（genomic features）。而genomic features通常使用Browser Extensible Data (BED) 或者 General Feature Format (GFF)文件表示，用UCSC Genome Browser进行可视化比较。</p>
<p>&emsp;&emsp;例如,bedtools可以进行取intersect（交集）, merge（并集）, count（计数）, complement（补集），以及用来对广泛使用的基因组文件格式，例如BAM, BED, GFF/GTF, VCF等进行基因组区间的转换。单个的工具设计的目的是应对简单的任务，复杂的分析能通过组合多个bedtools工具操作实现。同时，该工具允许控制输出结果的呈现形式。最初的bedtools版本支持单独的6列BED文件。但是，如今增加了对序列比对BAM文件的支持。以及GFF文件的特征，BED文件。以及VCF文件。这些工具是相当快速的，并且即使是大的数据集也可以在数秒内完成任务。</p>
<a id="more"></a>
<h1 id="我们用bedtools都可以做些啥"><a href="#我们用bedtools都可以做些啥" class="headerlink" title="我们用bedtools都可以做些啥?"></a>我们用bedtools都可以做些啥?</h1><p>&emsp;&emsp;bedtools总共有二三十个工具/命令来处理基因组数据。比较典型而且常用的功能举例如下：格式转换，bam转bed（bamToBed），bed转其他格式（bedToBam，bedToIgv）；对基因组坐标的逻辑运算，包括：交集（intersectBed，windowBed），”邻集“（closestBed），补集（complementBed），并集（mergeBed），差集（subtractBed）;计算覆盖度（coverage）（coverageBed，genomeCoverageBed）；<br>此外，还有一些强大而实用的工具（shuffleBed，groupBy，annotateBed，……）</p>
<table>
<thead>
<tr>
<th>Utility</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>annotate</td>
<td>Annotate coverage of features from multiple files.</td>
</tr>
<tr>
<td>bamtobed</td>
<td>Convert BAM alignments to BED (&amp; other) formats.</td>
</tr>
<tr>
<td>bamtofastq</td>
<td>Convert BAM records to FASTQ records.</td>
</tr>
<tr>
<td>bed12tobed6</td>
<td>Breaks BED12 intervals into discrete BED6 intervals.</td>
</tr>
<tr>
<td>bedpetobam</td>
<td>Convert BEDPE intervals to BAM records.</td>
</tr>
<tr>
<td>bedtobam</td>
<td>Convert intervals to BAM records.<em>**</em></td>
</tr>
<tr>
<td>closest</td>
<td>Find the closest, potentially non-overlapping interval.</td>
</tr>
<tr>
<td>cluster</td>
<td>Cluster (but don’t merge) overlapping/nearby intervals.</td>
</tr>
<tr>
<td>complement</td>
<td>Extract intervals <em>not</em> represented by an interval file.</td>
</tr>
<tr>
<td>coverage</td>
<td>Compute the coverage over defined intervals.</td>
</tr>
<tr>
<td>expand</td>
<td>Replicate lines based on lists of values in columns.</td>
</tr>
<tr>
<td>flank</td>
<td>Create new intervals from the flanks of existing intervals.</td>
</tr>
<tr>
<td>genomecov</td>
<td>Compute the coverage over an entire genome.</td>
</tr>
<tr>
<td>getfasta</td>
<td>Use intervals to extract sequences from a FASTA file.</td>
</tr>
<tr>
<td>groupby</td>
<td>Group by common cols. &amp; summarize oth. cols. (~ SQL “groupBy”)</td>
</tr>
<tr>
<td>igv</td>
<td>Create an IGV snapshot batch script.</td>
</tr>
<tr>
<td>intersect</td>
<td>Find overlapping intervals in various ways.</td>
</tr>
<tr>
<td>jaccard</td>
<td>Calculate the Jaccard statistic b/w two sets of intervals.</td>
</tr>
<tr>
<td>links</td>
<td>Create a HTML page of links to UCSC locations.</td>
</tr>
<tr>
<td>makewindows</td>
<td>Make interval “windows” across a genome.</td>
</tr>
<tr>
<td>map</td>
<td>Apply a function to a column for each overlapping interval.</td>
</tr>
<tr>
<td>maskfasta</td>
<td>Use intervals to mask sequences from a FASTA file.</td>
</tr>
<tr>
<td>merge</td>
<td>Combine overlapping/nearby intervals into a single interval.</td>
</tr>
<tr>
<td>multicov</td>
<td>Counts coverage from multiple BAMs at specific intervals.</td>
</tr>
<tr>
<td>multiinter</td>
<td>Identifies common intervals among multiple interval files.</td>
</tr>
<tr>
<td>nuc</td>
<td>Profile the nucleotide content of intervals in a FASTA file.</td>
</tr>
<tr>
<td>overlap</td>
<td>Computes the amount of overlap from two intervals.</td>
</tr>
<tr>
<td>pairtobed</td>
<td>Find pairs that overlap intervals in various ways.</td>
</tr>
<tr>
<td>pairtopair</td>
<td>Find pairs that overlap other pairs in various ways.</td>
</tr>
<tr>
<td>random</td>
<td>Generate random intervals in a genome.</td>
</tr>
<tr>
<td>reldist</td>
<td>Calculate the distribution of relative distances b/w two files.</td>
</tr>
<tr>
<td>shift</td>
<td>Adjust the position of intervals.</td>
</tr>
<tr>
<td>shuffle</td>
<td>Randomly redistribute intervals in a genome.</td>
</tr>
<tr>
<td>slop</td>
<td>Adjust the size of intervals.</td>
</tr>
<tr>
<td>sort</td>
<td>Order the intervals in a file.</td>
</tr>
<tr>
<td>subtract</td>
<td>Remove intervals based on overlaps b/w two files.</td>
</tr>
<tr>
<td>tag</td>
<td>Tag BAM alignments based on overlaps with interval files.</td>
</tr>
<tr>
<td>unionbedg</td>
<td>Combines coverage intervals from multiple BEDGRAPH files.</td>
</tr>
<tr>
<td>window</td>
<td>Find overlapping intervals within a window around an interval.</td>
</tr>
</tbody>
</table>
<h1 id="BEDTools-suite使用详细"><a href="#BEDTools-suite使用详细" class="headerlink" title="BEDTools suite使用详细"></a>BEDTools suite使用详细</h1><p>bedtools官网：</p>
<p><a href="http://bedtools.readthedocs.io/en/latest/" target="_blank" rel="external">http://bedtools.readthedocs.io/en/latest/</a></p>
<p>bedtools使用说明：</p>
<p><a href="http://quinlanlab.org/tutorials/bedtools/bedtools.html#bedtools-merge" target="_blank" rel="external">http://quinlanlab.org/tutorials/bedtools/bedtools.html#bedtools-merge</a></p>
<p>BEDTools主要使用BED格式的前三列,即：</p>
<ul>
<li>chrom: 染色体信息</li>
<li>start: genome feature的起始位点，从0开始</li>
<li>end: genome feature的终止位点，至少为1</li>
</ul>
<p>一般常用物种的genome file在BEDTools安装目录的/genome里面</p>
<p>BEDPE格式是其自定义的一种新的格式，为了简洁的描述不连续的genome features，例如结构变异和双端测序比对</p>
<p><img src="http://i.imgur.com/IkrWjCV.jpg" alt=""></p>
<p>注意：</p>
<ul>
<li>start1和start2起始坐标第一个碱基都为0，所以start=9, end=20表示碱基跨度是从第10位到第20位</li>
<li>chrom1或者chrom2用.表示unknown;start1，end1,start2,end2用-1表示unknown</li>
</ul>
<h2 id="1-intersect"><a href="#1-intersect" class="headerlink" title="(1)intersect"></a>(1)intersect</h2><p>&emsp;&emsp;可以计算两个或者多个BED/BAM/VCF/GFF文件中基因组坐标位置的交集(overlap)，根据参数不同，可以得到不同的结果。</p>
<h3 id="两个BED文件比较图示"><a href="#两个BED文件比较图示" class="headerlink" title="两个BED文件比较图示"></a>两个BED文件比较图示</h3><p><img src="http://i.imgur.com/Ufi6ll1.jpg" alt=""></p>
<h3 id="一对多比较图示"><a href="#一对多比较图示" class="headerlink" title="一对多比较图示"></a>一对多比较图示</h3><p><img src="http://i.imgur.com/6RXlcnP.jpg" alt=""></p>
<h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><pre><code>bedtools intersect  -a &lt;bed/gff/vcf/bam&gt; -b &lt;bed/gff/vcf/bam&gt; [OPTIONS]
</code></pre><ul>
<li>-wa参数可以报告出原始的在A文件中的feature</li>
<li>-wb参数可以报告出原始的在B文件中的feature</li>
<li>-c参数可以报告出两个文件中的overlap的feature的数量</li>
<li>-wo 返回overlap碱基数</li>
<li>-v 返回非overlap区间</li>
<li>-s 相同链上的feature</li>
</ul>
<p><strong>当用bedtools intersect 处理大文件时比较耗内存，有效的方法是对A和B文件按照染色体名字(chromosome)和位置(position)排序(sort -k1,1 -k2,2n),然后用-sorted参数重新intersect</strong></p>
<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><p><strong>注意，自己生成测试bed文件，都必须用tab键分割，否则会报错！！</strong></p>
<ol>
<li><p>案例一：包含着染色体位置的两个文件，分别记为A文件和B文件。分别来自于不同文件的染色体位置的交集是什么？</p>
<p> $ cat A.bed</p>
<p> chr1 10 20</p>
<p> chr1 30 40</p>
<p> $ cat B.bed</p>
<p> chr1 15 25</p>
<p> $ bedtools intersect -a A.bed -b B.bed </p>
<p> chr1 15 20 </p>
</li>
<li><p>案例二：包含着染色体位置的两个文件，分别记为A文件和B文件。求A文件中哪些染色体位置是与文件B中的染色体位置有overlap.</p>
<p> $ cat A.bed</p>
<p> chr1 10 20</p>
<p> chr1 30 40</p>
<p> $ cat B.bed</p>
<p> chr1 15 25</p>
<p> $ bedtools intersect -a A.bed -b B.bed -wa</p>
<p> chr1 10 20 </p>
</li>
<li><p>案例三：包含着染色体位置的两个文件，分别记为A文件和B文件。求A文件中染色体位置与文件B中染色体位置的交集，以及对应的文件B中的染色体位置.</p>
<p> $ cat A.bed</p>
<p> chr1 10 20</p>
<p> chr1 30 40</p>
<p> $ cat B.bed</p>
<p> chr1 15 25</p>
<p> $ bedtools intersect -a A.bed -b B.bed -wb</p>
<p> chr1 15 20 chr1 15 25</p>
</li>
<li><p>案例四（经用）： 包含着染色体位置的两个文件，分别记为A文件和B文件。求对于A文件的染色体位置是否与文件B中的染色体位置有交集。如果有交集，分别输入A文件的染色体位置和B文件的染色体位置；如果没有交集，输入A文件的染色体位置并以’. -1 -1’补齐文件。</p>
<p> $ cat A.bed</p>
<p> chr1 10 20</p>
<p> chr1 30 40</p>
<p> $ cat B.bed</p>
<p> chr1 15 25</p>
<p> $ bedtools intersect -a A.bed -b B.bed -loj</p>
<p> chr1 10 20 chr1 15 25</p>
<p> chr1 30 40 . -1 -1</p>
</li>
<li><p>案例五：  包含着染色体位置的两个文件，分别记为A文件和B文件。对于A文件中染色体位置，如果和B文件中染色体位置有overlap,则输出在A文件中染色体位置和在B文件中染色体位置，以及overlap的长度.</p>
<p> $ cat A.bed</p>
<p> chr1 10 20</p>
<p> chr1 30 40</p>
<p> $ cat B.bed</p>
<p> chr1 15 20</p>
<p> chr1 18 25</p>
<p> $ bedtools intersect -a A.bed -b B.bed -wo</p>
<p> chr1 10 20 chr1 15 20 5</p>
<p> chr1 10 20 chr1 18 25 2 </p>
</li>
<li><p>案例六：  包含着染色体位置的两个文件，分别记为A文件和B文件。对于A文件中染色体位置，如果和B文件中染色体位置有overlap,则输出在A文件中染色体位置和在B文件中染色体位置，以及overlap的长度；如果和B文件中染色体位置都没有overlap,则用’. -1-1’补齐文件</p>
<p> $ cat A.bed</p>
<p> chr1 10 20</p>
<p> chr1 30 40</p>
<p> $ cat B.bed</p>
<p> chr1 15 20</p>
<p> chr1 18 25</p>
<p> $ bedtools intersect -a A.bed -b B.bed -wao</p>
<p> chr1 10 20 chr1 15 20 5</p>
<p> chr1 10 20 chr1 18 25 2 </p>
<p> chr1 30 40 . -1 -1</p>
</li>
<li><p>案例七：  包含着染色体位置的两个文件，分别记为A文件和B文件。对于A文件中染色体位置，输出在A文件中染色体位置和有多少B文件染色体位置与之有overlap.</p>
<p> $ cat A.bed</p>
<p> chr1 10 20</p>
<p> chr1 30 40</p>
<p> $ cat B.bed</p>
<p> chr1 15 20</p>
<p> chr1 18 25</p>
<p> $ bedtools intersect -a A.bed -b B.bed -c</p>
<p> chr1 10 20 2</p>
<p> chr1 30 40 0 </p>
</li>
<li><p>案例八(常用)：  包含着染色体位置的两个文件，分别记为A文件和B文件。对于A文件中染色体位置，输出在A文件中染色体位置和与B文件染色体位置至少有X%的overlap的记录。</p>
<p> $ cat A.bed</p>
<p> chr1 100 200</p>
<p> $ cat B.bed</p>
<p> chr1 130 201</p>
<p> chr1 180 220</p>
<p> $ bedtools intersect -a A.bed -b B.bed -f 0.50 -wa -wb  </p>
<p> chr1 100 200 chr1 130 201 </p>
</li>
</ol>
<h2 id="2-merge"><a href="#2-merge" class="headerlink" title="(2)merge"></a>(2)merge</h2><p>&emsp;&emsp;用于合并位于同一个bed/gff/vcf 文件中有overlap或者距离在一定范围内的相邻区间，距离可由参数(-d)定义。需要注意的是，做合并之前需要先对bed文件做根据染色体排序，可以用bedtoolssort命令实现。</p>
<h3 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h3><p><img src="http://i.imgur.com/CLbhHg9.jpg" alt=""></p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><pre><code>bedtools merge [OPTIONS] -i &lt;bed/gff/vcf&gt;
</code></pre><h3 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h3><pre><code>$ cat A.bed

chr2 10 20

chr1 30 40

chr1 15 20

chr1 18 25
</code></pre><p>排序：</p>
<pre><code>sort -k1,1 -k2,2n A.bed &gt; A.sort.bed

$ cat A.sort.bed 

chr1 15 20

chr1 18 25

chr1 30 40

chr2 10 20
</code></pre><ol>
<li><p>案例一：取并集</p>
<p> bedtools merge -i A.sort.bed</p>
<p> chr1    15    25</p>
<p> chr1    30    40</p>
<p> chr2    10    20</p>
</li>
<li><p>案例二：计算重叠区间的个数,-i 指定统计的列，-o指定操作5</p>
<p> bedtools merge -i exons.bed -c 1 -o count</p>
<p> chr1    15    25    2</p>
<p> chr1    30    40    1</p>
<p> chr2    10    20    1</p>
</li>
<li><p>案例三：-d 两个独立区域间距小于（等于）该值时将被合并为一个区域；-o collapse显示合并了哪些标签</p>
<p> $ bedtools merge -i A.sort.bed -d 5 -c 1 -o count，collapse</p>
<p> chr1    15    40    3    chr1,chr1,chr1</p>
<p> chr2    10    20    1    chr2</p>
</li>
</ol>
<h2 id="3-complement：返回基因组非覆盖区（用途，比如多轮设计panel"><a href="#3-complement：返回基因组非覆盖区（用途，比如多轮设计panel" class="headerlink" title="(3)complement：返回基因组非覆盖区（用途，比如多轮设计panel)"></a>(3)complement：返回基因组非覆盖区（用途，比如多轮设计panel)</h2><h3 id="图示-1"><a href="#图示-1" class="headerlink" title="图示"></a>图示</h3><p><img src="http://i.imgur.com/k26Ar7F.jpg" alt=""></p>
<h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><pre><code>bedtools complement -i &lt;BED/GFF/VCF&gt; -g &lt;genome files&gt;
</code></pre><h2 id="4-genomecov：染色体和全基因组覆盖度计算"><a href="#4-genomecov：染色体和全基因组覆盖度计算" class="headerlink" title="(4)genomecov：染色体和全基因组覆盖度计算"></a>(4)genomecov：染色体和全基因组覆盖度计算</h2><p>要求：单个输入bed文件（-i指定）和genome files；如果输入为bam(-ibam指定)文件，则不需要genome files</p>
<h3 id="图示-2"><a href="#图示-2" class="headerlink" title="图示"></a>图示</h3><p><img src="http://i.imgur.com/5kHXyrU.jpg" alt=""></p>
<h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><pre><code>bedtools genomecov [OPTIONS] -i &lt;bed/gff/vcf&gt; -g &lt;genome&gt;
</code></pre><h3 id="案例-2"><a href="#案例-2" class="headerlink" title="案例"></a>案例</h3><pre><code>$ cat ranges-cov-sorted.bed
chr1    4       9
chr1    1       6
chr1    8       19
chr1    25      30
chr2    0       20

$ cat cov.txt  （染色体及每条染色体总碱基数）
chr1    30
chr2    20

bedtools genomecov -i ranges-cov-sorted.bed -g cov.txt
chr1    0       7       30      0.233333 1
chr1    1       20      30      0.666667
chr1    2       3       30      0.1
chr2    1       20      20      1 2
genome  0       7       50      0.14 3
genome  1       40      50      0.8
genome  2       3       50      0.06
#name 覆盖次数 覆盖碱基数 总碱基数   覆盖度
#同时计算单染色体和全基因组覆盖度
</code></pre><ul>
<li>ranges-cov.bed文件需提前排序sort -k1,1 ranges-cov.bed &gt; ranges-cov-sorted.bed</li>
<li>-bg参数可得到每个碱基的覆盖度。</li>
</ul>
<h2 id="5-coverage-计算染色体给定区间覆盖度，输入可以是-BAM-文件"><a href="#5-coverage-计算染色体给定区间覆盖度，输入可以是-BAM-文件" class="headerlink" title="(5)coverage 计算染色体给定区间覆盖度，输入可以是 BAM 文件"></a>(5)coverage 计算染色体给定区间覆盖度，输入可以是 BAM 文件</h2><pre><code>$ cat A.bed
chr1  0   100
chr1  100 200
chr2  0   100

$ cat B.bed
chr1  10  20
chr1  20  30
chr1  30  40
chr1  100 200

$ bedtools coverage -a A.bed -b B.bed
chr1  0   100  3  30  100 0.3000000
chr1  100 200  1  100 100 1.0000000
chr2  0   100  0  0   100 0.0000000
#name 覆盖次数 覆盖碱基数 总碱基数   覆盖度
</code></pre><h2 id="6-getfasta：提取序列"><a href="#6-getfasta：提取序列" class="headerlink" title="(6)getfasta：提取序列"></a>(6)getfasta：提取序列</h2><p>提取指定位置的 DNA 序列，也是很好用的一个功能，反向互补链也可以提，不用自己写脚本提了</p>
<h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><pre><code>bedtools getfasta [OPTIONS] -fi &lt;fasta&gt; -bed &lt;bed/gff/vcf&gt; -fo &lt;fasta&gt; 
</code></pre><h3 id="案例-3"><a href="#案例-3" class="headerlink" title="案例"></a>案例</h3><p>要求：基因组fasta文件（-fi指定）,提取区间BED/GTF/GFF/VCF文件(-bed指定),输出文件FASTA（-fo 指定）</p>
<pre><code>bedtools getfasta -fi Mus_musculus.GRCm38.75.dna_rm.toplevel_chr1.fa -bed mm_GRCm38_3kb_promoters.gtf -fo mm_GRCm38_3kb_promoters.fasta
</code></pre><p>扩展：</p>
<p>提取序列之samtools（速度较快）</p>
<pre><code>#首先建立fai索引文件（第一列为染色体名字，第二列为序列碱基数）

samtools faidx Mus_musculus.GRCm38.75.dna.chromosome.8.fa

#序列提取，多提取区间空格隔开

samtools faidx Mus_musculus.GRCm38.75.dna.chromosome.8.fa \
 8:123407082-123410744 8:123518835-123536649

&gt;8:123407082-123410744
GAGAAAAGCTCCCTTCTTCTCCAGAGTCCCGTCTACCCTGGCTTGGCGAGGGAAAGGAAC
CAGACATATATCAGAGGCAAGTAACCAAGAAGTCTGGAGGTGTTGAGTTTAGGCATGTCT
[...]

&gt;8:123518835-123536649
TCTCGCGAGGATTTGAGAACCAGCACGGGATCTAGTCGGAGTTGCCAGGAGACCGCGCAG
CCTCCTCTGACCAGCGCCCATCCCGGATTAGTGGAAGTGCTGGACTGCTGGCACCATGGT
[...]
</code></pre><h2 id="7-nuc-计算GC含量即各碱基数"><a href="#7-nuc-计算GC含量即各碱基数" class="headerlink" title="(7)nuc: 计算GC含量即各碱基数"></a>(7)nuc: 计算GC含量即各碱基数</h2><h3 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h3><pre><code>bedtools nuc [OPTIONS] -fi &lt;fasta&gt; -bed &lt;bed/gff/vcf&gt;
</code></pre><p>Options: </p>
<pre><code>-fi     输入FASTA文件

-bed     提取区间BED/GTF/GFF/VCF文件(-bed指定)
</code></pre><h3 id="案例-4"><a href="#案例-4" class="headerlink" title="案例"></a>案例</h3><pre><code>bedtools nuc -fi hg19.fa -bed CDS.bed
</code></pre><p>输出结果解释：在原bed文件每行结尾增加以下几列</p>
<p>Output format:<br>The following information will be reported after each BED entry:</p>
<pre><code>1) %AT content
2) %GC content
3) Number of As observed
4) Number of Cs observed
5) Number of Gs observed
6) Number of Ts observed
7) Number of Ns observed
8) Number of other bases observed
9) The length of the explored sequence/interval.
10) The seq. extracted from the FASTA file. (opt., if -seq is used)
11) The number of times a user&apos;s pattern was observed.
    (opt., if -pattern is used.)
</code></pre><h1 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h1><p><a href="http://gettinggeneticsdone.blogspot.com/2014/03/visualize-coverage-exome-targeted-ngs-bedtools.html" target="_blank" rel="external">Coverage analysis for targeted DNA capture</a></p>
<p><a href="http://www.cureffi.org/2013/11/18/an-mrna-seq-pipeline-using-gsnap-samtools-cufflinks-and-bedtools/" target="_blank" rel="external">RNA-seq coverage analysis</a></p>
<h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><p>（1）王球爸的博客：</p>
<p><a href="http://blog.sina.com.cn/s/blog_5d5f892a0102v665.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_5d5f892a0102v665.html</a></p>
<p>（2）生信人</p>
<p><a href="https://www.wxzhi.com/archives/871/gk4yd3ujan57e0ft/" target="_blank" rel="external">https://www.wxzhi.com/archives/871/gk4yd3ujan57e0ft/</a></p>
<p>（3）hope</p>
<p><a href="http://tiramisutes.github.io/2016/03/18/bedtools.html" target="_blank" rel="external">http://tiramisutes.github.io/2016/03/18/bedtools.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;bedtools开发的目的是为了快速，灵活的比较大量的基因组特征（genomic features）。而genomic features通常使用Browser Extensible Data (BED) 或者 General Feature Format (GFF)文件表示，用UCSC Genome Browser进行可视化比较。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;例如,bedtools可以进行取intersect（交集）, merge（并集）, count（计数）, complement（补集），以及用来对广泛使用的基因组文件格式，例如BAM, BED, GFF/GTF, VCF等进行基因组区间的转换。单个的工具设计的目的是应对简单的任务，复杂的分析能通过组合多个bedtools工具操作实现。同时，该工具允许控制输出结果的呈现形式。最初的bedtools版本支持单独的6列BED文件。但是，如今增加了对序列比对BAM文件的支持。以及GFF文件的特征，BED文件。以及VCF文件。这些工具是相当快速的，并且即使是大的数据集也可以在数秒内完成任务。&lt;/p&gt;
    
    </summary>
    
      <category term="NGS软件" scheme="https:///AnJingwd.github.io/categories/NGS%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="NGS软件" scheme="https:///AnJingwd.github.io/tags/NGS%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>全基因组关联分析(GWAS)简介</title>
    <link href="https:///AnJingwd.github.io/2017/08/18/GWAS-%E7%AE%80%E4%BB%8B/"/>
    <id>https:///AnJingwd.github.io/2017/08/18/GWAS-简介/</id>
    <published>2017-08-18T08:12:07.000Z</published>
    <updated>2017-08-29T01:21:06.034Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GWAS介绍"><a href="#GWAS介绍" class="headerlink" title="GWAS介绍"></a>GWAS介绍</h1><p>&emsp;&emsp;全基因组关联分析是对多个个体在全基因组范围的遗传变异多态性进行检测，获得基因型，进而将基因型与可观测的性状，即表型，进行群体水平的统计学分析，根据统计量或P值筛选出最有可能影响该性状的遗传变异。</p>
<p><img src="http://i.imgur.com/tG0jxKr.png" alt=""></p>
<h1 id="分析流程"><a href="#分析流程" class="headerlink" title="分析流程"></a>分析流程</h1><p><strong>材料选择，性状调查，基因分型，模型选择，关联结果，数据深度挖掘</strong></p>
<p><strong>GWAS分析选材原则</strong></p>
<ul>
<li>保证选取的样本具有足够的代表性；</li>
<li>样本中不能有明显的亚群分化（例如生殖隔离等），因为明显分化的群体会使得遗传背景的噪音较大；</li>
<li>建议选择几个比较重要且遗传力较高的表型性状作为研究的重点；</li>
<li>质量性状尽量为0、1二值性状，并且两类性状的样本数应当尽量相近；</li>
<li>数量性状尽量精确量化记录（如抗病性可以量化为发病率、死亡率、存活率、病斑数、病斑面积等，而不是简单的多级衡量），并使表型总体呈近似正态分布；</li>
<li>栽培植物可以进行多年多点多重复记录，多年多点的观测结果可以分别进行关联分析，多重复可以取平均值进行关联分析；</li>
<li>表型变异丰富、性状有明显的主效位点控制时样本量可以适当减小，推荐200个以上；表型差异较小，多基因控制时样本量应当增大，推荐500个以上。</li>
</ul>
<p>自然群体GWAS的研究对象<br>非严格遗传群体：</p>
<ol>
<li>种质资源</li>
<li>半同胞家系，混合家系</li>
<li>MAGIC/NAM家系</li>
<li>多个F2/RIL/全同胞家系</li>
<li>高杂合类物种：F1群体</li>
</ol>
<p>师兄你好！<br>打扰百忙之中的你，学弟我甚感抱歉。我是南农的在读研究生，正在试图运用关联分析方法进行大豆各性状的QTL分析研究，很荣幸拜读了你发表在《TAG》和《作物学报》上的几篇文章，受益匪浅。</p>
<p>由于底子浅薄，我对关联分析方面的一些问题不能很透彻地理解。比如在群体材料方面，<strong>关联分析要求材料应为相互间无直接亲缘关系。请问这一要求是为了能获得更多更广泛的等位基因数目、获得更好的多态吗？</strong> 这一要求是不是也与群体LD的强弱有关？然而即使材料间没有直接亲缘关系，但是当取材时如果这些材料出现产地位置的结构特征，而会使分析结果产生假阳性。为避免产生假阳性得用STRUCTURE对群体结构进行校正，请问这里所用的软件（STRUCTURE）和方法，与SA方法中对群体分层进行校正所用的相同吗？</p>
<p>期待你的回信与帮助，谢谢！</p>
<p>你好，感谢你对我研究的关注。</p>
<p><strong>材料选择所要求的无直接亲缘关系，主要是为了避免等位变异在家族的传递不平衡，以及由于亲缘关系造成的群体的亚分等群体结构问题，因此获得更多更广泛的等位基因数目及多态不是问题的核心。</strong></p>
<p><strong>材料不管怎么选都会有假阴、假阳这样那样的问题</strong>，因此你所说的“产地位置的结构特征，而会使分析结果产生假阳性”不无可能，这 才使得人们考虑用<strong>统计方法做矫正</strong>；structure软件分析原理我的论文里有所涉及，如要深究可参考论文后给出的参考文献 Pritchard J K, Stephens M, Donnelly P. Inference of population structure using multilocus genotype data. Genetics, 2000, 155:945-959<br>， 可以肯定的说它与SA方法中对群体分层进行校正所用的不相同。</p>
<p><strong>模型选择</strong></p>
<p><img src="http://i.imgur.com/AYIEPHG.png" alt=""></p>
<p>&emsp;&emsp;目前的 GWAS 多采用两个阶段的设计：首先采用覆盖整个基因组的高通量 SNP 分型芯片（如affy6.0）对一批样本进行扫描，然后筛选出最显著的 SNP（如 P&lt;10-7）供第二阶段进行扩大样本验证,<strong>第一步选的snp大多是tag snp</strong>。GWAS 两阶段研究设计减少了基因分型的工作量和花费，同时通过重复实验降低了研究的假阳性率。GWAS 的整体过程比较复杂，其大致流程如下：</p>
<ol>
<li>经过处理的 DNA 样品与高通量的 SNP 分型芯片进行杂交；</li>
<li>通过特定的扫描仪对芯片进行扫描，将每个样品所有的 SNP 分型信息以数字形式储存于计算机中</li>
<li>对原始数据进行质控，检测分型样本和位点的得率（call rate） 、病例对照的匹配程度、人群结构的分层情况等；</li>
<li>对经过各种严格质控的数据进行关联分析；</li>
<li>根据关联分析结果，综合考虑基因功能多方面因素后，筛选出最有意义的一批 SNP 位点；</li>
<li>根据需要验证 SNP 的数量选择合适通量的基因分型技术在独立样本中进行验证；</li>
<li>合并分析 GWAS 两阶段数据。</li>
</ol>
<h1 id="关联分析的优点"><a href="#关联分析的优点" class="headerlink" title="关联分析的优点"></a>关联分析的优点</h1><p>（1）不需要专门构建作图群体，自然群体或种质资源都可作为研究材料；<br>（2）广泛的遗传材料可同时考察多个性状大多数QTL关联位点及其等位变异，不受传统的FBL的“两亲本范围”的限制；<br>（3）自然群体经历了许多轮重组后，LD衰减，存在于很短的距离内，保证了定位的更高精确性</p>
<h1 id="生物信息学中的连锁分析与关联分析有哪些区别和联系？"><a href="#生物信息学中的连锁分析与关联分析有哪些区别和联系？" class="headerlink" title="生物信息学中的连锁分析与关联分析有哪些区别和联系？"></a>生物信息学中的连锁分析与关联分析有哪些区别和联系？</h1><ol>
<li>连锁分析的定位依赖于家族中标记基因型与表现性的共分离，从而探知影响疾病风险的遗传位点</li>
<li>关联分析的定位方法则是通过探测在种群水平上，哪个基因型或等位基因位点与表现性有关，并且这种相关能够在家系样本或者随机个体间实现（GWAS）</li>
</ol>
<h1 id="关联分析与-QTL定位的区别"><a href="#关联分析与-QTL定位的区别" class="headerlink" title="关联分析与 QTL定位的区别"></a>关联分析与 QTL定位的区别</h1><p><img src="http://i.imgur.com/3vB61sp.png" alt=""></p>
<h1 id="全基因组关联研究-GWAS-后的新热点？"><a href="#全基因组关联研究-GWAS-后的新热点？" class="headerlink" title="全基因组关联研究(GWAS)后的新热点？"></a>全基因组关联研究(GWAS)后的新热点？</h1><p>&emsp;&emsp;<strong>GWAS的目的是从常见基因突变(common variant，&gt;5％的人口所具有的突变)中来找到至病的变异。现在越来越多的人开始还疑这个昂贵方法的普适性。</strong> 因为到目前为止，没有一个真正成功地用这个方法找到至病的变异，只能找到一些似是而非的、有统计意义但没有什么用的突变。</p>
<p><strong>现在，有些人认为应该找罕见基因突变（rare variant，0.1-1％的人口所具有的突变）中来找到至病的变异。对于这样的变异，GWAS的方法就无效了。这个提议的假定是常见基因突变致病可能性不大，只有罕见基因突变才能致病。</strong>Hall的文中提到普林斯顿大学教授David Botstein认为1.4亿美金的HapMap(人类基因组单体型图计划)是巨大的失败(magnificent failure)。</p>
<p>所以在可见的将来，随着下一代测序技术(Next generation sequencing)的普及，寻找常见基因突变的GWAS的死亡将催生寻找罕见基因突变的方法及其应用。一个新的热点即将涌现。</p>
<p>&emsp;&emsp;我不认为GWAS是一个完全的失败，对于有些疾病还是发现了一些治病基因的。Nature Genetics上有很多的例子。另外，HapMap我也不认为是一个彻底的失败。毕竟，很多信息具有重大的参考价值，比如Allele frequency，不做怎么知道呢？第三，rare variants究竟有多大的作用还是一个比较不明朗的命题。如果真的是只有rare variants才能导致疾病，那每个人的治病基因就都不一样了。我同意你的结论，next generation sequencing是技术发展的根本，<strong>但是我觉得除了rare variants之外，通过NGS找到novel variation，进而找到causal variation也会是一个重要的研究方向。</strong> 在这里面，bioinformatics（而不是statistician）的作用就会更为明显。</p>
<h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><p>（1）<a href="http://blog.sciencenet.cn/blog-472757-376473.html" target="_blank" rel="external">http://blog.sciencenet.cn/blog-472757-376473.html</a></p>
<p>（2）<a href="http://blog.sina.com.cn/s/blog_4b55f4130100us1m.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_4b55f4130100us1m.html</a></p>
<p>（3）<a href="http://blog.sina.com.cn/s/blog_4b55f4130100ibtg.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_4b55f4130100ibtg.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;GWAS介绍&quot;&gt;&lt;a href=&quot;#GWAS介绍&quot; class=&quot;headerlink&quot; title=&quot;GWAS介绍&quot;&gt;&lt;/a&gt;GWAS介绍&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;全基因组关联分析是对多个个体在全基因组范围的遗传变异多态性进行检测，获得基因型，进而
    
    </summary>
    
      <category term="GWAS" scheme="https:///AnJingwd.github.io/categories/GWAS/"/>
    
    
      <category term="GWAS" scheme="https:///AnJingwd.github.io/tags/GWAS/"/>
    
  </entry>
  
  <entry>
    <title>linux解压缩</title>
    <link href="https:///AnJingwd.github.io/2017/08/16/linux%E8%A7%A3%E5%8E%8B%E7%BC%A9/"/>
    <id>https:///AnJingwd.github.io/2017/08/16/linux解压缩/</id>
    <published>2017-08-16T02:48:41.000Z</published>
    <updated>2017-10-22T08:58:34.607Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">总结下linux下各种压缩文件的解压方法及批量解压</blockquote>

<a id="more"></a>
<p>首先要弄清两个概念：打包 和 压缩：</p>
<ul>
<li>打包 是指将一大堆文件或目录变成一个总的文件； </li>
<li>压缩 则是将一个大的文件通过一些压缩算法变成一个小文件。</li>
</ul>
<p>&emsp;&emsp;Linux中很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你得先将这一大堆文件先打成一个包（tar命令），然后再用压缩程序进行压缩（gzip bzip2命令）。</p>
<h1 id="单个解压"><a href="#单个解压" class="headerlink" title="单个解压"></a>单个解压</h1><ol>
<li>*.tar 用 tar -xvf 解压</li>
<li>*.gz 用 gzip -d或者gunzip 解压</li>
<li><em>.tar.gz和</em>.tgz 用 tar -xzf 解压</li>
<li>*.bz2 用 bzip2 -d或者用bunzip2 解压</li>
<li>*.tar.bz2用tar -xjf 解压</li>
<li>*.Z 用 uncompress 解压</li>
<li>*.tar.Z 用tar -xZf 解压</li>
<li>*.rar 用 unrar e解压</li>
<li>*.zip 用 unzip 解压</li>
<li><p>*.tar.xz 用</p>
<p>$xz -d <em>*</em>.tar.xz</p>
<p>$tar -xvf  <em>*</em>.tar</p>
</li>
<li><p>*.tgz 用tar zxvf 解压</p>
</li>
</ol>
<h1 id="单个压缩文件"><a href="#单个压缩文件" class="headerlink" title="单个压缩文件"></a>单个压缩文件</h1><ol>
<li>gzip File 压缩为.gz文件</li>
<li>bzip2 File 压缩为.bz2文件</li>
<li>zip [打包后的文件名] [打包的目录路径] 压缩为.zip文件</li>
<li>压缩一个或多个文件/文件夹<br>格式：tar -options compressed_file files_to_be_compressed<ol>
<li>tar –zcvf 运行 + gzip 产生 a .tar.gz 文件</li>
<li>tar –jcvf 运行 tar + bzip2 产生 a .tbz2 文件</li>
<li>tar –cvf p运行 tar 产生 a .tar 文件</li>
</ol>
</li>
</ol>
<h1 id="批量解压"><a href="#批量解压" class="headerlink" title="批量解压"></a>批量解压</h1><ol>
<li><p>方法一：</p>
<p>  for i in $(ls *.tar.gz);do tar xvf $i;done</p>
</li>
</ol>
<ol>
<li><p>方法二:</p>
<p> for tarfile in *.tar.gz;  do tar -xvf $tarfile; done</p>
</li>
<li><p>方法三:</p>
<p>  ls *.tar.gz|xargs -n1 tar xzvf</p>
</li>
</ol>
<p>&emsp;&emsp;xargs 是一条 Unix 和类 Unix 操作系统的常用命令；它的作用是将参数列表转换成小块分段传递给其他命令，以避免参数列表过长的问题。</p>
<p>例如：</p>
<p>echo “1 2 3 4”|xargs -n1<br>1<br>2<br>3<br>4<br>echo “1 2 3 4”|xargs -n2<br>1 2<br>3 4</p>
<p>所以，加n1参数，则*.tar.gz会拆成每个tar.gz文件后，一个一个传给tar xzvf命令</p>
<ol>
<li><p>方法四：</p>
<p> find -maxdepth 1 -name “*.tar.gz”|xargs -i tar xvzf {}</p>
</li>
</ol>
<p>&emsp;&emsp;这条命令可解压当前目录下的所有gz文件，maxdepth表示搜索深度，1代表只搜索当前目录</p>
<h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>使用tar -xvf *.tar.gz会出错，提示“Not found in archive”？</p>
<p>通配符是shell解决的问题,如</p>
<blockquote>
<p>tar -xvf *.tar.gz</p>
</blockquote>
<p>实际上执行tar时，tar接收到的是</p>
<blockquote>
<p>tar -xvf a.tar.gz  b.tar.gz  c.tar.gz …</p>
</blockquote>
<p>如果当前目录跟本没有tar的东西，那么tar就收到’*.tar.gz’这个参数</p>
<p>与win不同，linux所有字符都可以作文件名，也即目录中不存在着 *.tar.gz这个文件</p>
<h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><p>同样可以利用for循环遍历操作某一类文件，比如批量建索引。</p>
<pre><code>for i in `ls`
do
        samtools faidx $i
done
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;总结下linux下各种压缩文件的解压方法及批量解压&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https:///AnJingwd.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https:///AnJingwd.github.io/tags/linux/"/>
    
  </entry>
  
</feed>
